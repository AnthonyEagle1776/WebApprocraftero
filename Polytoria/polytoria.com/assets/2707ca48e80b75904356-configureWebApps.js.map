{"version":3,"sources":["webpack:///./ts/webAppsConfiguration/configuration.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///external \"CoreUtilities\"","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./js/react/configureWebApps/components/ConfigurationPanel.jsx","webpack:///./ts/webAppsConfiguration/staticBundlesInfo.ts","webpack:///./js/react/configureWebApps/configureWebAppsEntry.jsx"],"names":["getADFromCookie","cookies","document","cookie","split","currentAD","forEach","currentCookie","trim","startsWith","suffixOfWebApp","currentValues","pop","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","CoreUtilities","React","ReactDOM","setADInCookie","value","hostname","encodeURIComponent","window","location","substring","indexOf","length","readme","ConfigurationPanel","useState","feedback","setFeedback","isPanelMinimized","setPanelMinimized","configureWebApps","adValue","setAdValue","setup","e","target","toLowerCase","placeHolder","className","type","onClick","currentValue","variant","size","id","name","placeholder","onChange","onBlur","propTypes","getAllBundleNames","allBundleScripts","Array","slice","scripts","filter","script","dataset","bundlename","allBundles","map","bundleScript","bundleSource","bundleContext","findBundleStatus","bundleNames","isArray","bundleName","ready","getElementById","render","body","appendChild","createElement","ConfigureWebApps","StaticBundlesInfo","staticBundlesInfo"],"mappings":"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","file":"configureWebApps.bundle.min.js","sourcesContent":["const getCurrentDomain = (): string => {\r\n  const hostname = window?.location?.hostname ?? '';\r\n  return hostname.substring(hostname.indexOf('.') + 1);\r\n};\r\n\r\nconst suffixOfWebApp = 'WebAppComponentSuffix';\r\n\r\nconst readme =\r\n  'setADInCookie({AD username}) is for set AD into cookie; getADFromCookie() returns current Current AD from cookie. For more questions, ask in #web-frontend-guild slack channel';\r\n\r\nconst getADFromCookie = (): string => {\r\n  const cookies = document.cookie.split(';');\r\n  let currentAD = null;\r\n  cookies.forEach(cookie => {\r\n    const currentCookie = cookie.trim();\r\n    if (currentCookie && currentCookie.startsWith(suffixOfWebApp)) {\r\n      const currentValues = currentCookie.split('=');\r\n      currentAD = currentValues.pop();\r\n    }\r\n  });\r\n  return currentAD;\r\n};\r\n\r\nconst setADInCookie = (value: string): string => {\r\n  let currentAD: string = getADFromCookie();\r\n  const cookie = `${suffixOfWebApp}=${encodeURIComponent(\r\n    value\r\n  )}; path=/; domain=.${getCurrentDomain()};`;\r\n  document.cookie = cookie;\r\n\r\n  if (currentAD?.length > 0 && value?.length === 0) {\r\n    return 'You have reset back to master build';\r\n  }\r\n  currentAD = getADFromCookie();\r\n  if (currentAD?.length > 0 && value?.length === 0) {\r\n    return 'You have reset back to master build';\r\n  }\r\n  if (currentAD === value) {\r\n    return `Nice, you have set ${value} in cookie successfully!`;\r\n  }\r\n  return `Oh no, you have not set ${value} in cookie, could you try again ? or contact #web-frontend-guild slack channel`;\r\n};\r\n\r\nexport default {\r\n  setADInCookie,\r\n  getADFromCookie,\r\n  readme\r\n};\r\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = CoreUtilities;","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","import React, { useState } from 'react';\r\nimport configureWebApps from '../../../../ts/webAppsConfiguration/configuration';\r\n\r\nfunction ConfigurationPanel() {\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [isPanelMinimized, setPanelMinimized] = useState(false);\r\n  const [adValue, setAdValue] = useState(configureWebApps.getADFromCookie());\r\n  const instruction = 'Enter your AD for local development branch or master for master branch';\r\n  const masterBranch = 'master';\r\n  const setup = e => {\r\n    let { value } = e.target;\r\n    if (value !== adValue) {\r\n      if (value.toLowerCase() === masterBranch) {\r\n        value = '';\r\n      }\r\n      setAdValue(value);\r\n      configureWebApps.setADInCookie(value);\r\n      setFeedback(\r\n        `The local development is point to ${value || masterBranch} now. Please reload web page`\r\n      );\r\n    }\r\n  };\r\n  const togglePanel = () => {\r\n    setPanelMinimized(currentValue => !currentValue);\r\n  };\r\n  const placeHolder = adValue || 'AD username (e.g. brose)';\r\n  return (\r\n    <div\r\n      className={`configure-webapps-container font-small ${isPanelMinimized ? 'minimized' : ''}`}>\r\n      <div className='clearfix'>\r\n        <button\r\n          type='button'\r\n          className='minimize-control font-bold'\r\n          onClick={togglePanel}\r\n          variant='secondary'\r\n          size='xs'>\r\n          {isPanelMinimized ? '-' : '+'}\r\n        </button>\r\n      </div>\r\n      {!isPanelMinimized && (\r\n        <React.Fragment>\r\n          <p className='font-small'>{instruction}</p>{' '}\r\n          <input\r\n            id='webapp-component-suffix'\r\n            className='form-control font-small input-field'\r\n            name='webapp-component'\r\n            placeholder={placeHolder}\r\n            value={adValue}\r\n            onChange={setup}\r\n            onBlur={setup}\r\n          />\r\n          {feedback != null && <p className='font-small text-success'>{feedback}</p>}\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nConfigurationPanel.propTypes = {};\r\n\r\nexport default ConfigurationPanel;\r\n","function findAllBundleScripts() {\r\n  // JS\r\n  const allScripts: HTMLScriptElement[] = <HTMLScriptElement[]>(\r\n    Array.prototype.slice.call(document.scripts)\r\n  );\r\n  const allBundles: HTMLScriptElement[] = allScripts.filter(script => {\r\n    return script?.dataset && script?.dataset?.bundlename;\r\n  });\r\n  return allBundles;\r\n}\r\n\r\nconst getAllBundleNames = (): Record<string, DOMStringMap> => {\r\n  const allBundleScripts: HTMLScriptElement[] = findAllBundleScripts();\r\n  const allBundles: Record<string, DOMStringMap> = {};\r\n  allBundleScripts.map(bundleScript => {\r\n    const { bundlename, bundleSource, bundleContext } = bundleScript.dataset;\r\n    allBundles[bundlename] = {\r\n      bundleSource: bundleSource === 'Main' ? 'Master Build' : `${bundleSource} Build`,\r\n      bundleContext: bundleContext ?? ''\r\n    };\r\n    return false;\r\n  });\r\n  return allBundles;\r\n};\r\n\r\nconst findBundleStatus = (\r\n  bundleNames: string | string[]\r\n): DOMStringMap | string | (string | DOMStringMap)[] => {\r\n  if (bundleNames) {\r\n    const allBundleInfo = getAllBundleNames();\r\n    if (typeof bundleNames === 'string') {\r\n      return allBundleInfo[bundleNames] ?? `${bundleNames} is not found`;\r\n    }\r\n    if (Array.isArray(bundleNames)) {\r\n      return bundleNames.map(bundleName => {\r\n        return allBundleInfo[bundleName] ?? `${bundleName} is not found`;\r\n      });\r\n    }\r\n  }\r\n\r\n  return `Expect valid argument inside findBundleStatus, either single string name or array of names`;\r\n};\r\n\r\nconst readme =\r\n  'Master build means the official deployed build from admin site in the current environment; \\n\\n Validation Build means the current build is only deployed for validation (VPN users will see only); \\n\\n Development build is the resource from Engineer local build, depend on which AD setup in to cookie, check ConfigureWebApps.getADFromCookie(); \\n\\n Unknown Build might be translation string bundle or invalid ';\r\n\r\nexport default {\r\n  getAllBundleNames,\r\n  findBundleStatus,\r\n  readme\r\n};\r\n","import { ready } from 'core-utilities';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport ConfigurationPanel from './components/ConfigurationPanel';\r\n\r\nimport configureWebApps from '../../../ts/webAppsConfiguration/configuration';\r\nimport '../../../css/configureWebApps/configureWebApps.scss';\r\nimport staticBundlesInfo from '../../../ts/webAppsConfiguration/staticBundlesInfo';\r\n\r\nready(() => {\r\n  // TODO : NEED TO FIGURE OUT HOW TO ENABLE THIS UI\r\n  if (document.getElementById('web-app-configuration-enabled') === 'True') {\r\n    render(<ConfigurationPanel />, document.body.appendChild(document.createElement('DIV')));\r\n  }\r\n});\r\n\r\n// here is code to enable console setup\r\nwindow.ConfigureWebApps = configureWebApps;\r\nwindow.StaticBundlesInfo = staticBundlesInfo;\r\n"],"sourceRoot":""}