{"version":3,"sources":["webpack:///../node_modules/classnames/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./ts/react/cookieBannerV3/containers/Banner.tsx","webpack:///./ts/react/cookieBannerV3/components/CookieItem.tsx","webpack:///./ts/react/cookieBannerV3/components/AnalyticsSection.tsx","webpack:///./ts/react/cookieBannerV3/containers/ConsentTool.tsx","webpack:///external \"CoreUtilities\"","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./ts/react/cookieBannerV3/constants/bannerConstants.ts","webpack:///external \"ReactUtilities\"","webpack:///./ts/react/cookieBannerV3/translation.config.ts","webpack:///./ts/react/cookieBannerV3/constants/urlConstants.ts","webpack:///external \"Roblox\"","webpack:///./ts/react/cookieBannerV3/services/cookieBannerServices.ts","webpack:///./ts/react/cookieBannerV3/utils/cookieUtils.ts","webpack:///./ts/react/cookieBannerV3/constants/cookieConstants.ts","webpack:///./ts/react/cookieBannerV3/utils/consentCookieHandler.ts","webpack:///external \"ReactStyleGuide\"","webpack:///./ts/core/utils/localization.ts","webpack:///./ts/core/constants/localization.ts","webpack:///./ts/react/cookieBannerV3/constants/consentToolConstants.ts","webpack:///./ts/react/cookieBannerV3/containers/CookieBannerV3Base.tsx","webpack:///./ts/react/cookieBannerV3/cookieBannerV3Entry.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","btnOnClick","acceptedCookieList","consentCookieHandler","nonEssentialCookieList","closeBanner","showConsentTool","translate","locale","content","cookieConstants","privacyPolicyLinkIndex","indexOf","privacyPolicyUrl","urlConstants","content1","className","substring","privacyPolicyLinkPlaceholderlength","content2","privacyPolicyLink","target","href","rel","Button","onClick","cookieName","description","isNonEssentialCookieListVisible","GASectionCssClass","hidden","GACompanyCollectList","consentToolConstants","GACompanyCollectionList","map","data","label","GAReadMoreLink","googleAnalyticsReadMore","googleAnalytics","readMoreUrlIndex","GAReadMoreContent","GAReadMore","GAReadMoreUrl","GASection","Link","cssClasses","url","googleAnalyticsWebsite","ownedBy","googleInc","googleAnalyticsPurposeHeader","googleAnalyticsPurposeDescription","companyCollectionHeader","analyticsCookieList","RBXViralAcquisition","RBXSource","essentialCookieList","closeConsentTool","acceptAnalyticsCookie","useState","updateConsent","isEssentialCookieListVisible","updateEssentialCookieListVisibility","updateNonEssentialCookieListVisibility","useEffect","modalService","open","essentialCookieSectionCssClass","GASectionCollapsible","on","essentialCookieSectionCollapsibleIcon","requestDataLink","supportUrl","requestData","staticInfoSection","infoCollectionHeader","infoCollectionContent","infoCollectionHeader2","infoCollectionContent2","infoPartnerCollectionHeader","infoPartnerCollectionContent","GAToggle","type","Toggle","isOn","onToggle","essentialCookieElementList","cookie","customerServicelinks","essentialCookieSection","essentialCookie","body","Modal","title","consentToolModalTitle","actionButtonShow","actionButtonText","saveBtn","neutralButtonText","cancelBtn","onAction","onNeutral","banner","CoreUtilities","React","ReactDOM","consentTool","ReactUtilities","bannerTranslationConfig","common","feature","getAbsoluteUrl","Roblox","Endpoints","universalAppConfigurationApi","EnvironmentUrls","getCookiePolicyConfig","withCredentials","Promise","urlConfig","httpService","undefined","response","ShouldDisplayCookieBannerV3","NonEssentialCookieList","EssentialCookieList","cname","name","ca","decodeURIComponent","document","split","c","charAt","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","acceptCookieNames","consentCookieConfig","forEach","index","slice","cookieUtils","ReactStyleGuide","getLocale","_locale","urlService","encodeURIComponent","buildLinkWithLocale","website","analyticsCookie","bannerConstants","createModal","withTranslations","updateNonEssentialCookieList","updateEssentialCookieList","shouldDisplayBannerOrConsentTool","updateBannerVisibility","cookieModule","cookieBannerServices","cookiePolicy","consentCookie","entryPoint","getElementById","ready","render"],"mappings":"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","file":"cookieBannerV3.bundle.min.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import React from 'react';\nimport { TranslateFunction } from 'react-utilities';\nimport { Button } from 'react-style-guide';\nimport consentCookieHandler from '../utils/consentCookieHandler';\nimport cookieConstants from '../constants/cookieConstants';\nimport urlConstants from '../constants/urlConstants';\nimport localization from '../../../core/utils/localization';\n\nexport const Banner = ({\n  nonEssentialCookieList,\n  closeBanner,\n  showConsentTool,\n  translate\n}: {\n  nonEssentialCookieList: string[];\n  closeBanner: () => void;\n  showConsentTool: () => void;\n  translate: TranslateFunction;\n}): JSX.Element => {\n  // build cookie content with localized privacy policy link\n  const locale = localization.getLocale() || '';\n  const content = translate(cookieConstants.cookieBannerContent);\n  const privacyPolicyLinkIndex = content.indexOf(cookieConstants.privacyPolicyLinkPlaceholder);\n  const privacyPolicyUrl = localization.buildLinkWithLocale(urlConstants.privacyPolicyUrl, locale);\n  const content1 = <span className='text'>{content.substring(0, privacyPolicyLinkIndex)}</span>;\n  const privacyPolicyLinkPlaceholderlength = cookieConstants.privacyPolicyLinkPlaceholder.length;\n  const content2 = (\n    <span className='text'>\n      {content.substring(privacyPolicyLinkIndex + privacyPolicyLinkPlaceholderlength)}\n    </span>\n  );\n  const privacyPolicyLink = (\n    <a className='text-link' target='_blank' href={privacyPolicyUrl} rel='noreferrer'>\n      {translate(cookieConstants.privacyPolicy)}\n    </a>\n  );\n  const btnOnClick = (acceptedCookieList: string[]) => {\n    consentCookieHandler.setUserConsent(acceptedCookieList, nonEssentialCookieList);\n    closeBanner();\n  };\n  return (\n    <React.Fragment>\n      <div className='cookie-banner'>\n        <div className='cookie-description-content'>\n          {content1}\n          {privacyPolicyLink}\n          {content2}\n        </div>\n        <div>\n          <div className='cookie-button-container'>\n            <Button\n              className='see-all-link btn-secondary-md consent-tool-link'\n              onClick={showConsentTool}>\n              {translate(cookieConstants.cookieConsent)}\n            </Button>\n            <div className='cookie-btn-float'>\n              <Button className='btn-secondary-lg cookie-btn' onClick={() => btnOnClick([''])}>\n                {translate(cookieConstants.declineBtnText)}\n              </Button>\n              <Button\n                className='btn-cta-lg cookie-btn'\n                onClick={() => btnOnClick(nonEssentialCookieList)}>\n                {translate(cookieConstants.acceptBtnText)}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='cookie-banner-bg' onClick={() => btnOnClick([''])} aria-hidden='true' />\n    </React.Fragment>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\n\nconst CookieItem = ({\n  cookieName,\n  description\n}: {\n  cookieName: string;\n  description: string;\n}): JSX.Element => {\n  return (\n    <div className='cookie-item'>\n      <p className='cookie-name font-body text'>{cookieName}</p>\n      <p className='cookie-description font-footer'>{description}</p>\n    </div>\n  );\n};\n\nexport default CookieItem;\n","import React from 'react';\nimport { TranslateFunction } from 'react-utilities';\nimport { Link } from 'react-style-guide';\nimport classNames from 'classnames';\nimport CookieItem from './CookieItem';\nimport consentToolConstants from '../constants/consentToolConstants';\nimport urlConstants from '../constants/urlConstants';\n\nconst AnalyticsSection = ({\n  translate,\n  isNonEssentialCookieListVisible\n}: {\n  translate: TranslateFunction;\n  isNonEssentialCookieListVisible: boolean;\n}): JSX.Element => {\n  const GASectionCssClass = classNames({ hidden: !isNonEssentialCookieListVisible });\n\n  const GACompanyCollectList = consentToolConstants.GACompanyCollectionList.map(data => (\n    <div className='google-analytics-company-info-sec'>\n      <p className='font-caption-header text-emphasis'>{translate(data.label)}</p>\n      <p className='font-caption-body text'>{translate(data.content)}</p>\n    </div>\n  ));\n  const GAReadMoreLink = (\n    <a\n      className='text-link'\n      target='_blank'\n      href={urlConstants.googleAnalyticsReadMore}\n      rel='noreferrer'>\n      {translate(consentToolConstants.googleAnalytics)}\n    </a>\n  );\n  const GAReadMoreContent = translate(consentToolConstants.GAReadMore);\n  const readMoreUrlIndex = GAReadMoreContent.indexOf(consentToolConstants.GAReadMoreUrl);\n  const GAReadMore = (\n    <p className='font-caption-body text'>\n      {GAReadMoreContent.substring(0, readMoreUrlIndex)}\n      {GAReadMoreLink}\n    </p>\n  );\n  const GASection = (\n    <div>\n      <Link cssClasses='font-header-2 text-emphasis' url={urlConstants.googleAnalyticsWebsite}>\n        {translate(consentToolConstants.googleAnalytics)}\n        <span className='icon-nav-external-link-sm cookie-external-link-icon' />\n      </Link>\n      <div>\n        <span className='google-analytics-info-subheader'>\n          {translate(consentToolConstants.ownedBy)}\n        </span>\n        <span className='font-caption-header text-emphasis'>{consentToolConstants.googleInc}</span>\n      </div>\n      <p className='text-emphasis google-analytics-company-info-sec'>\n        {translate(consentToolConstants.googleAnalyticsPurposeHeader)}\n      </p>\n      <span className='font-caption-body text'>\n        {translate(consentToolConstants.googleAnalyticsPurposeDescription)}\n      </span>\n      <p className='text-emphasis google-analytics-company-info-sec'>\n        {translate(consentToolConstants.companyCollectionHeader)}\n      </p>\n      {GACompanyCollectList}\n      {GAReadMore}\n    </div>\n  );\n  const analyticsCookieList = (\n    <div className='analytics-cookie-list'>\n      <CookieItem\n        cookieName={consentToolConstants.RBXViralAcquisition.cookieName}\n        description={translate(consentToolConstants.RBXViralAcquisition.description)}\n      />\n      <CookieItem\n        cookieName={consentToolConstants.RBXSource.cookieName}\n        description={translate(consentToolConstants.RBXSource.description)}\n      />\n    </div>\n  );\n\n  return (\n    <div className={GASectionCssClass}>\n      {analyticsCookieList}\n      {GASection}\n    </div>\n  );\n};\n\nexport default AnalyticsSection;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { TranslateFunction } from 'react-utilities';\nimport { createModal, Toggle } from 'react-style-guide';\nimport consentToolConstants from '../constants/consentToolConstants';\nimport urlConstants from '../constants/urlConstants';\nimport CookieItem from '../components/CookieItem';\nimport AnalyticsSection from '../components/AnalyticsSection';\nimport { TEssentialCookie } from '../types/cookiePolicyTypes';\nimport localization from '../../../core/utils/localization';\nimport cookieConstants from '../constants/cookieConstants';\nimport consentCookieHandler from '../utils/consentCookieHandler';\nimport bannerConstants from '../constants/bannerConstants';\n\nconst { cookieModule } = bannerConstants;\nconst [Modal, modalService] = createModal();\nexport const ConsentTool = ({\n  nonEssentialCookieList,\n  essentialCookieList,\n  translate,\n  closeConsentTool\n}: {\n  nonEssentialCookieList: string[];\n  essentialCookieList: TEssentialCookie[];\n  translate: TranslateFunction;\n  closeConsentTool: React.Dispatch<React.SetStateAction<string | null>>;\n}): JSX.Element => {\n  const [acceptAnalyticsCookie, updateConsent] = useState<boolean>(false);\n  const [isEssentialCookieListVisible, updateEssentialCookieListVisibility] = useState<boolean>(\n    false\n  );\n  const [\n    isNonEssentialCookieListVisible,\n    updateNonEssentialCookieListVisibility\n  ] = useState<boolean>(false);\n\n  useEffect(() => {\n    modalService.open();\n  }, []);\n\n  const essentialCookieSectionCssClass = classNames({ hidden: !isEssentialCookieListVisible });\n  const GASectionCollapsible = classNames('cookie-consent-tool-collaps', {\n    on: isNonEssentialCookieListVisible\n  });\n  const essentialCookieSectionCollapsibleIcon = classNames(\n    'cookie-consent-tool-collaps font-header-2 text-emphasis ',\n    {\n      on: isEssentialCookieListVisible\n    }\n  );\n\n  const locale = localization.getLocale() || '';\n  const privacyPolicyUrl = localization.buildLinkWithLocale(urlConstants.privacyPolicyUrl, locale);\n\n  const privacyPolicyLink = (\n    <div className='cookie-consent-tool-info-link'>\n      <a className='text-link' target='_blank' href={privacyPolicyUrl} rel='noreferrer'>\n        {translate(cookieConstants.privacyPolicy)}\n        <span className='icon-nav-external-link-sm cookie-external-link-icon' />\n      </a>\n    </div>\n  );\n  const requestDataLink = (\n    <div className='cookie-consent-tool-info-link'>\n      <a className='text-link' target='_blank' href={urlConstants.supportUrl} rel='noreferrer'>\n        {translate(consentToolConstants.requestData)}\n        <span className='icon-nav-external-link-sm cookie-external-link-icon' />\n      </a>\n    </div>\n  );\n\n  const staticInfoSection = (\n    <div>\n      <div className='static-section'>\n        <div className='font-header-2 text-emphasis google-analytics-company-info-sec'>\n          {translate(consentToolConstants.infoCollectionHeader)}\n        </div>\n        <p className='font-caption-body text'>\n          {translate(consentToolConstants.infoCollectionContent)}\n        </p>\n      </div>\n      <div className='static-section'>\n        <div className='font-header-2 text-emphasis google-analytics-company-info-sec'>\n          {translate(consentToolConstants.infoCollectionHeader2)}\n        </div>\n        <p className='font-caption-body text'>\n          {translate(consentToolConstants.infoCollectionContent2)}\n        </p>\n      </div>\n      <div className='static-section'>\n        <div className='font-header-2 text-emphasis google-analytics-company-info-sec'>\n          {translate(consentToolConstants.infoPartnerCollectionHeader)}\n        </div>\n        <p className='font-caption-body text'>\n          {translate(consentToolConstants.infoPartnerCollectionContent)}\n        </p>\n      </div>\n    </div>\n  );\n  const GAToggle = (\n    <div>\n      <button\n        className={GASectionCollapsible}\n        type='button'\n        onClick={() => updateNonEssentialCookieListVisibility(!isNonEssentialCookieListVisible)}>\n        <span className='font-header-2 text-emphasis'>{translate('Heading.AnalyticsCookies')}</span>\n      </button>\n      <Toggle\n        className='cookie-toggle'\n        isOn={acceptAnalyticsCookie}\n        onToggle={() => updateConsent(!acceptAnalyticsCookie)}\n      />\n    </div>\n  );\n  const essentialCookieElementList = essentialCookieList.map(cookie => (\n    <CookieItem cookieName={cookie.cookieName} description={translate(cookie.description)} />\n  ));\n\n  const customerServicelinks = (\n    <div>\n      {requestDataLink}\n      {privacyPolicyLink}\n    </div>\n  );\n  const essentialCookieSection = (\n    <div className='essential-cookie-section'>\n      <button\n        className={essentialCookieSectionCollapsibleIcon}\n        type='button'\n        onClick={() => updateEssentialCookieListVisibility(!isEssentialCookieListVisible)}>\n        {translate(consentToolConstants.essentialCookie)}\n      </button>\n      <div className={essentialCookieSectionCssClass}>{essentialCookieElementList}</div>\n    </div>\n  );\n\n  const body = (\n    <div className='cookie-consent-tool-body'>\n      {staticInfoSection}\n      {customerServicelinks}\n      {essentialCookieSection}\n      {GAToggle}\n      <AnalyticsSection\n        isNonEssentialCookieListVisible={isNonEssentialCookieListVisible}\n        translate={translate}\n      />\n    </div>\n  );\n\n  const saveConsent = () => {\n    const acceptedCookieList = acceptAnalyticsCookie ? nonEssentialCookieList : [];\n    consentCookieHandler.setUserConsent(acceptedCookieList, nonEssentialCookieList);\n    closeConsentTool(null);\n  };\n\n  return (\n    <Modal\n      title={translate(consentToolConstants.consentToolModalTitle)}\n      body={body}\n      actionButtonShow\n      actionButtonText={translate(consentToolConstants.saveBtn)}\n      neutralButtonText={translate(consentToolConstants.cancelBtn)}\n      onAction={saveConsent}\n      onNeutral={() => closeConsentTool(cookieModule.banner)}\n    />\n  );\n};\n\nexport default ConsentTool;\n","var __WEBPACK_NAMESPACE_OBJECT__ = CoreUtilities;","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const cookieBannerContainerId = 'cookie-banner-wrapper';\nconst cookieModule = {\n  banner: 'banner',\n  consentTool: 'consentTool'\n};\nexport default {\n  cookieBannerContainerId,\n  cookieModule\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = ReactUtilities;","type TConfig = {\n  common: string[];\n  feature: string;\n};\n\nexport const bannerTranslationConfig: TConfig = {\n  common: ['CommonUI.Messages', 'CommonUI.Controls'],\n  feature: 'Feature.Tracking'\n};\n\nexport default { bannerTranslationConfig };\n","import { Endpoints, EnvironmentUrls } from 'Roblox';\n\nconst { getAbsoluteUrl } = Endpoints;\nconst { universalAppConfigurationApi } = EnvironmentUrls;\n\nconst privacyPolicyUrl = getAbsoluteUrl('/info/privacy');\nconst getCookiePolicyConfig = {\n  withCredentials: true,\n  url: `${universalAppConfigurationApi}/v1/behaviors/cookie-policy/content`\n};\nconst supportUrl = getAbsoluteUrl('/support');\nconst googleAnalyticsWebsite = 'https://marketingplatform.google.com/about/analytics/';\nconst googleAnalyticsReadMore =\n  'https://developers.google.com/analytics/devguides/collection/analyticsjs/cookie-usage';\n\nexport default {\n  privacyPolicyUrl,\n  getCookiePolicyConfig,\n  googleAnalyticsWebsite,\n  supportUrl,\n  googleAnalyticsReadMore\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = Roblox;","import { httpService } from 'core-utilities';\nimport urlConstants from '../constants/urlConstants';\nimport { TCookiePolicy } from '../types/cookiePolicyTypes';\n\nconst getCookiePolicy = async (): Promise<TCookiePolicy> => {\n  const urlConfig = urlConstants.getCookiePolicyConfig;\n  const response = await httpService.get(urlConfig);\n  if (response !== undefined) {\n    const cookiePolicy: TCookiePolicy = response.data as TCookiePolicy;\n    return cookiePolicy;\n  }\n  const defaultCookiePolicy: TCookiePolicy = {\n    ShouldDisplayCookieBannerV3: false,\n    NonEssentialCookieList: [],\n    EssentialCookieList: []\n  };\n  return defaultCookiePolicy;\n};\n\nexport default { getCookiePolicy };\n","const getCookie = (cname: string): string => {\n  const name = `${cname}=`;\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n};\n\nconst setCookie = (cname: string, cvalue: string, exdays: number): void => {\n  const d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  const expires = `expires=${d.toUTCString()}`;\n  document.cookie = `${cname}=${cvalue};${expires}`;\n};\n\nexport default { getCookie, setCookie };\n","const consentCookieName = 'RBXcb';\nconst consentExpirationDays = 180;\nconst cookieBannerContent = 'Description.CookieBannerContent';\nconst declineBtnText = 'Action.DeclineAll';\nconst acceptBtnText = 'Action.AcceptAll';\nconst privacyPolicy = 'Description.PrivacyPolicy';\nconst privacyPolicyLinkPlaceholder = '{privacyPolicyLink}';\nconst cookieConsent = 'Action.SetCookieOptions';\n\nexport default {\n  consentCookieName,\n  consentExpirationDays,\n  cookieBannerContent,\n  declineBtnText,\n  acceptBtnText,\n  privacyPolicy,\n  privacyPolicyLinkPlaceholder,\n  cookieConsent\n};\n","import cookieUtils from './cookieUtils';\nimport cookieConstants from '../constants/cookieConstants';\n\nconst setUserConsent = (acceptCookieNames: string[], nonEssentialCookieList: string[]): void => {\n  let consentCookieConfig = '';\n  nonEssentialCookieList.forEach((cookie, index) => {\n    if (acceptCookieNames.indexOf(cookie) !== -1) {\n      consentCookieConfig += `${cookie}=true&`;\n    } else {\n      consentCookieConfig += `${cookie}=false&`;\n    }\n    if (index === nonEssentialCookieList.length - 1) {\n      consentCookieConfig = consentCookieConfig.slice(0, -1);\n    }\n  });\n\n  cookieUtils.setCookie(\n    cookieConstants.consentCookieName,\n    consentCookieConfig,\n    cookieConstants.consentExpirationDays\n  );\n};\n\nexport default { setUserConsent };\n","var __WEBPACK_NAMESPACE_OBJECT__ = ReactStyleGuide;","import { urlService } from 'core-utilities';\nimport { locale, localeParamName } from '../constants/localization';\n\nconst localization = {\n  getLocale: () => {\n    const _locale = urlService ? urlService.getQueryParam(locale) : null;\n    if (typeof _locale === 'string') {\n      return encodeURIComponent(_locale);\n    } else if (Array.isArray(_locale)) {\n      return encodeURIComponent(_locale[0]);\n    }\n    return null;\n  },\n  buildLinkWithLocale: (url: string, locale: string) => {\n    if (locale) {\n      return url + localeParamName + locale;\n    }\n\n    return url;\n  }\n};\n\nexport default localization;\n","const localeParamName = '?locale=';\nconst locale = 'locale';\n\nexport { locale, localeParamName };\n","export default {\n  consentToolModalTitle: 'Heading.CookieSettings',\n  saveBtn: 'Action.SavePreferences',\n  cancelBtn: 'Action.Cancel',\n  infoCollectionHeader: 'Heading.InformationCollection',\n  infoCollectionContent: 'Description.InformationCollection',\n  infoCollectionHeader2: 'Heading.InformationCollection2',\n  infoCollectionContent2: 'Description.InformationCollection2',\n  infoPartnerCollectionHeader: 'Heading.InformationPartnerCollection',\n  infoPartnerCollectionContent: 'Description.InformationPartnerCollection',\n  RBXViralAcquisition: {\n    cookieName: 'RBXViralAcquisition',\n    description: 'Description.RBXViralAcquisition'\n  },\n  RBXSource: {\n    cookieName: 'RBXSource',\n    description: 'Description.RBXSource'\n  },\n  googleAnalytics: 'Heading.GoogleAnalytics',\n  ownedBy: 'Label.OwnedBy',\n  googleInc: 'Google Inc.',\n  website: 'Label.Website',\n  googleAnalyticsPurposeHeader: 'Heading.GoogleAnalyticsPurpose',\n  googleAnalyticsPurposeDescription: 'Description.GoogleAnalyticsPurpose',\n  companyCollectionHeader: 'Heading.CompanyCollection',\n  GACompanyCollectionList: [\n    { label: 'Label.DataCollected', content: 'Description.DataCollected' },\n    { label: 'Label.DataSharing', content: 'Description.DataSharing' },\n    { label: 'Label.DataRetention', content: 'Description.DataRetention' },\n    { label: 'Label.DataUse', content: 'Description.DataUse' },\n    { label: 'Label.DataStorage', content: 'Description.Undisclosed' }\n  ],\n  requestData: 'Action.RequestData',\n  essentialCookie: 'Heading.EssentialCookies',\n  analyticsCookie: 'Heading.AnalyticsCookies',\n  GAReadMore: 'Description.GAReadMore',\n  GAReadMoreUrl: '{googleAnalyticsLink}'\n};\n","import React, { useEffect, useState } from 'react';\nimport { withTranslations, WithTranslationsProps } from 'react-utilities';\nimport { bannerTranslationConfig } from '../translation.config';\nimport cookieBannerServices from '../services/cookieBannerServices';\nimport cookieUtils from '../utils/cookieUtils';\nimport cookieConstants from '../constants/cookieConstants';\nimport bannerConstants from '../constants/bannerConstants';\nimport consentCookieHandler from '../utils/consentCookieHandler';\nimport { TCookiePolicy, TEssentialCookie } from '../types/cookiePolicyTypes';\nimport Banner from './Banner';\nimport ConsentTool from './ConsentTool';\n\nexport const CookieBannerV3Base = ({ translate }: WithTranslationsProps): JSX.Element => {\n  const [nonEssentialCookieList, updateNonEssentialCookieList] = useState<string[]>([]);\n  const [essentialCookieList, updateEssentialCookieList] = useState<TEssentialCookie[]>([]);\n  const [shouldDisplayBannerOrConsentTool, updateBannerVisibility] = useState<string | null>(null);\n\n  const { cookieModule } = bannerConstants;\n  useEffect(() => {\n    const updateCookiePolicy = async () => {\n      const cookiePolicy: TCookiePolicy = await cookieBannerServices.getCookiePolicy();\n      if (cookiePolicy.ShouldDisplayCookieBannerV3) {\n        updateNonEssentialCookieList(cookiePolicy.NonEssentialCookieList);\n        updateEssentialCookieList(cookiePolicy.EssentialCookieList);\n        const consentCookie = cookieUtils.getCookie(cookieConstants.consentCookieName);\n        if (!consentCookie || consentCookie === '') {\n          updateBannerVisibility(cookieModule.banner);\n        }\n      } else {\n        // User outside of EEA,\n        // default to accept all cookies\n        consentCookieHandler.setUserConsent(\n          cookiePolicy.NonEssentialCookieList,\n          cookiePolicy.NonEssentialCookieList\n        );\n      }\n    };\n    // eslint-disable-next-line no-void\n    void updateCookiePolicy();\n  }, []);\n\n  switch (shouldDisplayBannerOrConsentTool) {\n    case cookieModule.banner:\n      return (\n        <Banner\n          translate={translate}\n          nonEssentialCookieList={nonEssentialCookieList}\n          closeBanner={() => updateBannerVisibility(null)}\n          showConsentTool={() => updateBannerVisibility(cookieModule.consentTool)}\n        />\n      );\n    case cookieModule.consentTool:\n      return (\n        <ConsentTool\n          translate={translate}\n          essentialCookieList={essentialCookieList}\n          nonEssentialCookieList={nonEssentialCookieList}\n          closeConsentTool={updateBannerVisibility}\n        />\n      );\n    default:\n      return <div />;\n  }\n};\n\nexport default withTranslations(CookieBannerV3Base, bannerTranslationConfig);\n","import { ready } from 'core-utilities';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport bannerConstants from './constants/bannerConstants';\nimport CookieBannerV3Base from './containers/CookieBannerV3Base';\nimport '../../../css/cookieBannerV3/cookieBannerV3.scss';\n\nconst entryPoint = document.getElementById(bannerConstants.cookieBannerContainerId);\n\nready(() => {\n  if (entryPoint) {\n    render(<CookieBannerV3Base />, entryPoint);\n  }\n});\n"],"sourceRoot":""}