{"version":3,"sources":["webpack:///./js/presenceStatus/constants/presenceStatusConstants.ts","webpack:///external \"Roblox\"","webpack:///external \"HeaderScripts\"","webpack:///external \"CoreUtilities\"","webpack:///./js/presenceStatus/services/presenceStatusUpdateService.js","webpack:///./js/presenceStatus/presenceStatusEntry.js"],"names":["presenceChanged","Roblox","HeaderScripts","CoreUtilities","presenceStatusUpdateService","initializeRealTimeSubscriptions","realTimeClient","realtimeEventTypes","RealTime","presenceStatusConstants","Subscribe","data","presenceChangedUserIds","forEach","each","changedUserId","UserId","Type","indexOf","push","length","getPresences","userPresenceUrlConfig","url","EnvironmentUrls","withCredentials","userIds","httpService","then","result","document","dispatchEvent","CustomEvent","detail","userPresences","catch","error","console","debug","authenticatedUser","addEventListener","window","Presence","PresenceTypes","Offline","Online","InGame","InStudio"],"mappings":"yBAAO,IAOP,EAC4B,4BAD5B,EAEsB,CAClBA,gBAAiB,mBCVjB,EAA+BC,OCA/B,EAA+BC,cCA/B,EAA+BC,cCK7BC,EAkDG,CACLC,gCA1BF,WACE,IACQC,EAC4BC,EAFhCC,aACIF,EAAiBE,+BACWD,EAAuBE,EACzDH,EAAeI,UAD0CD,EACN,SAAAE,GACjD,IAAMC,EAAyB,GAC/BD,EAAKE,QAAQ,SAAAC,GACX,IAAMC,EAAgBD,EAAKE,OACnBF,EAAKG,OACNV,EAAmBP,iBAClBY,EAAuBM,QAAQH,GAAiB,GAClDH,EAAuBO,KAAKJ,KAOhCH,EAAuBQ,QACzBhB,EAA4BiB,aAAaT,OAQ/CS,aAnDF,SAAsBT,GACpB,IAAMU,EAAwB,CAC5BC,IAAK,GAAF,OAAKC,8BAAL,sBACHC,iBAAiB,GAGbd,EAAO,CACXe,QAASd,GAGXe,mBACQL,EAAuBX,GAC5BiB,KAAK,SAAAC,GACAA,WAAQlB,MACVmB,SAASC,cACP,IAAIC,YAAY,yBAA0B,CAAEC,OAAQJ,EAAOlB,KAAKuB,mBAIrEC,MAAM,SAAAC,GACLC,QAAQC,MAAMF,OAmCtB,OAAIG,0BAAJ,IAAIA,0DACFT,SAASU,iBAAiB,mBAAoB,WAC5CpC,EAA4BC,oCC5DhCoC,OAAOxC,OAAOyC,SAAW,CACvBC,cLJ2B,CAC3BC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,SAAU,I","file":"presenceStatus.bundle.min.js","sourcesContent":["export const PresenceTypes = {\r\n  Offline: 0,\r\n  Online: 1,\r\n  InGame: 2,\r\n  InStudio: 3\r\n} as const;\r\n\r\nexport default {\r\n  realtimeNotificationType: 'PresenceBulkNotifications',\r\n  realtimeEventTypes: {\r\n    presenceChanged: 'PresenceChanged'\r\n  }\r\n};\r\n","var __WEBPACK_NAMESPACE_OBJECT__ = Roblox;","var __WEBPACK_NAMESPACE_OBJECT__ = HeaderScripts;","var __WEBPACK_NAMESPACE_OBJECT__ = CoreUtilities;","import { EnvironmentUrls, RealTime } from 'Roblox';\r\nimport { authenticatedUser } from 'header-scripts';\r\nimport { httpService } from 'core-utilities';\r\nimport presenceStatusConstants from '../constants/presenceStatusConstants';\r\n\r\nconst presenceStatusUpdateService = (() => {\r\n  function getPresences(presenceChangedUserIds) {\r\n    const userPresenceUrlConfig = {\r\n      url: `${EnvironmentUrls.presenceApi}/v1/presence/users`,\r\n      withCredentials: true\r\n    };\r\n\r\n    const data = {\r\n      userIds: presenceChangedUserIds\r\n    };\r\n\r\n    httpService\r\n      .post(userPresenceUrlConfig, data)\r\n      .then(result => {\r\n        if (result?.data) {\r\n          document.dispatchEvent(\r\n            new CustomEvent('Roblox.Presence.Update', { detail: result.data.userPresences })\r\n          );\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.debug(error);\r\n      });\r\n  }\r\n\r\n  function initializeRealTimeSubscriptions() {\r\n    if (RealTime) {\r\n      const realTimeClient = RealTime.Factory.GetClient();\r\n      const { realtimeNotificationType, realtimeEventTypes } = presenceStatusConstants;\r\n      realTimeClient.Subscribe(realtimeNotificationType, data => {\r\n        const presenceChangedUserIds = [];\r\n        data.forEach(each => {\r\n          const changedUserId = each.UserId;\r\n          switch (each.Type) {\r\n            case realtimeEventTypes.presenceChanged:\r\n              if (presenceChangedUserIds.indexOf(changedUserId) < 0) {\r\n                presenceChangedUserIds.push(changedUserId);\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n        if (presenceChangedUserIds.length) {\r\n          presenceStatusUpdateService.getPresences(presenceChangedUserIds);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return {\r\n    initializeRealTimeSubscriptions,\r\n    getPresences\r\n  };\r\n})();\r\n\r\nif (authenticatedUser?.isAuthenticated) {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    presenceStatusUpdateService.initializeRealTimeSubscriptions();\r\n  });\r\n}\r\n","import { PresenceTypes } from './constants/presenceStatusConstants';\r\nimport './services/presenceStatusUpdateService';\r\n\r\nwindow.Roblox.Presence = {\r\n  PresenceTypes\r\n};\r\n"],"sourceRoot":""}