{"version":3,"sources":["webpack:////actions-runner/_work/web-frontend/web-frontend/WebApps/Roblox.AccountSettings.WebApp/Roblox.AccountSettings.WebApp/js/angular/accountSettings/components|sync|/\\.js$/","webpack:////actions-runner/_work/web-frontend/web-frontend/WebApps/Roblox.AccountSettings.WebApp/Roblox.AccountSettings.WebApp/js/angular/accountSettings/constants|sync|/\\.js$/","webpack:////actions-runner/_work/web-frontend/web-frontend/WebApps/Roblox.AccountSettings.WebApp/Roblox.AccountSettings.WebApp/js/angular/accountSettings/controllers|sync|/\\.js$/","webpack:////actions-runner/_work/web-frontend/web-frontend/WebApps/Roblox.AccountSettings.WebApp/Roblox.AccountSettings.WebApp/js/angular/accountSettings/directives|sync|/\\.js$/","webpack:////actions-runner/_work/web-frontend/web-frontend/WebApps/Roblox.AccountSettings.WebApp/Roblox.AccountSettings.WebApp/js/angular/accountSettings/services|sync|/\\.js$/","webpack:////actions-runner/_work/web-frontend/web-frontend/WebApps/Roblox.AccountSettings.WebApp/Roblox.AccountSettings.WebApp/js/angular/accountSettings|sync|/\\.html$/","webpack:///./js/angular/accountSettings/accountSettingsModule.js","webpack:///./js/angular/accountSettings/components/twoStepVerificationComponent.js","webpack:///./js/angular/accountSettings/constants/displayNameConstants.js","webpack:///./js/angular/accountSettings/constants/itemTradeTwoStepResources.js","webpack:///./js/angular/accountSettings/constants/resources.js","webpack:///./js/angular/accountSettings/constants/robuxSpendTwoStepResources.js","webpack:///./js/angular/accountSettings/constants/settingsEventStreamConstants.js","webpack:///./js/angular/accountSettings/constants/twoStepVerificationConstants.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalChangeBirthdateController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalEmailSetController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalEmailVerifyController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalKoreanIdVerificationController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalPasswordSetController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalPhoneSetController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalPinCreateController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalPinUnlockController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalSocialDisconnectController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalTwoStepController.js","webpack:///./js/angular/accountSettings/controllers/accountSettingsModalUsernameUpdateController.js","webpack:///./js/angular/accountSettings/controllers/accountsContentController.js","webpack:///./js/angular/accountSettings/controllers/accountsController.js","webpack:///./js/angular/accountSettings/controllers/changeDisplayNameController.js","webpack:///./js/angular/accountSettings/controllers/displayNameController.js","webpack:///./js/angular/accountSettings/controllers/enableAuthenticatorModalController.js","webpack:///./js/angular/accountSettings/controllers/enableTwoStepVerificationModalController.js","webpack:///./js/angular/accountSettings/controllers/personalController.js","webpack:///./js/angular/accountSettings/controllers/recoveryCodesModalController.js","webpack:///./js/angular/accountSettings/controllers/robuxSpendVerifyChallengeModalController.js","webpack:///./js/angular/accountSettings/controllers/twoStepVerificationController.js","webpack:///./js/angular/accountSettings/directives/accountPinStatusDirective.js","webpack:///./js/angular/accountSettings/directives/accountsStatePropertiesDirective.js","webpack:///./js/angular/accountSettings/directives/accountsValidUsernameDirective.js","webpack:///./js/angular/accountSettings/directives/userAccountBaseDirective.js","webpack:///./js/angular/accountSettings/services/accountsService.js","webpack:///./js/angular/accountSettings/services/commonConstantsService.js","webpack:///./js/angular/accountSettings/services/displayNameLayout.js","webpack:///./js/angular/accountSettings/services/formFieldsMappingService.js","webpack:///./js/angular/accountSettings/services/koreaIdVerificationService.js","webpack:///./js/angular/accountSettings/services/modalConstantsService.js","webpack:///./js/angular/accountSettings/services/notificationConstantsService.js","webpack:///./js/angular/accountSettings/services/screentimeConstantsService.js","webpack:///./js/angular/accountSettings/services/twoStepVerificationService.js","webpack:///./js/angular/accountSettings/services/usersService.js","webpack:///../Roblox.App.Configuration/Roblox_modules/roblox-es6-migration-helper/index.js","webpack:///./js/angular/accountSettings/components/templates/twoStepVerification.html","webpack:///./js/angular/accountSettings/controllers/templates/accountBilling.html","webpack:///./js/angular/accountSettings/controllers/templates/accountFastTrack.html","webpack:///./js/angular/accountSettings/controllers/templates/accountInfo.html","webpack:///./js/angular/accountSettings/controllers/templates/accountNotifications.html","webpack:///./js/angular/accountSettings/controllers/templates/accountParentalControls.html","webpack:///./js/angular/accountSettings/controllers/templates/accountPrivacy.html","webpack:///./js/angular/accountSettings/controllers/templates/accountSecurity.html","webpack:///./js/angular/accountSettings/controllers/templates/accountSocial.html","webpack:///./js/angular/accountSettings/controllers/templates/changeDisplayNameModal.html","webpack:///./js/angular/accountSettings/controllers/templates/modalAuthenticatorEnable.html","webpack:///./js/angular/accountSettings/controllers/templates/modalBirthdateAgeDown.html","webpack:///./js/angular/accountSettings/controllers/templates/modalEmailSet.html","webpack:///./js/angular/accountSettings/controllers/templates/modalEmailVerify.html","webpack:///./js/angular/accountSettings/controllers/templates/modalKoreanIdVerification.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPasswordSet.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPhoneDelete.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPhoneSet.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPhoneUpdate.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPhoneVerify.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPinCreate.html","webpack:///./js/angular/accountSettings/controllers/templates/modalPinUnlock.html","webpack:///./js/angular/accountSettings/controllers/templates/modalRecoveryCodes.html","webpack:///./js/angular/accountSettings/controllers/templates/modalRobuxSpendVerifyChallenge.html","webpack:///./js/angular/accountSettings/controllers/templates/modalSocialDisconnect.html","webpack:///./js/angular/accountSettings/controllers/templates/modalTwoStepDisable.html","webpack:///./js/angular/accountSettings/controllers/templates/modalTwoStepEnable.html","webpack:///./js/angular/accountSettings/controllers/templates/modalUsernameUpdate.html","webpack:///./js/angular/accountSettings/directives/templates/accountPinStatus.html","webpack:///./js/angular/accountSettings/directives/templates/userAccountBase.html","webpack:///external \"CoreRobloxUtilities\"","webpack:///external \"CoreUtilities\"","webpack:///external \"HeaderScripts\"","webpack:///external \"Roblox\"","webpack:///external \"angular\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/core/notificationSettings/notificationSettingsAuthority.js","webpack:///./js/angular/accountSettings/accountSettingsEntry.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","accounts","angular","config","$stateProvider","$urlRouterProvider","$locationProvider","accountConstantsResources","robuxSpendTwoStepResources","itemTradeTwoStepResources","languageResourceProvider","loc","window","location","href","indexOf","replace","html5Mode","hashPrefix","otherwise","state","url","label","templateUrl","templates","accountInfo","accountSocial","accountSecurity","accountPrivacy","accountParentalControls","accountTabsNames","parentalControlsCheckStatus","accountBilling","accountNotifications","accountFastTrack","accountSettingsResources","Lang","translationConstants","setLanguageKeysFromFile","twoStepVerificationComponent","bindings","pinLocked","unlockPin","emailStatus","email","controller","accountSettingsModule","displayNameConstants","changeDisplayNameModal","controllerName","eventstreamParams","changeDisplayNameEvent","successCtx","cancelCtx","urls","support","actionTypes","itemTrade","codeLength","events","frictionEventType","twoStepVerificationCtx","resendCodeBtn","verifyCodeBtn","verifySecurityPageBtn","verificationWarningSecurityPageTriggered","codeInputModalTriggered","successfulVerification","invalidCodeInput","controllers","modal","changeBirthdate","emailSet","emailVerify","enableAuthenticator","enableTwoStepVerification","passwordSet","phoneSet","twoStepSet","pinCreate","pinUnlock","recoveryCodes","usernameUpdate","socialDisconnect","robuxSpendVerifyChallenge","koreanIDVerification","accountPinStatus","userAccountBase","paymentType","paypal","paymentsPerPage","maxPaymentsLoaded","paymentProviderTypeToClass","Visa","Discover","MasterCard","AmericanExpress","Paypal","Credit","updateThemeEventContext","defaultThemeType","updateThemeEvent","themeTypes","classic","light","birthdayPicker","year","class","name","type","month","day","defaultDateParts","0","options","value","1","2","accountSettingsPolicyDefault","displayTwoStepVerification","displayAccountPIN","displayPrivacyModeToolTip","displayEmailAddress","displayWeChat","displayQQ","displayConnectedAccounts","displayNotificationStream","displayDesktopPush","displayMobilePush","displayPhoneNumber","displaySocialMedia","displayDescription","displayAccountRestrictions","displayWhoCanMessageMe","displayWhoCanInviteMeToVIPServers","displayWhoCanTradeWithMe","displayTradeQualityFilter","displayCountryList","displayLanguageList","displayChangeUsername","displayChangePassword","displayBillingTab","displayIdentityVerification","displayVoiceChatSettings","displayVisibilitySettings","displayPasswordRow","displayChatFilteringSetting","accountSettingsPolicyLeastPrivileged","accountSettingsPolicyNotificationDestinations","NotificationStream","DesktopPush","MobilePush","counters","accountSettingPolicyPrefix","success","failure","socialAuth","providers","facebook","weChat","qq","none","unverified","verified","socialErrorCode","11","12","13","14","formInteractionEventType","settingsCtx","addEmailBtn","verifyEmailBtn","addPhoneBtn","changeEmailBtn","changePhoneBtn","toggle2SVOn","toggle2SVOff","accountTabsDefault","visibilityTypes","invalid","visible","invisible","spendNotificationSettingTypes","allNotifications","notificationsOff","defaultNotifications","robuxSpend","accountSettingsOrigin","verifyAgeButtonClicked","context","params","btn","errorCodes","alreadyEnabled","featureDisabled","invalidCode","invalidEmail","invalidPassword","invalidMediaType","invalidSetupToken","tooManyRequests","digitRegex","mediaTypes","Email","Authenticator","RecoveryCode","authenticatorHelp","urlService","internal","api","3","4","5","6","7","10","accountSettingsModalChangeBirthdateController","$scope","$uibModalInstance","modalData","layout","password","errorMessage","debounce","canSubmit","clearErrorMessage","dismiss","submit","form","$valid","$setPristine","updateBirthdate","then","close","catch","error","getBirthdateErrorMessageFromCode","accountSettingsModalEmailSetController","accountsService","regexService","modalConstantsService","userInfo","emailSetSuccess","regexData","getEmailRegex","data","Regex","showPasswordField","isEmailVerified","doesPasswordExist","modalConstants","title","emailRequired","emailRequiredMessage","emailSetSuccessMessage","changeEmail","over13","changeEmailO13Label","changeEmailU13Label","addEmailO13Label","addEmailU13Label","toggleEmailRequired","enabled","submitButtonText","changeEmailLabel","addEmailLabel","emailErrorMessage","$error","required","$invalid","invalidEmailAddressMessage","$pristine","isProcessing","beginAccountAddEmailAddress","getEmailErrorMessageFromCode","finally","accountSettingsModalEmailVerifyController","verificationEmailSent","verificationEmailError","beginAccountVerifyEmailAddress","sendVerificationEmail","verifiedEmailRequired","accountSettingsModalKoreanIdVerificationController","$log","modalService","koreaIdVerificationService","screentimeConstantsService","verificationOptions","verificationHandler","method","localStorageConstants","MDL_TOKEN","METHOD","PARENTAL_RESTRICTED_HOURS","PARENTAL_TIME_ZONE","UPDATED_TIME_ZONE","localStorageService","parentalRestrictedHours","parentalTimezone","updatedTimezone","beginStartKoreaIdVerification","response","parameters","mdlTkn","mdl_tkn","hiddenForm","formPostHelper","document","body","appendChild","console","debug","open","titleText","default","bodyText","accountSettingsModalPasswordSetController","passwordInfo","passwordSetSuccess","passwordSetSuccessTitle","changePasswordSuccess","changePassword","changePasswordMessage","addPasswordMessage","passwordErrorMessage","matchField","matchErrorMessage","oldPassword","beginAccountChangePassword","errors","length","passwordChange","invalidCurrentPassword","accountSettingsModalPhoneSetController","numericCodeService","phoneService","phoneConstants","phoneInfo","accountContent","HasValidPasswordSet","showEditModal","isUpdatePhoneBusy","isVerifyPhoneBusy","getPhonePrefix","phonePrefix","phonePrefixCharacter","prefix","clearDeletePhoneError","deletePhoneError","clearUpdatePhoneError","updatePhoneError","clearCodeError","codeError","clearPhone","phone","updatePhone","updatedPhoneInfo","countryCode","beginAccountUpdatePhone","showVerifyModal","focusOnCodeInput","getPhoneErrorMessageFromCode","initiateDeletePhone","showDeleteModal","deletePhone","isDeletePhoneBusy","deleteInfo","beginAccountDeletePhone","successData","message","deleteSuccessMessage","submitCode","codeInfo","checkCode","phoneModalData","beginAccountVerifyPhone","updateSuccessMessage","resendCode","beginAccountResendPhoneCode","result","isValid","getMessageFromResendCodeError","selectPhonePrefix","_","find","accountInfoSettings","phonePrefixes","init","lastDigits","maskedNumber","match","getPhonePrefixes","ApiProxyDomain","countryError","countryListErrorMessage","accountSettingsModalPinCreateController","pinInfo","pinCreateSuccess","pinErrorMessage","newPin","minlength","newPinConfirm","$dirty","beginCreateAccountPinSetting","getPinErrorMessageFromCode","pinCreated","accountSettingsModalPinUnlockController","beginUnlockAccountPinSetting","pin","accountSettingsModalSocialDisconnectController","getTitle","unlinkTitle","provider","getPasswordErrorMessage","hasPasswordError","clearPasswordError","beginUpdateSocialDisconnect","getMessageFromError","accountSettingsModalTwoStepController","twoStepVerificationService","disableWarning","enabledMediaTypes","mediaType","twoStepVerificationConstants","disableTwoStepWarningMessage","disableTwoStepVerification","accountSettingsModalUsernameUpdateController","languageResource","user","usernameUpdateSuccess","isFreeUsernameChangeAllowed","usernameErrorMessage","getChangePriceText","get","robuxIcon","price","changeUsernameV2","beginAccountChangeUsernameV2","errorMsg","accountsContentController","$window","$filter","$timeout","$interval","$document","$location","$state","$uibModal","notificationConstantsService","commonConstantsService","systemFeedbackService","$q","premiumService","eventTrackerService","isEnabledCachedResult","isEnabledLookupStarted","isEnabledLookupFinished","customText","defaultText","offText","allUsersText","friendsText","noOneText","initialModalsLoaded","intl","Intl","socialNetworkErrorMessage","validation","socialMedia","_desktopPushRegistration","isAvailable","isEnabled","callback","PushNotificationRegistrar","enable","PushNotificationRegistrationUI","Publish","PushNotificationEventPublishers","clearIsEnabledCache","disable","isToggleable","_mobilePushRegistration","NotificationSettingsAuthority","triggerHandler","interval","retryPinUnlockLimit","_notificationSourceTypeMapping","notificationSourceTypeMapping","_receiverDestinationTypeMapping","receiverDestinationTypeMapping","setUserSubscriptionInfo","userInfoData","isPremiumUser","subscriptionInfo","subscriptionTypeName","getMembershipMapping","subscriptionRenewal","renewal","d","Date","subscriptionExpiration","expiration","displayInfoModal","sendButtonClickEvent","buttonName","forEach","item","destinationType","getUnavailableReason","chromeMessage","desktopPushSettings","minimumChromeVersion","firefoxMessage","enabledOnFirefox","areSourcesShown","availabilityCheck","customEnablement","customDisablement","customEnabledCheck","defaultHelpUrl","localizedHelpUrl","zh_cn","zh_cjv","cancelRenewalUrl","element","getElementById","attr","showBlockedUsers","populateAccount","timeMappings","generateTimeMappings","dayMappings","generateDayMappings","getWeekdaysList","themeContent","newThemeType","oldThemeType","availableThemes","accountSettingsMetadata","isMonthlyLimitSettingVisible","isNotificationSettingVisible","maximumMonthlySpendLimitInUSD","hasError","accountPinContent","isUnlocked","unlockedUntil","pinLength","parentContent","accountRestrictions","isFeatureEnabled","connectedAccounts","isConnectedAccountsBoxShown","providerName","userName","processErrorMessage","gigyaUserInfo","gigya","socialize","getUserInfo","username","nickname","toLowerCase","identifier","xbox","isDisconnectXboxEnabled","isDisconnectXboxBoxShown","hasEmailButNotVerified","hasVerfiedEmail","pinFields","pinOne","pinTwo","pinThree","pinFour","newPassword","currentPassword","notificationSettings","notificationBandSettings","optedOutNotificationSourceTypes","optedOutReceiverDestinationTypes","updatedDestinationTypeOptOuts","contactSettings","ageRestrictedSettings","visibilitySettings","joinSettings","parentalSettings","screentime","curfewRestrictedHours","koreanIdVerified","socialNetworks","tradeSettings","inventorySettings","accountSettingsPolicy","personal","description","birthdate","gender","country","birthdateVerified","showIdentityVerification","isV2Enabled","allActiveCountryList","accountInformationMetadata","isAllowedNotificationsEndpointDisabled","isAccountSettingsPolicyEnabled","isPhoneNumberEnabled","isIDVerificationEnabled","addOrChangePhone","modalParams","pinIsEnabledAndLocked","unlockAccountPinSetting","extend","verificationCodeLength","scope","BootstrapWidgets","$","getPhoneNumber","showSuccess","text","setAccountInfo","action","hasVerifiedEmail","IsEmailOnFile","IsEmailVerified","getEmailStatus","UserEmail","setXboxConnectionUrls","AuthDomain","setNotificationSettingsUrls","NotificationSettingsDomain","AllowedNotificationSourceTypes","filter","AllowedReceiverDestinationTypes","notificationPolicyKey","MinimumChromeVersionForPushNotifications","PushNotificationsEnabledOnFirefox","percentTranslator","aDouble","n","dateMonthTranslator","rawDateMs","dateYearTranslator","getNotificationSettings","setAccountSettingsApiUrl","AccountSettingsApiDomain","setAuthDomainUrl","IsAccountPinEnabled","getAccountPinSetting","setUpSocialDisconnect","getXboxConnection","getAccountRestrictions","getCurrentTheme","getAvailableThemes","getAccountSettingsMetadata","prepForV2","search","changepassword","setPassword","confirmemail","messageSuffix","unspecifiedMessage","actionSuffix","confirmEmail","getAccountInfo","beginGetAccountInfo","getAccountSubscription","getUserStatus","subscriptionProductModel","handleCancelBtnClicked","premiumFeatureId","PremiumFeatureId","FormEvents","pid","isAnyMembership","isMembershipRenewal","IsAccountSettingsSocialNetworksV2Enabled","isPhoneFeatureEnabled","IsPhoneFeatureEnabled","getAccountInfoSettings","getPersonalSettings","getJoinSettings","getTradeSettings","getInventorySettings","getAgeRestrictedSettings","getVisibilitySettings","getContactSettings","getParentalSettings","getScreentimePolicy","getScreentimeRestrictions","getSocialNetworks","beginGetPhone","UserAbove13","isPhoneNumberVisible","isPhoneVerified","isVerified","getBirthdate","beginGetBirthdate","birthDay","birthMonth","birthYear","fullBirthdate","populateDays","populateMonths","populateYears","originalBirthdate","isDateTimeI18nPickerEnabled","orderedBirthdayParts","parts","typeOrder","getDateTimeFormatter","getOrderedDateParts","beginGetDescription","beginGetCountry","countryId","beginGetGender","toString","IdentityVerificationService","$apply","verifyAge","origin","err","updateDescription","beginUpdateDescription","restoreOriginalBirthday","getMonth","getDate","getFullYear","updateBirthdateConfirm","checkAgeBracketAndConfirmUpdate","clampedDate","currentDay","currentMonth","tempDate","getClosestValidDay","isChangeOver13ToUnder13","updateBirthdateResult","beginUpdateBirthdate","reload","isPasswordRequiredForAgingDown","setHours","calculateAge","IsAgeDownEnabled","beginGetSocialConnected","IsSetPasswordNotificationEnabled","birthdayChange","needPassword","withSocialSignOn","actionButtonShow","actionButtonText","positiveBtnText","neutralButtonText","negativeBtnText","allowChange","updateGender","beginUpdateGender","updateCountry","beginUpdateCountry","beginGetConsumerThemes","themeTypeFromResult","themeType","accountData","stateProperties","beginGetAvailableThemeTypes","themes","filteredThemes","theme","push","beginGetAgeRestrictedSettings","isVoiceChatEnabled","isVerifiedForVoice","isVoiceChatUserOptIn","isOptInDisabled","toggleVoiceChatEnabledSetting","isUserOptIn","beginGetVisibilityPrivacy","isInvisible","toggleVisibilityPrivacy","beginGetContactSettings","AppChatPrivacy","appChatPrivacy","GameChatPrivacy","gameChatPrivacy","PrivateMessagePrivacy","privateMessagePrivacy","setContactSettingsMasterSetting","beginGetContentRatings","ContentRatings","contentRestrictionLevel","beginGetParentalSpendControls","MonthlySpendLimitInUSD","monthlySpendLimitInUSD","undefined","MonthlyLimitEnabled","SpendNotificationSetting","spendNotificationSetting","NotificationSettingEnabled","currentMonthlyLimit","deviceTimezone","getTimeZone","beginGetScreentimeRestrictions","generateRestrictionBeginTimes","generateRestrictionEndTimes","restrictionBeginTimes","restrictionEndTimes","populateDaysOfWeek","getKoreaIdVerificationResult","mdlToken","beginGetKoreaIdVerificationResult","information","age","JSON","parse","saveRestrictionsHandler","saveRestrictions","under18IDVerified","localStorageCleanUp","toJson","beginGetScreentimeAuthorizationPolicy","isKoreaScreentimeEnabled","screentimeType","beginGetScreentimeRolloutPolicy","enableParentalScreenTimeControls","dayName","dayValue","daysOfWeek","deleteRestriction","restriction","index","splice","updateRestrictionBeginTime","timestamp","begin","dateTimes","oneHourLaterTimestamp","generateTimestamp","arbitraryDate","getTime","oneHourInMs","endTime","elevenPmTimestamp","elevenThirtyPmTimestamp","twentyFourHourTimestamp","updateRestrictionEndTime","end","toggleRestrictionDay","days","sort","dayString","dropdownText","everyday","every","i","addRestriction","defaultRestriction","launchKoreanIdVerificationModal","updateTimezoneAndSaveRestrictions","missingDaySelection","blockedTimesWrongOrder","twentyThreeHoursInMs","restrictionLengthInMs","atLeastOneHourAllowed","validateRestrictions","set","originalParentalTimezone","Set","r","add","Array","from","beginSaveRestrictedHours","onContactSettingsMasterSettingChange","MasterSetting","appChatPrivacyUpdateRequest","beginUpdateAppChatPrivacy","gameChatPrivacyRequest","beginUpdateGameChatPrivacy","privateMessagePrivacyRequest","beginUpdatePrivateMessagePrivacy","promises","all","unknownErrorText","warning","updateAppChatPrivacy","updateGameChatPrivacy","updatePrivateMessagePrivacy","beginGetPrivateServerInvitePrivacy","privateServerInvitePrivacy","PrivateServerInvitePrivacy","beginGetFollowMePrivacy","followMePrivacy","FollowMePrivacy","updatePrivateServerInvitePrivacy","beginUpdatePrivateServerInvitePrivacy","updateFollowMePrivacy","beginUpdateFollowMePrivacy","beginGetTradePrivacy","tradePrivacy","beginGetTradeValue","tradeValue","updateTradePrivacy","beginUpdateTradePrivacy","privacySettingResponse","inventoryPrivacy","popupMessage","getUpdateInventoryPrivacyMessageWhenConflict","updateTradeValue","beginUpdateTradeValue","updateContentRatings","beginUpdateContentRatings","updateParentalSpendControls","accountPinSetupAndEnable","beginUpdateParentalSpendControls","updateNotificationFrequency","beginUpdateNotificationFrequency","isContentRatingsSettingVisible","IsContentRatingsSettingEnabled","isMonthlyLimitBelowZero","isMonthlyLimitAboveMax","isSaveButtonVisible","setAccountSettingsMetadata","IsParentalMonthlyLimitInUIEnabled","IsParentalNotificationSettingsInUIEnabled","MaximumParentalControlsMonthlySpendLimitInUSD","beginGetAccountSettingsMetadata","beginGetPromotionChannels","SocialNetworksVisibilityPrivacy","promotionChannelsVisibilityPrivacy","FacebookUrl","TwitterUrl","twitter","YouTubeUrl","youtube","TwitchUrl","twitch","beginGetInventoryPrivacy","updateInventoryPrivacy","beginUpdateInventoryPrivacy","getUpdateTradePrivacyMessageWhenConflict","updateSocialNetworks","beginUpdatePromotionChannels","errorCode","errorMsgLangKey","convertDate","dateString","parsedInt","parseInt","utcValue","getUTCFullYear","getUTCMonth","getUTCDate","currentDate","birthday","ageDifMs","now","ageDate","Math","abs","isAsianBirthdayPickerEnabled","isAsianLanguage","IsDateTimeI18nPickerEnabled","date","years","getFormattedDateString","setOrderedBirthdayPart","months","getMonthsI18n","getMonthsList","partName","partIndex","idName","className","birthdayName","signOutFromSessions","beginAccountSignOut","secureSignOut","disconnectFromFb","refreshPage","info","initiateFbDisconnect","facebookDisconnect","disconnectFromProvider","noop","disconnectFromXbox","beginDisconnectXbox","disconnectXbox","chooseGender","UNKNOWN","privacyModeInfo","getRobloxLocale","buyRobux","changeUsername","robuxToBuy","HasFreeNameChange","HasCurrencyOperationError","CurrencyOperationErrorMessage","RobuxRemainingForUsernameChange","changeUsernameTitle","bodyHtmlUnsafe","changeUsernameMessage","changeUsernameBuy","actionButtonClass","neutralButtonShow","cssClass","buyRobuxUrl","userEmail","accountPinLength","verifyEmailAddress","unverifiedEmail","setEmailAddress","missingEmail","contextForVerification","verifiedEmailRequiredTitle","unverifiedEmailButtonText","addPhone","addActionLabel","isAttemptToChangePhone","changePhone","editActionLabel","toggleBlockedUsers","unBlock","beginAccountUnblockUser","uid","BlockedUsersModel","Total","hidden","errorText","userFacingMessage","equals","beginGetNotificationSettings","destinationNotificationBands","receiverDestinationType","isNotificationBandBlacklisted","notificationSourceType","notificationDestinationType","BlacklistedNotificationSourceTypesForMobilePush","notificationsDomain","authDomain","accountSettingsApiDomain","isDestinationTypeOptedOut","isSuccess","toggleDestinationTypeOptOut","toggleNotificationBand","notificationBand","isOverridable","isSetByReceiver","updateNotificationSettings","key","updatedNotificationBandSettings","newlyAllowedDestinationTypes","newlyOptedOutDestinationTypes","beginUpdateNotificationSettings","modalText","setAccountPinSetting","startTimer","beginGetAccountPinSetting","lockAccountPinSetting","beginLockAccountPinSetting","clearTimer","retry","errorCallback","floor","apply","secondsRemaining","timeRemaining","timeRemainingMin","timeRemainingSec","cancel","toggleAccountPinLockSetting","promptForCreateAccountPin","restoreDefaultParentalSpendControls","Promise","toggleAccountPinEnabledSetting","beginDeleteAccountPinSetting","IsAccountRestrictionsFeatureEnabled","beginGetAccountRestrictions","toggleAccountRestrictionsSetting","IsEnabled","beginUpdateAccountRestrictions","beginProcessErrorMessage","toggleMonthlyLimitSetting","toggleNotificationSettingEnabled","hideConnectedAccountsDescription","IsDisconnectXboxEnabled","beginGetXboxConnection","hasConnectedXboxAccount","getCountryList","beginGetCountryList","countryList","defaultOption","countryName","localizedName","disabled","unshift","getAccountSettingsPolicy","initializeController","beginGetAccountSettingsPolicy","incrementAccountSettingsPolicyCounter","counterValues","fireEvent","getAccountInformationMetadataAndInitializeController","beginGetAccountInformationMetadata","accountsController","accountsTabs","currentData","activeTab","stateLabel","initTabs","getGroupsAndPolicy","tabsListing","getPolicy","suffix","mappedDestinationTypes","destinationTypes","this","getAllowedNotificationDestinationTypes","$on","event","toState","toParams","fromState","fromParams","tabs","$watch","newValue","oldValue","hideMobileTabList","changeDisplayNameController","usersService","injectedData","eventStreamService","displayNameLayout","rawPageData","pageData","originalDisplayName","DisplayName","newDisplayName","currentDisplayName","displayNameNeedsValidating","maxRetryOnMissingValidation","countOnMissingValidationRetry","modalLayout","changeDisplayNameLayout","handleResponseFailure","failureResponse","nameOfErrorMsg","errorMessages","changeDisplayNameResponse","errorCodeMapMsg","displayErrorMsg","saveDisplayName","updateDisplayName","authenticatedUser","isRequestFailed","sendEventWithTarget","timeoutValidateDisplayName","sendingDNValidation","isValidating","validateDisplayName","isValidated","validateInputChange","minCharactersForDisplayName","nameTooShort","isInputFormInvalidated","displayNameController","changeDisplayName","modalUrl","animation","enableAuthenticatorModalController","setupToken","qrCodeImage","manualEntryKey","viewQrCode","authenticatorCodeLength","metadata","helpLink","authenticatorHelpSiteAddress","passwordRequired","isPasswordRequiredForEnablingAuthenticator","canVerify","clearPasswordErrorMessage","onKeyDown","$event","originalEvent","preventDefault","toggleQrCode","openHelpLink","enableVerifyAuthenticator","output","qrCodeImageUrl","enableTwoStepVerificationModalController","enableEmailTwoStepVerification","personalController","realtimeService","chooseThemes","beginSetConsumerThemes","sendThemeUpdateEvent","eventNames","account","updateTheme","themeUpdateCallbacks","notificationTypes","userThemeTypeChangeNotification","themeUpdate","listenToNotification","realTimeTypes","recoveryCodesModalController","recoveryCodesLeft","recoveryCodesRight","activeRecoveryCodeCount","loadErrorMessage","loading","confirmSavedCodes","canContinue","formatRecoveryCodes","join","generateRecoveryCodes","slice","getRecoveryCodesStatus","activeCount","robuxSpendVerifyChallengeModalController","showErrorBanner","showModalError","invalidCodeError","invalidCodeErrorMessage","sendFrictionEvent","codeSent","isPendingVerification","supportPageUrl","getAbsoluteUrl","supportPageLinkPhrase","codeInputPlaceholder","isChallengeVerified","properties","challengeToken","successMessage","resendEmailCode","verifyChallengeCode","verificationToken","redeemVerificationChallengeForSpend","generateChallengeCode","supportUrl","supportPageLink","supportLink","generateChallengeForSpend","twoStepVerificationController","ctrl","numberOfFailedTwoStepVerificationChallengeAttempts","loadError","showRobuxSpendTwoStepVerificationContainer","showItemTradeTwoStepVerificationContainer","authenticatorDisabledHelp","aTagStart","aTagEnd","showVerifyButtonForSpend","getStatusSpendFriction","showFriction","showVerifyButtonForTrade","getStatusTradeFriction","shouldShowRecoveryCodesSection","authenticatorEnabled","isMediaTypeEnabled","includes","showEmailWarning","areBothEmailAndAuthenticatorEnabled","twoStepResult","isPasswordRequiredForEnablingEmailTwoStepVerification","onAuthenticatorEnabled","modalOutput","toggleTwoStepVerification","pinUnlocked","currentlyEnabled","mediaTypeIndex","twoStepVerification","backdrop","keyboard","recoveryCodeCreated","created","receiveTwoStepChallengeTokenForSpend","tokenData","receiveTwoStepChallengeTokenForTrade","redeemVerificationChallengeForTrade","handleInvalidatedTwoStepVerificationChallengeForSpend","renderTwoStepVerificationChallengeForSpend","handleInvalidatedTwoStepVerificationChallengeForTrade","renderTwoStepVerificationChallengeForTrade","TwoStepVerification","AccountIntegrityChallengeService","renderChallenge","containerId","userId","challengeId","actionType","ActionType","RobuxSpend","renderInline","shouldShowRememberDeviceCheckbox","shouldDynamicallyLoadTranslationResources","onChallengeCompleted","onChallengeInvalidated","onModalChallengeAbandoned","generateChallengeForTrade","ItemTrade","isUsingTwoStepWebviewComponent","itemTradeVerifyChallenge","$onInit","getMetadata","twoStepVerificationEnabled","getTwoStepVerificationConfiguration","configuration","methods","restrict","accountStateProperties","link","attrs","cancelrenewalurl","upgradeMemberShipUrl","upgrademembershipurl","isRobloxCreditEnabled","hidemobiletablist","buyrobuxurl","isTwoStepToggleEnabled","inApp","isPersonalSettingRefactorEnabled","isCountryLocaleRefactorEnabled","isMyAccountSectionHeaderHidden","accountValidUsername","httpService","require","ele","usernameValidationRequestNum","onChange","requestNum","localValidationMessage","hasLocalValidationFailure","isUndefined","Resources","Roblox","SignupFormValidatorGeneric","getInvalidUsernameMessage","$setValidity","$usernameMessage","urlConfig","EnvironmentUrls","authApi","httpPost","unique","valid","validationMessage","formFieldsMappingService","errorMessageService","sendData","excludeCacheHeaders","withCredentials","noCache","httpGet","post","headers","param","patch","httpPatch","delete","httpDelete","formServiceUrls","getAccountInfoUrl","accountSignoutUrl","accountAskParentToVerifyAge","getAllowedDestinationTypes","getAccountSettingsGroups","getAccountSubscriptionUrl","accountAppChatPrivacy","accountGameChatPrivacy","accountPrivateMessagePrivacy","accountPrivateServerInvitePrivacy","accountFollowMePrivacy","accountAccountRestrictions","accountCountry","accountPhone","accountPhoneDelete","accountResendPhoneCode","accountVerifyPhone","getCountryListUrl","accountDescription","accountBirthdate","accountGender","accountPromotionChannels","accountChangeUsernameV2","authenticationMetadata","screentimeAuthorizationPolicy","screentimeRolloutPolicy","restrictedHoursServiceUrl","accountVoiceChatPolicyUrl","accountVoiceChatUserOptInUrl","getParentalSpendControlsUrl","updateParentalSpendControlsUrl","pinErrorMapper","createErrorMapper","phoneErrorMapper","8","emailErrorMapper","9","birthdateErrorMapper","updateNotificationBandSettings","removeDestinationTypeOptOut","addDestinationTypeOptOut","xboxConnection","accountTradePrivacyUrl","accountTradeValueUrl","accountInventoryPrivacyUrl","contentRatingsUrl","getOrUpdateEmailUrl","sendVerifyEmailUrl","accountConsumerThemesUrl","accountAvailableThemesUrl","updatePromotionChannelsUrl","accountVisibilityPrivacyUrl","accountSettingsMetadataUrl","setAccountInformationUrl","accountInformationApiDomain","accountPinUrl","accountPinLockUrl","accountPinUnlockUrl","connectedSocialAuthUrl","socialAuthDomainUrl","accountChangePasswordUrl","setUniversalAppConfigurationUrl","universalAppConfigurationDomain","templateUrls","passwordChangedUrl","passwordErrorUrl","accountPhoneChangedUrl","accountVerifySmsSentUrl","accountEmailChangedUrl","accountVerifySentUrl","accountParentNeedNeedEmailUrl","accountAgeChangeConfirmationUrl","account2SvEnabledUrl","account2SvDisableConfirmationUrl","beginGetAccountSubscription","beginGetAllowedNotificationDestinationTypes","__RequestVerificationToken","val","emailInfo","emailAddress","beginGetEmail","beginAccountAskParentToVerifyAge","beginGetAuthenticationMetadata","receiverDestinationTypeOptOuts","receiverDestinationTypeOptIns","bandSettingsUrl","updatedSettings","allowDestinationUrl","optOutOfDestinationUrl","getErrorMessageFromResponse","updatedInfo","voiceChatPolicyUrl","voiceChatPolicy","userOptIn","visibilityPrivacy","appChatPrivacyUrl","gameChatPrivacyUrl","priateMessagePrivacyUrl","beginGetAppChatPrivacy","beginGetGameChatPrivacy","beginGetPrivateMessagePrivacy","flag","timezone","restrictions","deviceTypes","getPaymentRecords","EventStream","ls","twoStepEmail","useDeviceLanguage","security","privacy","billing","notifications","fastTrack","modalTitle","lang","modalCancel","modalSave","modalDescriptionWarning","maxCharactersForDisplayName","nameContainPII","nameHasChanged","nameInappropriate","nameTooLong","nameUnsupportedChars","getLang","labels","everyone","followers","following","friends","noOne","custom","off","high","medium","low","noRestrictions","teen","preTeen","child","dark","offNotifications","monthsI18n","visibility","under13Privacy","under13JoinPrivacy","contactSettingsConfiguration","messaging","appChat","gameChat","contentRatings","MALE","FEMALE","Map","websiteUrl","apiGatewayUrl","startKoreaIdVerificationUrl","getKoreaIdVerificationResultUrl","path","createElement","hiddenField","prototype","hasOwnProperty","call","callbackUrl","socialDisconnectErrorMapper","verifyPhoneResendCodeErrorMapper","titleIcon","disabling","robuxString","notProvided","notAvailable","notAllowed","FriendRequestReceived","FriendRequestAccepted","PartyInviteReceived","PartyMemberJoined","ChatNewMessage","PrivateMessageReceived","UserAddedToPrivateServerWhiteList","ConversationUniverseChanged","TeamCreateInvite","GameUpdate","DeveloperMetricsAvailable","GroupJoinRequestAccepted","friendlyTitle","blurbText","actionWhenText","actionDescriptionText","secondaryBlurbText","time","hour","getHours","getMinutes","minutes","generateTimestampsInBetween","start","timestamps","startTime","thirtyMinutesInMs","zeroHourTimestamp","times","timeFormatted","getCustomDateTime","timeStyle","weekdaysList","curfewRestrictions","invalidTimes","curfewTimestamps","pop","has","metadataCache","twoStepVerificationErrorMapper","reject","getPrimaryApiErrorCode","getErrorMessage","requestModel","camelToKebab","str","extractHtmlFileName","split","ES6MigrationHelper","importFilesUnderPath","ctx","templateCacheGenerator","moduleName","mainTplCtx","commonTplCtx","run","tc","put","CoreRobloxUtilities","CoreUtilities","HeaderScripts","__webpack_module_cache__","moduleId","__webpack_modules__","getter","__esModule","a","definition","defineProperty","enumerable","obj","prop","Symbol","toStringTag","canToggleMobilePushNotificationSettings","initialize","settings","getAttribute","isPushEnabled","successResponse","destination","log","canToggleMobilePushNotifications","deregisterCurrentDevice","onSuccess","onFailure","msg","statusMessage","notificationSettingsAuthority","templateContext"],"mappings":"wCAAA,IAAIA,EAAM,CACT,oCAAqC,MAItC,SAASC,EAAeC,GACnBC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,GAAIG,EAAoBC,EAAEN,EAAKE,GAK/B,OAAOF,EAAIE,GAJNK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIRN,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,GACzBS,EAAOC,QAAUb,GACFE,GAAK,M,qBCtBpB,IAAIH,EAAM,CACT,4BAA6B,KAC7B,iCAAkC,KAClC,iBAAkB,KAClB,kCAAmC,KACnC,oCAAqC,KACrC,oCAAqC,MAItC,SAASC,EAAeC,GACnBC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,GAAIG,EAAoBC,EAAEN,EAAKE,GAK/B,OAAOF,EAAIE,GAJNK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIRN,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,GACzBS,EAAOC,QAAUb,GACFE,GAAK,M,qBC3BpB,IAAIH,EAAM,CACT,qDAAsD,KACtD,8CAA+C,KAC/C,iDAAkD,IAClD,0DAA2D,KAC3D,iDAAkD,KAClD,8CAA+C,IAC/C,+CAAgD,KAChD,+CAAgD,KAChD,sDAAuD,KACvD,6CAA8C,KAC9C,oDAAqD,KACrD,iCAAkC,KAClC,0BAA2B,KAC3B,mCAAoC,KACpC,6BAA8B,KAC9B,0CAA2C,KAC3C,gDAAiD,KACjD,0BAA2B,KAC3B,oCAAqC,KACrC,gDAAiD,KACjD,qCAAsC,MAIvC,SAASC,EAAeC,GACnBC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,GAAIG,EAAoBC,EAAEN,EAAKE,GAK/B,OAAOF,EAAIE,GAJNK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIRN,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,GACzBS,EAAOC,QAAUb,GACFE,GAAK,M,qBC1CpB,IAAIH,EAAM,CACT,iCAAkC,KAClC,wCAAyC,KACzC,sCAAuC,KACvC,gCAAiC,MAIlC,SAASC,EAAeC,GACnBC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,GAAIG,EAAoBC,EAAEN,EAAKE,GAK/B,OAAOF,EAAIE,GAJNK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIRN,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,GACzBS,EAAOC,QAAUb,GACFE,GAAK,M,qBCzBpB,IAAIH,EAAM,CACT,uBAAwB,KACxB,8BAA+B,KAC/B,yBAA0B,KAC1B,gCAAiC,IACjC,kCAAmC,KACnC,6BAA8B,KAC9B,oCAAqC,IACrC,kCAAmC,KACnC,kCAAmC,KACnC,oBAAqB,MAItB,SAASC,EAAeC,GACnBC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,GAAIG,EAAoBC,EAAEN,EAAKE,GAK/B,OAAOF,EAAIE,GAJNK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIRN,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,GACzBS,EAAOC,QAAUb,GACFE,GAAK,M,oBC/BpB,IAAIH,EAAM,CACT,kDAAmD,KACnD,8CAA+C,KAC/C,gDAAiD,KACjD,2CAA4C,KAC5C,oDAAqD,KACrD,uDAAwD,KACxD,8CAA+C,KAC/C,+CAAgD,KAChD,6CAA8C,IAC9C,sDAAuD,KACvD,wDAAyD,KACzD,qDAAsD,KACtD,6CAA8C,KAC9C,gDAAiD,KACjD,yDAA0D,KAC1D,gDAAiD,KACjD,gDAAiD,KACjD,6CAA8C,KAC9C,gDAAiD,KACjD,gDAAiD,KACjD,8CAA+C,KAC/C,8CAA+C,KAC/C,kDAAmD,KACnD,8DAA+D,KAC/D,qDAAsD,KACtD,mDAAoD,KACpD,kDAAmD,IACnD,mDAAoD,KACpD,+CAAgD,KAChD,8CAA+C,MAIhD,SAASC,EAAeC,GACnBC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,GAAIG,EAAoBC,EAAEN,EAAKE,GAK/B,OAAOF,EAAIE,GAJNK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIRN,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,GACzBS,EAAOC,QAAUb,GACFE,GAAK,K,yDCtCdY,E,MAAWC,UAAe,WAVX,CACnB,YACA,YACA,mBACA,UACA,iBACA,eACA,QACA,oBAEwDC,OAAO,CAC/D,iBACA,qBACA,oBACA,4BACA,6BACA,4BACA,2BACA,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAAMC,EAAMC,OAAOC,SAASC,MACH,GAArBH,EAAII,QAAQ,OAAoC,GAAtBJ,EAAII,QAAQ,QACxCH,OAAOC,SAASC,KAAOH,EAAIK,QAAQ,IAAK,OAG1CV,EAAkBW,WAAU,GAC5BX,EAAkBY,WAAW,KAC7Bb,EAAmBc,UAAU,SAC7Bf,EACGgB,MAAM,OAAQ,CACbC,IAAK,QACLC,MAAO,eACPC,YAAahB,EAA0BiB,UAAUC,cAElDL,MAAM,SAAU,CACfC,IAAK,UACLC,MAAO,SACPC,YAAahB,EAA0BiB,UAAUE,gBAElDN,MAAM,WAAY,CACjBC,IAAK,YACLC,MAAO,WACPC,YAAahB,EAA0BiB,UAAUG,kBAElDP,MAAM,UAAW,CAChBC,IAAK,WACLC,MAAO,UACPC,YAAahB,EAA0BiB,UAAUI,iBAElDR,MAAM,oBAAqB,CAC1BC,IAAK,qBACLC,MAAO,oBACPC,YAAahB,EAA0BiB,UAAUK,0BAElDT,MAAMb,EAA0BuB,iBAAiBC,4BAA6B,CAC7EV,IAAK,kCACLC,MAAO,oBACPC,YAAahB,EAA0BiB,UAAUK,0BAElDT,MAAM,UAAW,CAChBC,IAAK,WACLC,MAAO,UACPC,YAAahB,EAA0BiB,UAAUQ,iBAElDZ,MAAM,gBAAiB,CACtBC,IAAK,iBACLC,MAAO,gBACPC,YAAahB,EAA0BiB,UAAUS,uBAElDb,MAAM,aAAc,CACnBC,IAAK,cACLC,MAAO,aACPC,YAAahB,EAA0BiB,UAAUU,mBAG/CC,EAA2BC,gCAE3BC,EAAuB,CAC3B,+CACGF,GACCA,EAAyB,iDAC3B,wCACA,4CAA8CA,GAA4BA,EAAyB,8CAAiD,8BACpJ,mDAAqDA,GAA4BA,EAAyB,qDAAwD,kEAClK,+CAAiDA,GAA4BA,EAAyB,iDAAoD,sEAC1J,8CAAgDA,GAA4BA,EAAyB,gDAAmD,wDAC1J,oBAAsBA,GAA4BA,EAAyB,sBAAyB,MACpG,2BAA6BA,GAA4BA,EAAyB,6BAAgC,uBAClH,mCAAqCA,GAA4BA,EAAyB,qCACxF,qLACF,kCAAoCA,GAA4BA,EAAyB,oCAAuC,oBAChI,iCAAmCA,GAA4BA,EAAyB,mCAAsC,iBAGhIzB,EAAyB4B,wBAAwBF,iCACjD1B,EAAyB4B,wBAAwBD,GACjD3B,EAAyB4B,wBAAwBF,0BACjD1B,EAAyB4B,wBAAwBF,iCACjD1B,EAAyB4B,wBAAwBF,yBACjD1B,EAAyB4B,wBAAwBF,6BACjD1B,EAAyB4B,wBAAwBF,qCACjD1B,EAAyB4B,wBAAwBF,mCAIrD,O,6CClHMG,EAA+B,CACnChB,YAAa,wBACbiB,SAAU,CACRC,UAAW,IACXC,UAAW,IACXC,YAAa,IACbC,MAAO,KAETC,WAAY,iC,QAGdC,YAAgC,sBAAuBP,GACvD,a,6CCZMQ,EAAuB,CAC3BC,uBAAwB,CACtBzB,YAAa,4BACb0B,eAAgB,+BAElBC,kBAAmB,CACjBC,uBAAwB,oBACxBC,WAAY,UACZC,UAAW,W,QAIfP,WAA+B,uBAAwBC,GAEvD,a,6CCdMtC,EAA4B,CAChC6C,KAAM,CACJC,QAAS,wBAGXC,YAAa,CACXC,UAAW,aAGbC,WAAY,EAEZC,OAAQ,CACNC,kBAAmB,cACnBC,uBAAwB,eACxBC,cAAe,aACfC,cAAe,aACfC,sBAAuB,qBACvBC,yCAA0C,2CAC1CC,wBAAyB,0BACzBC,uBAAwB,yBACxBC,iBAAkB,qB,QAItBtB,WAA+B,4BAA6BrC,GAC5D,a,6CCzBMF,EAA4B,CAChC8D,YAAa,CACXC,MAAO,CACLC,gBAAiB,gDACjBC,SAAU,yCACVC,YAAa,4CACbC,oBAAqB,qCACrBC,0BAA2B,2CAC3BC,YAAa,4CACbC,SAAU,yCACVC,WAAY,wCACZC,UAAW,0CACXC,UAAW,0CACXC,cAAe,+BACfC,eAAgB,+CAChBC,iBAAkB,iDAClBC,0BAA2B,2CAC3BC,qBAAsB,uDAG1B7D,UAAW,CACTC,YAAa,eACbO,eAAgB,kBAChBC,qBAAsB,wBACtBJ,wBAAyB,4BACzBD,eAAgB,kBAChBD,gBAAiB,mBACjBD,cAAe,iBACf4D,iBAAkB,qBAClBpD,iBAAkB,oBAClBoC,MAAO,CACLC,gBAAiB,2BACjBC,SAAU,kBACVC,YAAa,qBACbC,oBAAqB,6BACrBC,0BAA2B,wBAC3BC,YAAa,qBACbC,SAAU,kBACVC,WAAY,yBACZC,UAAW,mBACXC,UAAW,mBACXC,cAAe,uBACfC,eAAgB,wBAChBC,iBAAkB,0BAClBC,0BAA2B,qCAC3BC,qBAAsB,gCAExBE,gBAAiB,qBAEnBC,YAAa,CACXC,OAAQ,UAEVC,gBAAiB,GACjBC,kBAAmB,GACnBC,2BAA4B,CAC1BC,KAAM,OACNC,SAAU,WACVC,WAAY,aACZC,gBAAiB,kBACjBC,OAAQ,SACRC,OAAQ,gBAEVC,wBAAyB,SACzBC,iBAAkB,UAClBC,iBAAkB,qBAClBC,WAAY,CACVC,QAAS,UACTC,MAAO,SAETC,eAAgB,CACdC,KAAM,CACJrH,GAAI,eACJsH,MAAO,OACPC,KAAM,YACNC,KAAM,QAERC,MAAO,CACLzH,GAAI,gBACJsH,MAAO,QACPC,KAAM,aACNC,KAAM,SAERE,IAAK,CACH1H,GAAI,cACJsH,MAAO,MACPC,KAAM,WACNC,KAAM,QAGVG,iBAAkB,CAChBC,EAAG,CACDC,QAAS,CACP,CACE5F,MAAO,QACP6F,MAAO,OAGX9H,GAAI,gBACJsH,MAAO,QACPC,KAAM,gBACNC,KAAM,SAERO,EAAG,CACDF,QAAS,CACP,CACE5F,MAAO,MACP6F,MAAO,OAGX9H,GAAI,cACJsH,MAAO,MACPC,KAAM,cACNC,KAAM,OAERQ,EAAG,CACDH,QAAS,CACP,CACE5F,MAAO,OACP6F,MAAO,OAGX9H,GAAI,eACJsH,MAAO,OACPC,KAAM,eACNC,KAAM,SAGVS,6BAA8B,CAC5BC,4BAA4B,EAC5BC,mBAAmB,EACnBC,2BAA2B,EAC3BC,qBAAqB,EACrBC,eAAe,EACfC,WAAW,EACXC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,oBAAoB,EACpBC,mBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,4BAA4B,EAC5BC,wBAAwB,EACxBC,mCAAmC,EACnCC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,oBAAoB,EACpBC,qBAAqB,EACrBC,uBAAuB,EACvBC,uBAAuB,EACvBC,mBAAmB,EACnBC,6BAA6B,EAC7BC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,oBAAoB,EACpBC,6BAA6B,GAE/BC,qCAAsC,CACpC5B,4BAA4B,EAC5BC,mBAAmB,EACnBC,2BAA2B,EAC3BC,qBAAqB,EACrBC,eAAe,EACfC,WAAW,EACXC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,oBAAoB,EACpBC,mBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,4BAA4B,EAC5BC,wBAAwB,EACxBC,mCAAmC,EACnCC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,oBAAoB,EACpBC,qBAAqB,EACrBC,uBAAuB,EACvBC,uBAAuB,EACvBC,mBAAmB,EACnBC,6BAA6B,EAC7BC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,oBAAoB,EACpBC,6BAA6B,GAE/BE,8CAA+C,CAC7CC,mBAAoB,4BACpBC,YAAa,qBACbC,WAAY,qBAEdC,SAAU,CACRC,2BAA4B,gCAC5BC,QAAS,UACTC,QAAS,WAEXC,WAAY,CACVC,UAAW,CACTC,SAAU,WACVC,OAAQ,SACRC,GAAI,OAGRrH,YAAa,CACXsH,KAAM,OACNC,WAAY,aACZC,SAAU,YAEZC,gBAAiB,CACfC,GAAI,oCACJC,GAAI,kCACJC,GAAI,kCACJC,GAAI,kCAEN7G,OAAQ,CACN8G,yBAA0B,kBAC1BC,YAAa,WACbC,YAAa,WACbC,eAAgB,cAChBC,YAAa,WACbC,eAAgB,cAChBC,eAAgB,cAChBC,YAAa,YACbC,aAAc,cAEhBC,mBAAoB,CAClB,CACEtE,KAAM,OACNtF,MAAM,gBAER,CACEsF,KAAM,WACNtF,MAAO,YAET,CACEsF,KAAM,UACNtF,MAAO,YAGXQ,iBAAkB,CAChBC,4BAA6B,kCAE/BoJ,gBAAiB,CACfC,QAAS,EACTC,QAAS,EACTC,UAAW,GAEbC,8BAA+B,CAC7BC,iBAAkB,gCAClBC,iBAAkB,mBAClBC,qBAAsB,uC,QAI1B5I,WAA+B,4BAA6BvC,GAE5D,a,6CCjQMC,EAA6B,CACjC8C,KAAM,CACJC,QAAS,wBAGXC,YAAa,CACXmI,WAAY,cAGdjI,WAAY,EAEZC,OAAQ,CACNC,kBAAmB,cACnBC,uBAAwB,gBACxBC,cAAe,aACfC,cAAe,aACfC,sBAAuB,qBACvBC,yCAA0C,2CAC1CC,wBAAyB,0BACzBC,uBAAwB,yBACxBC,iBAAkB,qB,QAItBtB,WAA+B,6BAA8BtC,GAC7D,a,yHC3BA,IAGMoL,EAAwB,kBAExBjI,EAAS,CACbkI,uBAAwB,CACtBjF,KAAM,yBACNC,KAPiB,cAQjBiF,QATa,WAUbC,OAAQ,CACNC,IAAK,kB,uDCTLC,EAAa,CACjBC,eAAgB,iBAChBC,gBAAiB,kBACjBC,YAAa,cACbC,aAAc,eACdC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,kBAAmB,oBACnB/J,UAAW,YACXgK,gBAAiB,mBAGnB,WACEC,WAAY,UACZC,WAAY,CACVC,MAAO,QACPC,cAAe,gBACfC,aAAc,gBAEhBxJ,KAAM,CAEJyJ,kBAAmBC,4BAA0B,cAE/Cf,WAAY,CACVgB,SAAUhB,EACViB,IAAK,CACHC,EAAGlB,EAAWI,aACde,EAAGnB,EAAWK,gBACde,EAAGpB,EAAWQ,gBACda,EAAGrB,EAAWxJ,UACd8K,EAAGtB,EAAWE,gBACdqB,GAAIvB,EAAWG,YACf/B,GAAI4B,EAAWC,eACf5B,GAAI2B,EAAWO,sB,mDCjCrB,SAASiB,EACPC,EACAC,EACAC,GAIAF,EAAOG,OAAS,CACdC,SAAU,GACVC,aAAc,GACdC,UAAU,GAGZN,EAAOO,UAAY,WACjB,OAAOP,EAAOG,OAAOC,WAAaJ,EAAOG,OAAOE,eAAiBL,EAAOG,OAAOG,UAGjFN,EAAOQ,kBAAoB,WACzBR,EAAOG,OAAOE,aAAe,IAG/BL,EAAOS,QAAU,WACfR,EAAkBQ,WAGpBT,EAAOU,OAAS,SAAAC,GACVX,EAAOG,OAAOG,UAIdK,EAAKC,SACPD,EAAKE,eAELb,EAAOQ,oBACPR,EAAOG,OAAOG,UAAW,EAEzBJ,EAAUY,gBAAgBd,EAAOG,OAAOC,UAAUW,KAAK,WACrDd,EAAkBe,OAAM,KAEzBC,MAAM,SAAAC,GACLlB,EAAOG,OAAOE,aAAeH,EAAUiB,iCAAiCD,GACxElB,EAAOG,OAAOG,UAAW,M,qDAMjClL,eACE,gDACA2K,GAEF,a,0EClDA,SAASqB,EACPpB,EACAC,EACAoB,EACAC,EACApB,EACAqB,GAIA/O,WAAewN,EAAQE,GACvBF,EAAOwB,SAAW,GAClBxB,EAAOyB,iBAAkB,EACzBzB,EAAO0B,UAAY,GACnBJ,EAAaK,gBAAgBZ,KAAK,SAASa,GACrCA,IACF5B,EAAO0B,UAAUxM,MAAQ0M,EAAKC,SAIlC7B,EAAO8B,kBAAoB5B,EAAU6B,iBAAmB7B,EAAU8B,kBAClEhC,EAAOiC,eAAiBV,EAExBvB,EAAOkC,MAAQ,WACb,OAAIlC,EAAOmC,cACFZ,EAAsBzK,SAASsL,qBAGpCpC,EAAOyB,gBACFF,EAAsBzK,SAASuL,uBAGjCrC,EAAOsC,YACVtC,EAAOuC,OACLhB,EAAsBzK,SAAS0L,oBAC/BjB,EAAsBzK,SAAS2L,oBACjCzC,EAAOuC,OACPhB,EAAsBzK,SAAS4L,iBAC/BnB,EAAsBzK,SAAS6L,kBAGrC3C,EAAO4C,oBAAsB,SAASC,GACpC7C,EAAOmC,cAAgBU,GAGzB7C,EAAO8C,iBAAmB,WACxB,OAAO9C,EAAOsC,YACVf,EAAsBzK,SAASiM,iBAC/BxB,EAAsBzK,SAASkM,eAGrChD,EAAOiD,kBAAoB,SAAStC,GAClC,OAAIA,EAAK,yBAAyBuC,OAAOC,SAChC,KAELxC,EAAK,yBAAyByC,SACzB7B,EAAsBzK,SAASuM,2BAEpC1C,EAAK2C,WAAatD,EAAOkB,MACpBlB,EAAOkB,MAET,MAGTlB,EAAOU,OAAS,SAASC,GACvBA,EAAKE,eACLb,EAAOkB,MAAQ,GAEflB,EAAOuD,cAAe,EAEtBlC,EACGmC,4BAA4BxD,EAAOwB,UACnCT,KACC,WACEf,EAAOyB,iBAAkB,GAE3B,SAASP,GACPlB,EAAOkB,MAAQG,EAAgBoC,6BAA6BvC,KAG/DwC,QAAQ,WACP1D,EAAOuD,cAAe,KAI5BvD,EAAOS,QAAU,WACXT,EAAO9I,YACT+I,EAAkBe,OAAM,GAExBf,EAAkBQ,W,8GAKxBrL,eACE,yCACAgM,GAGF,a,yECnGA,SAASuC,EAA0C3D,EAAQqB,EAAiBnB,GAG1E1N,WAAewN,EAAQE,GACvBF,EAAO4D,uBAAwB,EAC/B5D,EAAO6D,wBAAyB,EAEhC7D,EAAO8D,+BAAiC,WACtCzC,EAAgByC,iCAAiC/C,KAC/C,WACEf,EAAO4D,uBAAwB,GAEjC,SAAS1C,GACPlB,EAAO6D,wBAAyB,EAChC7D,EAAOkB,MAAQG,EAAgBoC,6BAA6BvC,MAKlElB,EAAO+D,sBAAwB,WAC7B/D,EAAOgE,uBAAwB,EAC/BhE,EAAO8D,kCAIF9D,EAAOgE,uBACVhE,EAAO8D,iC,mDAOb1O,eACE,4CACAuO,GAGF,a,mFCrCA,SAASM,EACPjE,EACAkE,EACAC,EACAjE,EACAkE,EACAC,EACA9C,GAIA/O,WAAewN,EAAQE,GAEvBF,EAAOsE,oBAAsBD,EAA2BC,oBAExDtE,EAAOuE,oBAAsB,SAASC,GAAQ,MACoDH,EAA2BI,sBAAnHC,EADoC,EACpCA,UAAWC,EADyB,EACzBA,OAAQC,EADiB,EACjBA,0BAA2BC,EADV,EACUA,mBAAoBC,EAD9B,EAC8BA,kBAC1EC,sCAAoCH,EAA2BpS,WAAewN,EAAOgF,0BACrFD,sCAAoCF,EAAoB7E,EAAOiF,kBAC/DF,sCAAoCD,EAAmB9E,EAAOkF,iBAE9Dd,EAA2Be,8BAA8BX,GAAQzD,KAC/D,SAAAqE,GAAY,MACkBA,EAASxD,KAA7BjO,EADE,EACFA,IAAK0R,EADH,EACGA,WACPC,EAAoB,UAAXd,EAAqBa,EAAWE,QAAUF,EAAWC,OACpEP,sCAAoCL,EAAWY,GAC/CP,sCAAoCJ,EAAQH,GAGtCgB,EAAapB,EAA2BqB,eAAe9R,EAAK0R,GAClEK,SAASC,KAAKC,YAAYJ,GAC1BA,EAAW9E,UAEb,SAAAQ,GACE2E,QAAQC,MAAM,0EAA2EtT,WAAe0O,IACxGiD,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsB0E,QAAQ/E,MAAMgB,MAC/CgE,SAAU3E,EAAsB0E,QAAQ/E,MAAMyE,U,yIAOxDvQ,eACE,qDACA6O,GAGF,a,0EClDA,SAASkC,EACPnG,EACAC,EACAoB,EACAnB,EACAqB,GAIA/O,WAAewN,EAAQE,GACvBF,EAAOoG,aAAe,GACtBpG,EAAOqG,oBAAqB,EAE5BrG,EAAOsG,wBAA0B/E,EAAsBrK,YAAYqP,sBACnEvG,EAAOgC,kBAAoB9B,EAAU8B,mBAAqBhC,EAAOwG,eAE7DxG,EAAOwG,eACTxG,EAAOkC,MAAQX,EAAsBrK,YAAYuP,sBAEjDzG,EAAOkC,MAAQX,EAAsBrK,YAAYwP,mBAGnD1G,EAAO2G,qBAAuB,SAAShG,GACrC,OACEA,EAAK,4BAA4BuC,OAAOC,UACxCxC,EAAK,gCAAgCuC,OAAOC,SAErC,KAELxC,EAAK,gCAAgCuC,OAAO0D,WACvCrF,EAAsBrK,YAAY2P,kBAEvClG,EAAK2C,WAAatD,EAAOkB,MACpBlB,EAAOkB,MAET,MAGTlB,EAAOU,OAAS,SAASC,GACvBA,EAAKE,eACLb,EAAOkB,MAAQ,GACVlB,EAAOgC,oBACVhC,EAAOoG,aAAaU,YAAc,eAGpCzF,EAAgB0F,2BAA2B/G,EAAOoG,cAAcrF,KAC9D,WACEf,EAAOkC,MAAQX,EAAsB0E,QAAQjK,QAAQkG,MACrDlC,EAAOqG,oBAAqB,GAE9B,SAASnF,GAKP,OAJgBA,GAASA,EAAM8F,QAAgC,EAAtB9F,EAAM8F,OAAOC,QAAc/F,EAAM8F,OAAO,GAAG/U,MAEtE,GAGZ,KAAK,EACH+N,EAAOkB,MAAQK,EAAsB2F,eAAenI,gBACpD,MACF,KAAK,EACHiB,EAAOkB,MAAQK,EAAsB2F,eAAetI,gBACpD,MACF,KAAK,EACHoB,EAAOkB,MAAQK,EAAsB2F,eAAeC,uBACpD,MACF,KAAK,EACHnH,EAAOkB,MAAQK,EAAsB2F,eAAenS,UACpD,MACF,QACEiL,EAAOkB,MAAQK,EAAsB0E,QAAQ/E,MAAMyE,SAM7D3F,EAAOS,QAAU,WACXT,EAAOqG,mBACTpG,EAAkBe,OAAM,GAExBf,EAAkBQ,W,+FAKxBrL,eACE,4CACA+Q,GAGF,a,kDC1FA,SAASiB,EACPpH,EACAkE,EACAjE,EACAoB,EACAgG,EACA/H,EACAgI,EACAC,EACAhG,GAIAvB,EAAOwH,UAAY,GACnBxH,EAAOgC,kBAAoBhC,EAAOyH,eAAejG,SAASI,KAAK8F,oBAE/D1H,EAAOG,OAAS,CACdwH,eAAe,EACfC,mBAAmB,EACnBC,mBAAmB,GAGrB7H,EAAO8H,eAAiB,WACtB,OAAK9H,EAAOwH,UAAUO,YAIfR,EAAeS,qBAAuBhI,EAAOwH,UAAUO,YAAYE,OAHjE,IAMXjI,EAAOkI,sBAAwB,WAC7BlI,EAAOG,OAAOgI,iBAAmB,MAGnCnI,EAAOoI,sBAAwB,WAC7BpI,EAAOG,OAAOkI,iBAAmB,MAGnCrI,EAAOsI,eAAiB,WACtBtI,EAAOG,OAAOoI,UAAY,MAG5BvI,EAAOwI,WAAa,WAClBxI,EAAOwH,UAAUiB,MAAQ,MAG3BzI,EAAO0I,YAAc,WACnB1I,EAAOG,OAAOyH,mBAAoB,EAClC5H,EAAOoI,wBACFpI,EAAOgC,oBACVhC,EAAOwH,UAAUpH,SAAW,eAE9B,IAAMuI,EAAmB,CACvBC,YAAa5I,EAAOwH,UAAUO,YAAY9V,KAC1CgW,OAAQjI,EAAOwH,UAAUO,YAAYE,OACrCQ,MAAOzI,EAAOwH,UAAUiB,MACxBrI,SAAUJ,EAAOwH,UAAUpH,UAG7BiB,EACGwH,wBAAwBF,GACxB5H,KACC,WACEf,EAAOG,OAAOwH,eAAgB,EAC9B3H,EAAOG,OAAO2I,iBAAkB,EAChC9I,EAAOG,OAAO4I,kBAAmB,GAEnC,SAAS7H,GACPlB,EAAOG,OAAOkI,iBAAmBhH,EAAgB2H,6BAA6B9H,KAGjFwC,QAAQ,WACP1D,EAAOG,OAAOyH,mBAAoB,KAIxC5H,EAAOiJ,oBAAsB,WAC3BjJ,EAAOG,OAAOwH,eAAgB,EAC9B3H,EAAOG,OAAO+I,iBAAkB,GAGlClJ,EAAOmJ,YAAc,WACnBnJ,EAAOG,OAAOiJ,mBAAoB,EAClCpJ,EAAOkI,wBACP,IAAMmB,EAAa,CACjBjJ,SAAUJ,EAAOwH,UAAUpH,UAG7BiB,EACGiI,wBAAwBD,GACxBtI,KACC,WACE,IAAMwI,EAAc,CAClBC,QAASjI,EAAsBpK,SAASsS,sBAE1CxJ,EAAkBe,MAAMuI,IAE1B,SAASrI,GACPlB,EAAOG,OAAOgI,iBAAmB9G,EAAgB2H,6BAA6B9H,KAGjFwC,QAAQ,WACP1D,EAAOG,OAAOiJ,mBAAoB,KAIxCpJ,EAAO0J,WAAa,WAIlB,IACQC,EAJR3J,EAAOG,OAAO0H,mBAAoB,EAClC7H,EAAOsI,iBAEHjB,EAAmBuC,UAAU5J,EAAOwH,UAAUvV,KAAM+N,EAAO6J,eAAe7T,aACtE2T,EAAW,CACf1X,KAAM+N,EAAOwH,UAAUvV,MAGzBoP,EACGyI,wBAAwBH,GACxB5I,KACC,WACE,IAAMwI,EAAc,CAClBC,QAASjI,EAAsBpK,SAAS4S,sBAE1C9J,EAAkBe,MAAMuI,IAE1B,SAASrI,GACPlB,EAAOG,OAAOoI,UAAYlH,EAAgB2H,6BAA6B9H,KAG1EwC,QAAQ,WACP1D,EAAOG,OAAO0H,mBAAoB,MAGtC7H,EAAOG,OAAO0H,mBAAoB,EAClC7H,EAAOG,OAAOoI,UAAd,uBAA0CvI,EAAO6J,eAAe7T,WAAhE,aAIJgK,EAAOgK,WAAa,WAClBhK,EAAOG,OAAO0H,mBAAoB,EAClC7H,EAAOsI,iBAEPjH,EACG4I,8BACAlJ,KACC,SAAiBmJ,GACVA,EAAOC,UACVnK,EAAOG,OAAOoI,UAAY2B,EAAOtI,OAGrC,SAASV,GACPlB,EAAOG,OAAOoI,UAAYhH,EAAsBpK,SAASiT,8BAA8BlJ,KAG1FwC,QAAQ,WACP1D,EAAOG,OAAO0H,mBAAoB,KAIxC7H,EAAOqK,kBAAoB,WAEzBrK,EAAOwH,UAAUO,YAAcuC,EAAEC,KAAKvK,EAAOwK,oBAAoBC,cAAe,SAC9E1C,GAEA,OACEA,EAAYE,SAAWjI,EAAO6J,eAAe5B,QAC7CF,EAAY9V,OAAS+N,EAAO6J,eAAejB,cAK1C5I,EAAOwH,UAAUO,cACpB/H,EAAOwH,UAAUO,YAAc/H,EAAOwK,oBAAoBC,cAAc,KAI5EzK,EAAO0K,KAAO,WACZ,IACQC,EADJ3K,EAAO6J,eAAee,eAClBD,EAAa3K,EAAO6J,eAAee,aACrC5K,EAAO6J,eAAee,aAAaC,MAAM,QACzC,KACJ7K,EAAO6J,eAAec,WAAaA,EAAaA,EAAW,GAAK,MAG9D3K,EAAOwK,oBAAoBC,cAC7BzK,EAAOqK,oBAEP/C,EAAawD,iBAAiB9K,EAAOyH,eAAejG,SAASI,KAAKmJ,gBAAgBhK,KAChF,SAAiBa,GACf5B,EAAOwK,oBAAoBC,cAAgB7I,EAEtC5B,EAAOwK,oBAAoBC,cAKhCzK,EAAOqK,oBAJLrK,EAAOG,OAAO6K,aAAezJ,EAAsBpK,SAAS8T,yBAMhE,WACEjL,EAAOG,OAAO6K,aAAezJ,EAAsBpK,SAAS8T,2BAMpEjL,EAAO0K,O,4JAGTtV,eACE,yCACAgS,GAGF,a,0ECnNA,SAAS8D,EACPlL,EACAC,EACAoB,EACAnB,EACAqB,GAIA/O,WAAewN,EAAQE,GACvBF,EAAOmL,QAAU,GACjBnL,EAAOoL,kBAAmB,EAE1BpL,EAAOqL,gBAAkB,SAAS1K,GAChC,OACEA,EAAK2K,OAAOpI,OAAOC,UACnBxC,EAAK2K,OAAOpI,OAAOqI,WACnB5K,EAAK6K,cAActI,OAAOC,UAC1BxC,EAAK6K,cAActI,OAAOqI,UAEnB,KAEL5K,EAAK8K,QAAU9K,EAAK6K,cAActI,OAAO0D,WACpCrF,EAAsBlK,UAAUwP,kBAErClG,EAAK2C,WAAatD,EAAOkB,MACpBlB,EAAOkB,MAET,MAGTlB,EAAOU,OAAS,SAASC,GACnBA,EAAKC,SACPD,EAAKE,eACLb,EAAOkB,MAAQ,GACfG,EAAgBqK,6BAA6B1L,EAAOmL,QAAQG,QAAQvK,KAClE,WACEf,EAAOoL,kBAAmB,GAE5B,SAASlK,GACPlB,EAAOkB,MAAQG,EAAgBsK,2BAA2BzK,OAMlElB,EAAOS,QAAU,WACXT,EAAO4L,WACT3L,EAAkBe,OAAM,GAExBf,EAAkBQ,W,+FAKxBrL,eACE,0CACA8V,GAGF,a,0EC5DA,SAASW,EACP7L,EACAkE,EACAjE,EACAoB,EACAnB,GAIA1N,WAAewN,EAAQE,GACvBF,EAAOmL,QAAU,GAEjBnL,EAAOqL,gBAAkB,SAAS1K,GAChC,OAAIA,EAAK2C,WAAatD,EAAOkB,MACpBlB,EAAOkB,MAET,MAGTlB,EAAOU,OAAS,SAASC,GACnBA,EAAKC,SACPD,EAAKE,eACLb,EAAOkB,MAAQ,GACfG,EAAgByK,6BAA6B9L,EAAOmL,QAAQY,KAAKhL,KAC/D,SAASmJ,GACPjK,EAAkBe,MAAMkJ,IAE1B,SAAShJ,GACPlB,EAAOkB,MAAQG,EAAgBsK,2BAA2BzK,O,8EAOpE9L,eACE,0CACAyW,GAGF,a,0ECxCA,SAASG,EACPhM,EACAC,EACAoB,EACAnB,EACAqB,GAIA/O,WAAewN,EAAQE,GACvBF,EAAO4B,KAAO,GACd5B,EAAOG,OAAS,CACdoD,cAAc,EACdrC,MAAO,IAGTlB,EAAOiM,SAAW,WAChB,OAAO1K,EAAsB9J,iBAAiByU,YAAYlM,EAAOmM,WAGnEnM,EAAOoM,wBAA0B,SAASzL,GACxC,OAAIA,EAAK2C,WAAatD,EAAOG,OAAOe,MAC3BlB,EAAOG,OAAOe,MAEhB,MAGTlB,EAAOqM,iBAAmB,WACxB,MAA+B,KAAxBrM,EAAOG,OAAOe,OAGvBlB,EAAOsM,mBAAqB,WAC1BtM,EAAOG,OAAOe,MAAQ,IAGxBlB,EAAOU,OAAS,SAASC,GACvBA,EAAKE,eACLb,EAAOsM,qBAEPtM,EAAOG,OAAOoD,cAAe,EAE7BlC,EACGkL,4BAA4BvM,EAAOmM,SAAUnM,EAAO4B,KAAKxB,UACzDW,KACC,WACEd,EAAkBe,OAAM,IAE1B,SAASE,GACPlB,EAAOG,OAAOe,MAAQK,EAAsB9J,iBAAiB+U,oBAAoBtL,KAGpFwC,QAAQ,WACP1D,EAAOG,OAAOoD,cAAe,KAInCvD,EAAOS,QAAU,WACfR,EAAkBQ,W,+FAItBrL,eACE,iDACA4W,GAGF,a,iEClEA,SAASS,EACPzM,EACAC,EACAC,EACAwM,GAKE1M,EAAO2M,eAAiB,wCAEiB,EAArCzM,EAAU0M,kBAAkB3F,SAC1B/G,EAAU2M,YAAcC,2BAC1B9M,EAAO2M,eAAiB,6CACfzM,EAAU2M,YAAcC,qCACjC9M,EAAO2M,eAAiB,uDAK9B3M,EAAOG,OAAS,CACdC,SAAU,GACVC,aAAc,GACd0M,6BAA8B/M,EAAO2M,eACrCrM,UAAU,GAGZN,EAAOO,UAAY,WACjB,OAAOP,EAAOG,OAAOC,WAAaJ,EAAOG,OAAOE,eAAiBL,EAAOG,OAAOG,UAGjFN,EAAOQ,kBAAoB,WACzBR,EAAOG,OAAOE,aAAe,IAG/BL,EAAOS,QAAU,WACfR,EAAkBQ,WAGpBT,EAAOU,OAAS,SAAAC,GACVX,EAAOG,OAAOG,UAIdK,EAAKC,SACPD,EAAKE,eAELb,EAAOQ,oBACPR,EAAOG,OAAOG,UAAW,EAEzBoM,EACGM,2BAA2B9M,EAAU2M,UAAW7M,EAAOG,OAAOC,UAC9DW,KAAK,WACJd,EAAkBe,OAAM,KAEzBC,MAAM,SAAAC,GACLlB,EAAOG,OAAOE,aAAea,EAAMsI,QACnCxJ,EAAOG,OAAOG,UAAW,M,kFAMnClL,eACE,wCACAqX,GAEF,a,0ECnEA,SAASQ,EACPjN,EACAC,EACAoB,EACAnB,EACAqB,EACA2L,GAIA1a,WAAewN,EAAQE,GACvBF,EAAOmN,KAAO,GACdnN,EAAOoN,uBAAwB,EAC/BpN,EAAOgC,kBAAoB9B,EAAU8B,kBACrChC,EAAOqN,4BAA8BnN,EAAUmN,4BAC/CrN,EAAOsN,qBAAuB,SAAS3M,GACrC,OAAIA,EAAK2C,WAAatD,EAAOkB,MACpBlB,EAAOkB,MAET,MAGTlB,EAAOuN,mBAAqB,WAC1B,OAAIvN,EAAOqN,4BACFH,EAAiBM,IAAI,4CAGvBN,EAAiBM,IAAI,4CAA6C,CACvEC,UAAW,uCACXC,MAAO,UAIX1N,EAAO2N,iBAAmB,WACxBtM,EAAgBuM,6BAA6B5N,EAAOmN,MAAMpM,KACxD,SAASmJ,GACPlK,EAAOoN,uBAAwB,GAEjC,SAASlM,GACP,IAAI2M,EAAWtM,EAAsB0E,QAAQ/E,MAAMyE,KAC/CzE,GAASA,EAAM8F,QAAU9F,EAAM8F,OAAO,IAAM9F,EAAM8F,OAAO,GAAGwC,UAC9DqE,EAAW3M,EAAM8F,OAAO,GAAGwC,SAE7BxJ,EAAOkB,MAAQ2M,KAKrB7N,EAAOU,OAAS,SAASC,GACvBA,EAAKE,eACLb,EAAOkB,MAAQ,GACVlB,EAAOgC,oBACVhC,EAAOmN,KAAK/M,SAAW,eAGzBJ,EAAO2N,oBAGT3N,EAAOS,QAAU,WACXT,EAAOoN,sBACTnN,EAAkBe,OAAM,GAExBf,EAAkBQ,W,kHAKxBrL,eACE,+CACA6X,GAGF,a,m+CC7DA,SAASa,EACP9N,EACA+N,EACA7J,EACA8J,EACA3M,EACA4M,EACAC,EACAC,EACAC,EACAC,EACAC,EACAnK,EACAoK,EACAhN,EACA8C,EACAD,EACAvR,EACA2b,EACAtB,EACAuB,EACAC,EACAC,EACAC,GAIA,IAaMC,EACAC,EACAC,EAfAC,EAAa,SACbC,EAAc,UACdC,EAAU,MACVC,EAAe,WACfC,EAAc,UACdC,EAAY,QAEdC,GAAsB,EACpBC,EAAOC,QAAQ,IAAIA,OAEnBC,EAA4BjB,EAAuBkB,WAAWhS,QAAQiS,YAEtEC,EA6EG,CACLC,cACAC,UA9CgB,SAAUC,GAC1B,QAAKF,MAIDd,EACKF,GAEJC,IApCgCiB,EAqCdA,EAlCvBjB,IADAD,EADAE,GAA0B,GAGtBiB,6BACFA,0CAAwC,SAAUF,GAEhDf,IADAD,GAAyB,GAEzBD,EAAwBiB,EACxB7B,EAAS,cACT8B,GAAS,OA6BN,IAvCoB,IAAUA,GA2ErCE,OAjCa,SAAUF,GAClBF,KAGLK,wCAAsC,WACpCF,gDAA8CG,QAC5CC,8EAEFC,IACAN,OAyBFO,QArBc,SAAUP,GACnBF,KAGLK,yCAAuC,WACrCF,gDAA8CG,QAC5CC,+EAEFC,IACAN,OAaFQ,aATmB,WACnB,OAAO,IAtDmB,SAAtBF,IAEJxB,EADAE,GAA0B,EAIR,SAAdc,IACJ,OACEG,6BACAA,+CACAE,iCAyDN,IACMrB,EACAC,EACAC,EAHAyB,GAGAzB,EADAD,EADAD,EApFAE,EADAD,EADAD,GAAwB,EA0IrB,CACLgB,YArBkB,WAClB,OAAO,GAqBPU,aAlBmB,WACnB,OAAOE,oEAkBPR,OAfa,WACb9B,EAAUuC,eAAe,uCACzB7B,GAAwB,GAcxByB,QAXc,SAAUP,GACxBU,wDAAsD,WA3BtD5B,EADAE,GAA0B,EA8BxBgB,GAAS,MASXD,UAnCgB,SAAUC,GAC1B,OAAIhB,EACKF,GAEJC,IAtBgCiB,EAuBdA,EApBvBjB,IADAD,EADAE,GAA0B,GAG1B0B,8CAA4C,SAAUX,GAEpDf,IADAD,GAAyB,GAEzBD,EAAwBiB,EACxB7B,EAAS,cACT8B,GAAS,OAgBJ,GAzBoB,IAAUA,KA+EzC,IAs1EIY,EAt1EEC,EAAsB,IACtBC,EAAiCtC,EAA6BuC,8BAC9DC,EACJxC,EAA6ByC,+BA4B/B,SAASC,IACP,IACQC,EADJlR,EAAOyH,eAAejG,SAASI,QAC3BsP,EAAelR,EAAOyH,eAAejG,SAASI,MACvCuP,cAAgBnR,EAAOyH,eAAe2J,iBAC/CF,EAAaC,gBACfD,EAAaG,qBAAuB1C,EAAe2C,qBACjDtR,EAAOyH,eAAe2J,iBAAiBC,sBAEzCH,EAAaK,oBAAsBvR,EAAOyH,eAAe2J,iBAAiBI,QACtEtE,EAAiBqC,KAAKkC,EACpB,IAAIC,KAAK1R,EAAOyH,eAAe2J,iBAAiBI,SAChD,SAEF,KACJN,EAAaS,uBAAyBzE,EAAiBqC,KAAKkC,EAC1D,IAAIC,KAAK1R,EAAOyH,eAAe2J,iBAAiBQ,YAChD,WA8mFR,SAASC,EAAiB3P,EAAOyD,GAC/B,OAAOxB,EAAa4B,KAAK,CACvBC,UAAW9D,EACXgE,SAAUP,IA0Fd,SAASmM,EAAqBC,GAC5B1Q,EAAgByQ,qBAAqBC,GAtvFvChB,EAAgCiB,QAAQ,SAAUC,GACnB,gBAAzBA,EAAKC,kBACPD,EAAKE,qBAAuB,WAC1B,IAAMC,EAAgB,0BAAH,OAA6BpS,EAAOqS,oBAAoBC,qBAAxD,cACbC,EAAiBvS,EAAOqS,oBAAoBG,iBAC9C,sCACA,GACJ,4DAAsDJ,GAAtD,OAAsEG,EAAtE,MAEFN,EAAKQ,iBAAkB,EACvBR,EAAKS,kBAAoB9C,EAAyBC,YAClDoC,EAAKU,iBAAmB/C,EAAyBK,OACjDgC,EAAKW,kBAAoBhD,EAAyBU,QAClD2B,EAAKY,mBAAqBjD,EAAyBE,UACnDmC,EAAK1B,aAAeX,EAAyBW,cAGlB,eAAzB0B,EAAKC,kBACPD,EAAKS,kBAAoBlC,EAAwBX,YACjDoC,EAAKU,iBAAmBnC,EAAwBP,OAChDgC,EAAKW,kBAAoBpC,EAAwBF,QACjD2B,EAAKY,mBAAqBrC,EAAwBV,UAClDmC,EAAK1B,aAAeC,EAAwBD,gBA2BhDvQ,EAAO8S,eAAiB,8CACxB9S,EAAO+S,iBAAmB,CACxBC,MAAO,yDACPC,OAAQ,0DAIVjT,EAAOkT,iBAAmB1gB,QACvB2gB,QAAQzN,SAAS0N,eAAe,qBAChCC,KAAK,yBAERrT,EAAOsT,kBAAmB,EAE1BtT,EAAOuT,gBAAkBlS,EAAgBkS,gBACzCvT,EAAOuT,gBAAgBC,aAAenP,EAA2BoP,uBACjEzT,EAAOuT,gBAAgBG,YAAcrP,EAA2BsP,oBAC9DpE,EAAKqE,gBAAgB,SAGvB5T,EAAO6T,aAAe,CACpBC,aAAcjhB,EAA0B6F,iBACxCqb,aAAclhB,EAA0B6F,iBACxCsb,gBAAiB,IAGnBhU,EAAOiU,wBAA0B,CAC/BC,8BAA8B,EAC9BC,8BAA8B,EAC9BC,8BAA+B,IAC/BC,UAAU,GAGZrU,EAAOsU,kBAAoB,CACzBxE,WAAW,EACXyE,YAAY,EACZC,cAAe,KACfC,UAAW,GAGbzU,EAAO0U,cAAgB,CACrBC,oBAAqB,CACnBC,kBAAkB,IAItB5U,EAAO6U,kBAAoB,CACzBC,6BAA6B,EAC7BC,aAAc,GACdC,SAAU,IAGZhV,EAAOiV,oBAAsB,SAAU/T,GACrC,IAAI2M,EAAW3M,EAIf,OAHIA,GAASA,EAAM8F,QAAU9F,EAAM8F,OAAO,IAAM9F,EAAM8F,OAAO,GAAGwC,UAC9DqE,EAAW3M,EAAM8F,OAAO,GAAGwC,SAEtBqE,GAGT7N,EAAOkV,cAAgB,WACrBC,MAAMC,UAAUC,YAAY,CAC1BtF,SAD0B,SACjB3K,GACP,IAAMkQ,EAAWlQ,GAAYA,EAAS+H,KAAO/H,EAAS+H,KAAKoI,SAAW,GACtEtH,EAAS,WACPjO,EAAO6U,kBAAkB1Y,UAAU6V,QAAQ,SAAU7F,GAEjDA,EAASA,SAASqJ,gBAClB3iB,EAA0BqJ,WAAWC,UAAUC,WAE/C+P,EAASsJ,WAAaH,WAQlCtV,EAAO0V,KAAO,CACZC,yBAAyB,EACzBC,0BAA0B,GAI5B5V,EAAOyH,eAAiB,CACtBjG,SAAU,GACVqU,wBAAwB,EACxBC,iBAAiB,EACjB7gB,YAAapC,EAA0BoC,YAAYsH,KACnDrH,MAAO,IAGT8K,EAAO+V,UAAY,CACjBC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,QAAS,IAGXnW,EAAOoG,aAAe,CACpBgQ,YAAa,GACbC,gBAAiB,IAGnBrW,EAAOsW,qBAAuB,CAC5BC,yBAA0B,GAC1BC,gCAAiC,GACjCC,iCAAkC,GAClCC,8BAA+B,IAGjC1W,EAAO8Q,8BAAgC,GAEvC9Q,EAAOgR,+BAAiC,GAGxChR,EAAO2W,gBAAkB,GACzB3W,EAAO4W,sBAAwB,GAC/B5W,EAAO6W,mBAAqB,GAC5B7W,EAAO8W,aAAe,GACtB9W,EAAO+W,iBAAmB,CACxBC,WAAY,CACVhS,wBAAyB,KACzBiS,sBAAuB,KACvBC,kBAAkB,IAItBlX,EAAO2U,oBAAsB,GAC7B3U,EAAOmX,eAAiB,GACxBnX,EAAOoX,cAAgB,GACvBpX,EAAOqX,kBAAoB,GAC3BrX,EAAOwK,oBAAsB,GAE7BxK,EAAOsX,sBAAwBzkB,EAA0B4I,qCAEzDuE,EAAOuX,SAAW,CAChBC,YAAa,GACbC,UAAW,GACXC,OAAQ,GACRC,QAAS,GACTC,mBAAmB,EACnBC,0BAA0B,GAG5B7X,EAAO8X,YAAc,CACnBX,gBAAgB,GAIlBnX,EAAO+X,qBAAuB,GAC9B/X,EAAOgY,2BAA6B,CAClCC,wCAAwC,EACxCC,gCAAgC,EAChCC,sBAAsB,EACtBC,yBAAyB,GAG3BpY,EAAOqY,iBAAmB,WACxB,IASMC,EATFtY,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOqY,iBAAkBzH,IAI1D5Q,EAAO6J,eAAiBrX,QAAQimB,OAAOzY,EAAO6J,eAAgB,CAC5D7T,WAAYgK,EAAOwK,oBAAoBkO,yBAGnCJ,EAAc,CAClBzkB,YAAahB,EAA0BiB,UAAU8C,MAAMO,SACvDhC,WAAYtC,EAA0B8D,YAAYC,MAAMO,SACxDwhB,MAAO3Y,GAGTsO,EAAUvI,KAAKuS,GAAapO,OAAOnJ,KAAK,SAAUa,GAChDgX,uCAAqCC,EAAE,kBAAmB,IAAK,IAAMjX,EAAK4H,SAC1ExJ,EAAO8Y,qBAIX9Y,EAAO+Y,YAAc,WACnB,IAAMC,EAAO9L,EAAiBM,IAAI,oCAClCiB,EAAsBzS,QAAQgd,EAAM,IAAK,MAG3ChZ,EAAOiZ,eAAiB,SAAUrX,GApQlC,IAcUsX,EAuPRlZ,EAAOyH,eAAejG,SAAW,CAC/BI,OACAyS,UAAU,GAGZpD,IAGAjR,EAAOyH,eAAe0R,iBACpBnZ,EAAOyH,eAAejG,SAASI,KAAKwX,eACpCpZ,EAAOyH,eAAejG,SAASI,KAAKyX,gBACtCrZ,EAAOyH,eAAeoO,uBACpB7V,EAAOyH,eAAejG,SAASI,KAAKwX,gBACnCpZ,EAAOyH,eAAejG,SAASI,KAAKyX,gBACvCrZ,EAAOyH,eAAexS,YAAc+K,EAAOsZ,iBAC3CtZ,EAAOyH,eAAevS,MAAQ8K,EAAOyH,eAAejG,SAASI,KAAK2X,UAElEvZ,EAAOwZ,sBAAsBxZ,EAAOyH,eAAejG,SAASI,KAAK6X,YACjEzZ,EAAO0Z,4BACL1Z,EAAOyH,eAAejG,SAASI,KAAK+X,4BAEtCnnB,QAAQwf,QACNhS,EAAOyH,eAAejG,SAASI,KAAKgY,+BACpC,SAAU3H,GACRjS,EAAO8Q,8BAA8BmB,GAAQpB,EAA+BoB,KAGhFjS,EAAOgR,+BAAiCD,EAAgC8I,OAAO,SAC7EpgB,GAMA,IADS,IAFPuG,EAAOyH,eAAejG,SAASI,KAAKkY,gCAAgCzmB,QAClEoG,EAAMyY,iBAEC,CACH6H,EACJlnB,EAA0B6I,8CACxBjC,EAAMyY,iBAEV,GAAI6H,EACF,OAAO/Z,EAAOsX,sBAAsByC,GAGxC,OAAO,IAET/Z,EAAOqS,oBAAsB,CAC3BC,qBAAsB1Q,EAAKoY,yCAC3BxH,iBAAkB5Q,EAAKqY,mCAEzBja,EAAOka,kBAAoB,SAAUC,GACnC,OAAkB,MAAXA,EAAkB,IAAMjN,EAAiBqC,KAAK6K,EAAED,EAAS,YAElEna,EAAOqa,oBAAsB,SAAUC,GACrC,OAAOpN,EAAiBqC,KAAKkC,EAAE,IAAIC,KAAK4I,GAAY,CAAElhB,MAAO,UAE/D4G,EAAOua,mBAAqB,SAAUD,GACpC,OAAOpN,EAAiBqC,KAAKkC,EAAE,IAAIC,KAAK4I,GAAY,CAAEthB,KAAM,aAE9DgH,EAAOwa,0BACPxa,EAAOya,yBAAyBza,EAAOyH,eAAejG,SAASI,KAAK8Y,0BACpE1a,EAAO2a,iBAAiB3a,EAAOyH,eAAejG,SAASI,KAAK6X,YACxDzZ,EAAOyH,eAAejG,SAASI,KAAKgZ,qBACtC5a,EAAO6a,uBAET7a,EAAO8a,wBACP9a,EAAO+a,oBAEP/a,EAAOgb,yBACPhb,EAAOib,kBACPjb,EAAOkb,qBACPlb,EAAOmb,6BACPnb,EAAOob,UAAUxZ,GA3Ub0N,IAGJA,GAAsB,GAEhB+L,EAASjN,EAAUiN,UACdC,eACTtb,EAAOub,cACEF,EAAOG,eACVhS,EACJvH,eAAelL,YACbskB,EAAOG,aAAevZ,eAAelL,YAAY0kB,gBAC9CxZ,eAAelL,YAAY2kB,mBAC5BxC,EACJjX,eAAelL,YAAYskB,EAAOG,aAAevZ,eAAelL,YAAY4kB,eAC5E,GACF3b,EAAO4b,aAAapS,EAAS0P,MA+TjClZ,EAAO6b,eAAiB,WACtBxa,EAAgBya,sBAAsB/a,KACpC,SAAUmJ,GACRlK,EAAOiZ,eAAe/O,IAExB,SAAUhJ,GACRlB,EAAOyH,eAAejG,SAAW,CAC/BI,KAAMV,EACNmT,UAAU,MAMlBrU,EAAO+b,uBAAyB,WAC9BpN,EAAeqN,gBAAgBjb,KAAK,SAAUa,GAC5C5B,EAAOyH,eAAe2J,iBAAmBxP,EAAOA,EAAKqa,yBAA2B,KAChFhL,OAIJjR,EAAOkc,uBAAyB,WAC9B,IAAMC,EAAmBnc,EAAOyH,eAAejG,SAASI,KAAKwa,iBACzDC,cAAcF,GAChBE,kCAAgC,gBAAiB,CAAEC,IAAKH,KAI5Dnc,EAAOuc,gBAAkB,WACvB,SACEvc,EAAOyH,gBACPzH,EAAOyH,eAAejG,UACtBxB,EAAOyH,eAAejG,SAASI,OAExB5B,EAAOyH,eAAejG,SAASI,KAAKuP,eAK/CnR,EAAOwc,oBAAsB,WAC3B,SACExc,EAAOyH,gBACPzH,EAAOyH,eAAejG,UACtBxB,EAAOyH,eAAejG,SAASI,OAExB5B,EAAOyH,eAAejG,SAASI,KAAK2P,qBAO/CvR,EAAOob,UAAY,SAAUlR,GAE3BlK,EAAO8X,YAAYX,eAAiBjN,EAAOuS,yCAG3Czc,EAAOyH,eAAeiV,sBAAwBxS,EAAOyS,sBAErD3c,EAAO4c,yBACP5c,EAAO6c,sBACP7c,EAAO8c,kBACP9c,EAAO+c,mBACP/c,EAAOgd,uBACPhd,EAAOid,2BACPjd,EAAOkd,wBACPld,EAAOmd,qBACPnd,EAAOod,sBACPpd,EAAOqd,sBACPrd,EAAOsd,4BACPtd,EAAOud,qBAGTvd,EAAO4c,uBAAyB,WAC9B5c,EAAO8Y,kBAGT9Y,EAAO8Y,eAAiB,WACtBzX,EAAgBmc,gBAAgBzc,KAC9B,SAAUmJ,GACJlK,EAAOyH,eAAejG,SAASI,KAAK6b,cACtCzd,EAAOwK,oBAAoBkT,sBAAuB,EAClD1d,EAAOwK,oBAAoB5B,YAAcsB,EAAOtB,YAChD5I,EAAOwK,oBAAoBvC,OAASiC,EAAOjC,OAC3CjI,EAAOwK,oBAAoB/B,MAAQyB,EAAOzB,MAC1CzI,EAAOwK,oBAAoBmT,gBAAkBzT,EAAO0T,WACpD5d,EAAOwK,oBAAoBkO,uBAAyBxO,EAAOwO,yBAG/D,SAAUxX,GACRgD,EAAK4B,MAAM,0BAKjB9F,EAAO6d,aAAe,WACpBxc,EAAgByc,oBAAoB/c,KAClC,SAAUmJ,GAAQ,IACRuN,EAAczX,EAAOuX,SAArBE,UACRA,EAAUsG,SAAW7T,EAAO6T,SAC5BtG,EAAUuG,WAAa9T,EAAO8T,WAC9BvG,EAAUwG,UAAY/T,EAAO+T,UAC7Bje,EAAOuX,SAASE,UAAUyG,cAAgB,WAExC,OADU,IAAIxM,KAAK+F,EAAUwG,UAAWxG,EAAUuG,WAAa,EAAGvG,EAAUsG,WAG9E/d,EAAOme,eACPne,EAAOoe,iBACPpe,EAAOqe,gBACP5G,EAAU6G,kBAAoB7G,EAAUyG,iBAE1C,SAAUhd,GACRgD,EAAK4B,MAAM,uCAIjB9F,EAAO6c,oBAAsB,WACvB7c,EAAOue,gCACTve,EAAOuT,gBAAgBiL,qBAAuB,CAC5CC,MAAO5rB,EAA0ByG,iBACjColB,WAAW,IAAIlP,QAAOmP,uBAAuBC,wBAIjDvd,EAAgBwd,sBAAsB9d,KACpC,SAAUmJ,GACRlK,EAAOuX,SAASC,YAActN,EAAOsN,aAEvC,SAAUtW,GACRgD,EAAK4B,MAAM,wCAIf9F,EAAO6d,eAEPxc,EAAgByd,kBAAkB/d,KAChC,SAAUmJ,GACR,IACM6U,EADF7U,EAAOlO,SACL+iB,EAAY,EACZ7U,EAAO6U,YACTA,EAAY7U,EAAO6U,WAErB/e,EAAOuX,SAASI,QAAQoH,UAAYA,GAEpC7a,EAAK4B,MAAL,oDAAwDoE,EAAO7J,gBAGnE,SAAUa,GACRgD,EAAK4B,MAAM,oCAIfzE,EAAgB2d,iBAAiBje,KAC/B,SAAUmJ,GACRlK,EAAOuX,SAASG,OAASxN,EAAOwN,OAAOuH,YAEzC,SAAU/d,GACRgD,EAAK4B,MAAM,mCAKb9F,EAAOsX,sBAAsBlc,6BAC7B4E,EAAOgY,2BAA2BI,yBAEP,OAA3B8G,oCAA2B,IAA3BA,8EAA8Cne,KAC5C,SAAUmJ,GACRlK,EAAOuX,SAASK,kBAAoB1N,EAAO0T,WAC3C5d,EAAOuX,SAASM,0BAA2B,EAC3C7X,EAAOmf,UAET,SAAUje,GACRgD,EAAK4B,MAAM,kDAMnB9F,EAAOof,UAAY,WACjBF,sDAAoDjpB,gCAA+B,CACjFopB,OAAQnhB,0BAEVghB,+CAA6Cne,KAA7C,e,EAAA,G,EAAA,wBACE,WAAMmJ,GAAN,wFACOA,EAAO0T,WADd,gCAKcsB,sDALd,sCAQMlf,EAAOuX,SAASK,mBAAoB,EACpC5X,EAAOuX,SAASM,0BAA2B,EAC3C7X,EAAO6d,eACP7d,EAAOmf,UAXb,wC,+KADF,sDAgBE,SAAAG,GACEzN,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,MAEtCzB,EAAK4B,MAAM,kDAKjB9F,EAAOuf,kBAAoB,WACrBvf,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOuf,kBAAmB3O,GAI3DvP,EAAgBme,uBAAuBxf,EAAOuX,SAASC,aAAazW,KAClE,SAAUmJ,GACR2H,EACEtQ,EAAsB0E,QAAQjK,QAAQkG,MACtCX,EAAsB0E,QAAQjK,QAAQ2J,OAG1C,SAAUzE,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,MAEtCzB,EAAK4B,MAAM,0CAKjB9F,EAAOc,gBAAkB,WACS,SAA1B2e,IACJzf,EAAOuX,SAASE,UAAUuG,WACxBhe,EAAOuX,SAASE,UAAU6G,kBAAkBoB,WAAa,EAC3D1f,EAAOuX,SAASE,UAAUsG,SAAW/d,EAAOuX,SAASE,UAAU6G,kBAAkBqB,UACjF3f,EAAOuX,SAASE,UAAUwG,UAAYje,EAAOuX,SAASE,UAAU6G,kBAAkBsB,cAClF5f,EAAOme,eALT,IA8CM0B,EA6CAC,EA/DAC,EAZqB,SAAU/mB,EAAMI,EAAOC,GAChD,IAAI2mB,EAAa3mB,EACX4mB,EAAe7mB,EAAQ,EACzB8mB,EAAW,IAAIxO,KAAK1Y,EAAMinB,EAAc5mB,EAAK,EAAG,EAAG,EAAG,GAC1D,GAAI6mB,EAASR,WAAaO,EACxB,KAAOC,EAASR,aAAeO,GAC7BD,IACAE,EAAW,IAAIxO,KAAK1Y,EAAMinB,EAAcD,EAAY,EAAG,EAAG,EAAG,GAGjE,OAAOE,EAEWC,CAClBngB,EAAOuX,SAASE,UAAUwG,UAC1Bje,EAAOuX,SAASE,UAAUuG,WAC1Bhe,EAAOuX,SAASE,UAAUsG,UAE5B/d,EAAOuX,SAASE,UAAUuG,WAAa+B,EAAYL,WAAa,EAChE1f,EAAOuX,SAASE,UAAUsG,SAAWgC,EAAYJ,UACjD3f,EAAOuX,SAASE,UAAUwG,UAAY8B,EAAYH,cAE9C5f,EAAOuY,wBACTvY,EAAOwY,wBACLxY,EAAOc,gBACP8P,EACA6O,IAKEI,EAAyB,SAAUO,EAAyBhgB,GAC1DigB,EAAwBhf,EAC3Bif,qBAAqBtgB,EAAOuX,SAASE,UAAWrX,GAChDW,KAAK,SAAUmJ,GACVkW,GACFrS,EAAQ5a,SAASotB,SAFG,IAKd9I,EAAczX,EAAOuX,SAArBE,UACRA,EAAUyG,cAAgB,WAExB,OADU,IAAIxM,KAAK+F,EAAUwG,UAAWxG,EAAUuG,WAAa,EAAGvG,EAAUsG,WAG9EtG,EAAU6G,kBAAoB7G,EAAUyG,gBACxCle,EAAOme,eACPne,EAAOuX,SAASK,mBAAoB,IAgBxC,OAZG5X,EAAOgY,2BAA2BwI,gCAClCJ,GAEDC,EAAsBpf,MAAM,SAAUC,GACpC2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,MAEtC8Z,IACAvb,EAAK4B,MAAM,uCAGRua,GAIPrgB,EAAOuX,SAASE,UAAUyG,gBAAgBuC,SAAS,EAAG,EAAG,EAAG,KAC5D,IAAI/O,MAAO+O,SAAS,EAAG,EAAG,EAAG,KAE7BhB,IACA5N,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCgL,EAAiBM,IAAI,8BAInBsS,EAAkC,WACtC,IAAMM,EACJpgB,EAAOuX,SAASE,UAAU6G,mBAC0C,IAApEte,EAAO0gB,aAAa1gB,EAAOuX,SAASE,UAAU6G,oBAC9Cte,EAAO0gB,aAAa1gB,EAAOuX,SAASE,UAAUyG,iBAAmB,GAE/DkC,EAEGpgB,EAAOyH,eAAejG,SAASI,KAAK+e,iBAOvCtf,EACGuf,0BACA7f,KAAK,SAAUmJ,GAWVtT,EARFsT,GACAA,EAAO/N,WACP+N,EAAO/N,UAAU,IACjB+N,EAAO/N,UAAU,GAAGgQ,SAASqJ,gBAC3B3iB,EAA0BqJ,WAAWC,UAAUC,SAG7C4D,EAAOyH,eAAejG,SAASI,KAAKif,iCAC9B1c,EAAa4B,KAAK,CACxBC,UAAWzE,EAAsBuf,eAAeC,aAAa7e,MAC7DgE,SAAU3E,EAAsBuf,eAAeC,aAAapb,OAGtDxB,EAAa4B,KAAK,CACxBC,UAAWzE,EAAsBuf,eAAe7a,QAAQ/D,MACxDgE,SAAU3E,EAAsBuf,eAAeE,iBAAiBrb,KAChEsb,kBAAkB,EAClBC,iBACE3f,EAAsBuf,eAAeE,iBAAiBG,gBACxDC,kBACE7f,EAAsBuf,eAAeE,iBAAiBK,kBAGnDrhB,EAAOgY,2BAA2BwI,+BACnClS,EAAUvI,KAAK,CACrBlS,YAAahB,EAA0BiB,UAAU8C,MAAMC,gBACvD1B,WAAYtC,EAA0B8D,YAAYC,MAAMC,gBACxDzE,QAAS,CACP8N,UAAW,CACTY,gBADS,SACOV,GACd,OAAOyf,EAAuBO,EAAyBhgB,IAEzDe,iCACEE,EAAgBF,qCAKhBgD,EAAa4B,KAAK,CACxBC,UAAWzE,EAAsBuf,eAAe7a,QAAQ/D,MACxDgE,SAAU3E,EAAsBuf,eAAe7a,QAAQN,KACvDsb,kBAAkB,EAClBC,iBAAkB3f,EAAsB0E,QAAQkb,gBAChDC,kBAAmB7f,EAAsB0E,QAAQob,kBAGrD,OAAOzqB,EAAMsT,SAEdnJ,KAAK,WACCf,EAAOgY,2BAA2BwI,gCACrCX,EAAuBO,KAG1Bnf,MAAMwe,IAhETA,IACA5N,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCgL,EAAiBM,IAAI,0BAgEzBqS,EAAuBO,IAKzBpgB,EAAOuX,SAASM,0BAChB7X,EAAOuX,SAASK,mBADhB,OAEAsH,oCAFA,IAEAA,uFAEAA,0DAAwDne,KAAK,SAAAugB,IACvDA,EACFxB,EAEAL,KAEFzf,EAAOmf,WAGTW,MAIJ9f,EAAOuhB,aAAe,WAChBvhB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOuhB,aAAc3Q,GAGtDvP,EAAgBmgB,kBAAkBxhB,EAAOuX,SAASG,QAAQ3W,KACxD,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,4BAKjB9F,EAAOyhB,cAAgB,WACjBzhB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOyhB,cAAe7Q,GAGnD5Q,EAAOuX,SAASI,QAAQoH,WAAa,GAGzC1d,EAAgBqgB,mBAAmB1hB,EAAOuX,UAAUxW,KAClD,SAAUmJ,GACHA,EAAOlO,SACVkI,EAAK4B,MAAL,6CAAiDoE,EAAO7J,gBAG5D,SAAUa,GACRgD,EAAK4B,MAAM,6BAKjB9F,EAAOib,gBAAkB,WACvB5Z,EAAgBsgB,yBAAyB5gB,KACvC,SAAUmJ,GACJ0X,EAAsB1X,EAAO2X,UAC7BD,IAAwB/uB,EAA0B+F,WAAWC,UAC/D+oB,EAAsB5hB,EAAO8hB,YAAYC,gBAAgBrpB,kBAE3DsH,EAAO6T,aAAaC,aAAe8N,EACnC5hB,EAAO6T,aAAaE,aAAe6N,GAErC,WACEzd,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsB0E,QAAQ/E,MAAMgB,MAC/CgE,SAAU3E,EAAsB0E,QAAQ/E,MAAMyE,UAMtD3F,EAAOkb,mBAAqB,WAC1B7Z,EAAgB2gB,8BAA8BjhB,KAC5C,SAAUmJ,GAAQ,IACR+X,EAAWjiB,EAAOuT,gBAAlB0O,OACFC,EAAiB,GACvBD,EAAOjQ,QAAQ,SAAUmQ,IACmB,IAAtCjY,EAAOtI,KAAKvO,QAAQ8uB,EAAM1oB,QAC5ByoB,EAAeE,KAAKD,KAGxBniB,EAAO6T,aAAaG,gBAAkBkO,GAExC,WACE/d,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsB0E,QAAQ/E,MAAMgB,MAC/CgE,SAAU3E,EAAsB0E,QAAQ/E,MAAMyE,UAMtD3F,EAAOid,yBAA2B,WAChC5b,EAAgBghB,gCAAgCthB,KAC9C,SAAUmJ,GACRlK,EAAO4W,sBAAsB0L,mBAAqBpY,EAAOoY,mBACzDtiB,EAAO4W,sBAAsB2L,mBAAqBrY,EAAOqY,mBACzDviB,EAAO4W,sBAAsB4L,qBAAuBtY,EAAOsY,qBAC3DxiB,EAAO4W,sBAAsB6L,gBAAkBvY,EAAOuY,iBAExD,SAAUvhB,GACRgD,EAAK4B,MAAM,4CAKjB9F,EAAO0iB,8BAAgC,WACjC1iB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO0iB,8BAA+B9R,GAGlE5Q,EAAO4W,sBAAsB6L,kBAAmBziB,EAAO4W,sBAAsB4L,sBAChFnhB,EAAgBqhB,+BAA+B1iB,EAAO4W,sBAAsB4L,sBAC3EzhB,KACC,SAAUmJ,GACRlK,EAAO4W,sBAAsB4L,qBAAuBtY,EAAOyY,YAC3D3iB,EAAOid,4BAET,SAAU/b,GACRgD,EAAK4B,MAAM,oDAMnB9F,EAAOkd,sBAAwB,WAC7B7b,EAAgBuhB,4BAA4B7hB,KAC1C,SAAUmJ,GACRlK,EAAO6W,mBAAmBgM,YAAc3Y,EAAO2Y,aAEjD,WACE3e,EAAK4B,MAAM,4CAKjB9F,EAAO8iB,wBAA0B,WAC3B9iB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO8iB,wBAAyBlS,GAGjEvP,EAAgByhB,yBAAyB9iB,EAAO6W,mBAAmBgM,aAChE9hB,KACC,SAAUmJ,GACRlK,EAAO6W,mBAAmBgM,YAAc3Y,GAE1C,WACEhG,EAAK4B,MAAM,6CAKnB9F,EAAOmd,mBAAqB,WAC1B9b,EAAgB0hB,0BAA0BhiB,KACxC,SAAUmJ,GACRlK,EAAO2W,gBAAgBqM,eAAiB9Y,EAAO+Y,eAC/CjjB,EAAO2W,gBAAgBuM,gBAAkBhZ,EAAOiZ,gBAChDnjB,EAAO2W,gBAAgByM,sBAAwBlZ,EAAOmZ,sBACtDrjB,EAAOsjB,mCAET,SAAUpiB,GACRgD,EAAK4B,MAAM,qCAKjB9F,EAAOod,oBAAsB,WAC3B/b,EAAgBkiB,yBAAyBxiB,KACvC,SAAUmJ,GACRlK,EAAO+W,iBAAiByM,eAAiBtZ,EAAOuZ,yBAElD,SAAUviB,GACRgD,EAAK4B,MAAM,qCAGfzE,EAAgBqiB,gCAAgC3iB,KAC9C,SAAUmJ,GACHA,GAMHlK,EAAO+W,iBAAiB4M,uBAAyBzZ,EAAO0Z,uBAEJ,MAAlD5jB,EAAO+W,iBAAiB4M,6BAC2BE,IAAnD7jB,EAAO+W,iBAAiB4M,uBAExB3jB,EAAO+W,iBAAiB+M,qBAAsB,EAE9C9jB,EAAO+W,iBAAiB+M,qBAAsB,EAGhD9jB,EAAO+W,iBAAiBgN,yBAA2B7Z,EAAO8Z,yBAEtDhkB,EAAO+W,iBAAiBgN,2BAA6BlxB,EAA0BgL,8BAA8BE,iBAC/GiC,EAAO+W,iBAAiBkN,4BAA6B,EAErDjkB,EAAO+W,iBAAiBkN,4BAA6B,IApBvDjkB,EAAO+W,iBAAiB4M,uBAAyB,KACjD3jB,EAAO+W,iBAAiB+M,qBAAsB,EAC9C9jB,EAAO+W,iBAAiBgN,yBAA2BlxB,EAA0BgL,8BAA8BG,qBAC3GgC,EAAO+W,iBAAiBkN,4BAA6B,GAoBvDjkB,EAAO+W,iBAAiBmN,oBACtBlkB,EAAO+W,iBAAiB4M,wBAE5B,SAAUziB,GACRgD,EAAK4B,MAAM,sCAKjB9F,EAAOsd,0BAA4B,WACjCtd,EAAO+W,iBAAiBC,WAAWmN,eAAiB5U,EAAKoP,uBAAuByF,cADnC,IAErCpN,EAAehX,EAAO+W,iBAAtBC,WACR3V,EAAgBgjB,iCAAiCtjB,KAC/C,SAAUmJ,GACR8M,EAAWC,sBAAwB/M,EAAO+M,uBAAyB,GACnED,EAAW/R,iBAAmBiF,EAAOjF,kBAAoB+R,EAAWmN,eACpEnN,EAAWhS,wBAA0BkF,EAAOlF,yBAA2B,GAHvD,IAKRwO,EAAiBxT,EAAOuT,gBAAxBC,aAEN8Q,EAEEjgB,EAFFigB,8BACAC,EACElgB,EADFkgB,4BAEEvN,EAAWC,uBACbjX,EAAOuT,gBAAgBiR,sBAAwBF,EAC7C9Q,EACAwD,EAAWC,uBAEbjX,EAAOuT,gBAAgBkR,oBAAsBF,EAC3C/Q,EACAwD,EAAWC,yBAGbjX,EAAOuT,gBAAgBiR,sBAAwBF,EAC7C9Q,GAEFxT,EAAOuT,gBAAgBkR,oBAAsBF,EAA4B/Q,IAE3ExT,EAAO0kB,qBAGP1kB,EAAO2kB,gCAET,SAAUzjB,GACRgD,EAAK4B,MAAL,+EAAmF5E,IACnF8V,EAAW/R,iBAAmB+R,EAAWmN,kBAK/CnkB,EAAO2kB,6BAA+B,WAAY,MAO5CtgB,EAA2BI,sBAL7BC,EAF8C,EAE9CA,UACAC,EAH8C,EAG9CA,OACAC,EAJ8C,EAI9CA,0BACAC,EAL8C,EAK9CA,mBACAC,EAN8C,EAM9CA,kBAEI8f,EAAW7f,sCAAoCL,GAEjDkgB,IACIpgB,EAASO,sCAAoCJ,GAEnDP,EAA2BygB,kCAAkCD,EAAUpgB,GAAQzD,KAC7E,SAAAmJ,GAEa,IADKA,EAAOtI,KAAKkjB,YAApBC,MAEE/N,EAAehX,EAAO+W,iBAAtBC,YACGE,kBAAmB,EAC9BF,EAAW/R,iBAAmBF,sCAAoCF,GAClEmS,EAAWhS,wBAA0BggB,KAAKC,MACxClgB,sCAAoCH,IAGhCM,EAAkB8f,KAAKC,MAAMlgB,sCAAoCD,IACvE9E,EAAOklB,wBAAwBhgB,IAE/B2M,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsByV,WAAWmO,iBAAiBjkB,MAAMkkB,mBAG5D/gB,EAA2BghB,uBAE7B,SAAAnkB,GACE2E,QAAQC,MACN,gFACAtT,QAAQ8yB,OAAOpkB,IAEjB2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,UAO9C3F,EAAOqd,oBAAsB,WAC3Bhc,EAAgBkkB,wCAAwCxkB,KACtD,SAAUmJ,GACRlK,EAAO+W,iBAAiBC,WAAWwO,yBACR,SAAzBtb,EAAOub,gBAEX,SAAUvkB,GACRgD,EAAK4B,MAAL,iGAC4FtT,QAAQ8yB,OAChGpkB,OAKRG,EAAgBqkB,kCAAkC3kB,KAChD,SAAUmJ,GACRlK,EAAO+W,iBAAiBC,WAAW2O,iCACjCzb,EAAOyb,kCAEX,SAAUzkB,GACRgD,EAAK4B,MAAL,2FACsFtT,QAAQ8yB,OAC1FpkB,QAOVlB,EAAO0kB,mBAAqB,WAC1B1kB,EAAOuT,gBAAgBG,YAAY1B,QAAQ,SAAC4T,EAASC,GAAV,OACzC7lB,EAAOuT,gBAAgBuS,WAAW1D,KAAK,CACrClpB,KAAM0sB,EACNnsB,MAAOosB,OAKb7lB,EAAO+lB,kBAAoB,SAAUC,GAC7BC,EAAQjmB,EAAO+W,iBAAiBC,WAAWhS,wBAAwB3R,QAAQ2yB,GACjFhmB,EAAO+W,iBAAiBC,WAAWhS,wBAAwBkhB,OAAOD,EAAO,IAG3EjmB,EAAOmmB,2BAA6B,SAAUH,EAAaI,GACzDJ,EAAYK,MAAQD,EADgD,IAI5DE,EAAiCjiB,EAAjCiiB,UACFC,GAAwBC,EADWniB,EAAtBmiB,mBAEjB,IAAI9U,KAAK4U,EAAUG,cAAgBL,GAAWM,UAAYJ,EAAUK,aAEhEC,EACJR,GAAaE,EAAUO,mBAAqBT,GAAaE,EAAUQ,wBAC/DR,EAAUS,wBACVR,EACNvmB,EAAOgnB,yBAAyBhB,EAAaY,IAG/C5mB,EAAOgnB,yBAA2B,SAAUhB,EAAaI,GACvDJ,EAAYiB,IAAMb,GAGpBpmB,EAAOknB,qBAAuB,SAAUlB,EAAa3sB,GACnD,IAAM4sB,EAAQD,EAAYmB,KAAK9zB,QAAQgG,IACzB,GAAV4sB,EACFD,EAAYmB,KAAKjB,OAAOD,EAAO,IAE/BD,EAAYmB,KAAK/E,KAAK/oB,GACtB2sB,EAAYmB,KAAKC,SAIrBpnB,EAAOqnB,UAAY,SAAUF,GAAM,MACL9iB,EAA2BijB,aAA/CC,EADyB,EACzBA,SAAUC,EADe,EACfA,MAClB,OAAQL,EAAKlgB,QACX,KAAK,EACH,MAAO,GACT,KAAK,EACH,OAAOsgB,EACT,QACE,IAAIF,EAAYG,EAOhB,OANAL,EAAKnV,QAAQ,SAAC3Y,EAAKouB,GACjBJ,GAAarnB,EAAOuT,gBAAgBG,YAAYlG,IAAInU,GAChDouB,GAAKN,EAAKlgB,OAAS,IACrBogB,GAAa,QAGVA,IAIbrnB,EAAO0nB,eAAiB,WAAY,IAC1B1iB,EAA4BhF,EAAO+W,iBAAiBC,WAApDhS,wBACHA,EAMHA,EAAwBod,KAAK,CAC3BiE,MAAOhiB,EAA2BsjB,mBAAmBtB,MACrDY,IAAK5iB,EAA2BsjB,mBAAmBV,IACnDE,KAAM,EAAI9iB,EAA2BsjB,mBAAmBR,QAR1DtV,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,OAW1C3F,EAAO4nB,gCAAkC,SAAU1iB,GAAiB,MACZlF,EAAO+W,iBAAiBC,WAAtEhS,EAD0D,EAC1DA,wBAAyBC,EADiC,EACjCA,iBACjCqJ,EAAUvI,KAAK,CACblS,YAAahB,EAA0BiB,UAAU8C,MAAMe,qBACvDxC,WAAYtC,EAA0B8D,YAAYC,MAAMe,qBACxDvF,QAAS,CACP8N,UAAW,CACT8E,0BACAC,mBACAC,uBAMRlF,EAAO6nB,kCAAoC,WACzC7nB,EAAOklB,yBAAwB,IAGjCllB,EAAOklB,wBAA0B,WAAmC,IAAzBhgB,EAAyB,wDAClE,GA+EF,WAAgC,IACtBF,EAA4BhF,EAAO+W,iBAAiBC,WAApDhS,wBACR,IAAKA,EAME,CACL,IAAK,IAAIyiB,EAAI,EAAGA,EAAIziB,EAAwBiC,OAAQwgB,IAAK,CACvD,IAAMzB,EAAchhB,EAAwByiB,GAG5C,GAA+B,GAA3BzB,EAAYmB,KAAKlgB,OAKnB,OAJA4K,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsByV,WAAWmO,iBAAiBjkB,MAAM4mB,sBAEnD,EAIT,GAAI9B,EAAYK,OAASL,EAAYiB,IAKnC,OAJApV,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsByV,WAAWmO,iBAAiBjkB,MAAM6mB,yBAEnD,EAlB8C,MAsBP1jB,EAA2BiiB,UAAnEG,EAtB+C,EAsB/CA,cAAeuB,EAtBgC,EAsBhCA,qBACjBC,EACJ,IAAIvW,KAAK+U,EAAgBT,EAAYiB,KAAO,IAAIvV,KAAK+U,EAAgBT,EAAYK,OACnF,GAA4B2B,EAAxBC,EAKF,OAJApW,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsByV,WAAWmO,iBAAiBjkB,MAAMgnB,wBAEnD,EAGX,OAAO,EAnCP,OAJArW,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,OAE/B,GAtFJwiB,GAAL,CADkE,IAsE5DC,EAtE4D,EAU9DpoB,EAAO+W,iBAAiBC,WAJ1BwO,EANgE,EAMhEA,yBACArB,EAPgE,EAOhEA,eACAjN,EARgE,EAQhEA,iBACkBmR,EAT8C,EAShEpjB,iBAOF,GAJIC,IACFlF,EAAO+W,iBAAiBC,WAAW/R,iBAAmBkf,GAGpDnkB,EAAOuY,wBAWT,OATAvY,EAAO+W,iBAAiBC,WAAW/R,iBAAmBojB,OAClDnjB,EACFlF,EAAOwY,wBACLxY,EAAO6nB,kCACPjX,GAGF5Q,EAAOwY,wBAAwBxY,EAAOklB,wBAAyBtU,IAKnE,GAAI4U,IAA6BtO,EAI/B,OAFAlX,EAAO+W,iBAAiBC,WAAW/R,iBAAmBojB,OACtDroB,EAAO4nB,gCAAgC1iB,GAqCnCkjB,EAAM,IAAIE,IAChBtoB,EAAO+W,iBAAiBC,WAAWhS,wBAAwBgN,QAAQ,SAAAuW,GACjEA,EAAEpB,KAAKC,OACPgB,EAAII,IAAIh2B,QAAQ8yB,OAAOiD,MAEzBvoB,EAAO+W,iBAAiBC,WAAWhS,wBAA0ByjB,MAAMC,KAAKN,GAAK52B,IAAI,SAAA+2B,GAAC,OAChFvD,KAAKC,MAAMsD,KA5EqD,EAsCZvoB,EAAO+W,iBAAiBC,WAAtEhS,EAtC0D,EAsC1DA,wBAAyBC,EAtCiC,EAsCjCA,iBACjC5D,EAAgBsnB,yBAAyB1jB,EAAkBD,GAAyBjE,KAClF,SAAUmJ,GACR2H,EACEtQ,EAAsB0E,QAAQjK,QAAQkG,MACtCX,EAAsB0E,QAAQjK,QAAQ2J,MAEpCT,GACF2M,EACEtQ,EAAsB0E,QAAQjK,QAAQkG,MACtCX,EAAsByV,WAAW9R,gBAAgBlJ,QAAQ2J,OAI/D,SAAUzE,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,MAElCT,IAEFlF,EAAO+W,iBAAiBC,WAAW/R,iBAAmBojB,EACtDxW,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsByV,WAAW9R,gBAAgBhE,MAAMyE,WAgEjE3F,EAAO4oB,qCAAuC,WAC5C,GAAI5oB,EAAOuY,wBACTvY,EAAOwY,wBACLxY,EAAO4oB,qCACPhY,OAHJ,CAQA,IAAMnX,EAAQuG,EAAO2W,gBAAgBkS,cAUrC,GATIpvB,IAAUwV,GACZjP,EAAO2W,gBAAgByM,sBAAwBhU,EAC/CpP,EAAO2W,gBAAgBqM,eAAiB5T,EACxCpP,EAAO2W,gBAAgBuM,gBAAkB/T,GAChC1V,IAAUyV,IACnBlP,EAAO2W,gBAAgByM,sBAAwB/T,EAC/CrP,EAAO2W,gBAAgBqM,eAAiB3T,EACxCrP,EAAO2W,gBAAgBuM,gBAAkB7T,GAEvC5V,IAAUuV,EAAY,CACxB,IAAM8Z,EAA8BznB,EAAgB0nB,0BAClD/oB,EAAO2W,iBAETmS,EAA4B/nB,KAC1B,SAAUmJ,KACV,SAAUhJ,GACRgD,EAAK4B,MAAM,qCAIf,IAAMkjB,EAAyB3nB,EAAgB4nB,2BAC7CjpB,EAAO2W,iBAETqS,EAAuBjoB,KACrB,SAAUmJ,KACV,SAAUhJ,GACRgD,EAAK4B,MAAM,sCAITojB,EAA+B7nB,EAAgB8nB,iCACnDnpB,EAAO2W,iBAETuS,EAA6BnoB,KAC3B,SAAUmJ,KACV,SAAUhJ,GACRgD,EAAK4B,MAAM,4CAITsjB,EAAW1a,EAAG2a,IAAI,CACtBP,EACAE,EACAE,IAYF,OAVAE,EAASroB,KACP,WACEf,EAAO+Y,eAET,WACE7U,EAAK4B,MAAM,0CACX,IAAMwjB,EAAmBpc,EAAiBM,IAAI,uBAC9CiB,EAAsB8a,QAAQD,EAAkB,IAAK,OAGlDF,KAIXppB,EAAOwpB,qBAAuB,WACxBxpB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOwpB,qBAAsB5Y,IAG9D5Q,EAAO2W,gBAAgBkS,cAAgB7Z,EACvC3N,EAAgB0nB,0BAA0B/oB,EAAO2W,iBAAiB5V,KAChE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,uCAKjB9F,EAAOypB,sBAAwB,WACzBzpB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOypB,sBAAuB7Y,IAG/D5Q,EAAO2W,gBAAgBkS,cAAgB7Z,EACvC3N,EAAgB4nB,2BAA2BjpB,EAAO2W,iBAAiB5V,KACjE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,wCAKjB9F,EAAO0pB,4BAA8B,WAC/B1pB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO0pB,4BAA6B9Y,IAGrE5Q,EAAO2W,gBAAgBkS,cAAgB7Z,EACvC3N,EAAgB8nB,iCAAiCnpB,EAAO2W,iBAAiB5V,KACvE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,8CAKjB9F,EAAO8c,gBAAkB,WACvBzb,EAAgBsoB,qCAAqC5oB,KACnD,SAAUmJ,GACRlK,EAAO8W,aAAa8S,2BAA6B1f,EAAO2f,4BAE1D,SAAU3oB,GACRgD,EAAK4B,MAAM,iDAGfzE,EAAgByoB,0BAA0B/oB,KACxC,SAAUmJ,GACRlK,EAAO8W,aAAaiT,gBAAkB7f,EAAO8f,iBAE/C,SAAU9oB,GACRgD,EAAK4B,MAAM,sCAKjB9F,EAAOiqB,iCAAmC,WACpCjqB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOiqB,iCAAkCrZ,GAG1EvP,EAAgB6oB,sCAAsClqB,EAAO8W,cAAc/V,KACzE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,mDAKjB9F,EAAOmqB,sBAAwB,WACzBnqB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOmqB,sBAAuBvZ,GAG/DvP,EAAgB+oB,2BAA2BpqB,EAAO8W,cAAc/V,KAC9D,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,uCAKjB9F,EAAO+c,iBAAmB,WACxB1b,EAAgBgpB,uBAAuBtpB,KACrC,SAAUmJ,GACRlK,EAAOoX,cAAckT,aAAepgB,EAAOogB,cAE7C,SAAUppB,GACRgD,EAAK4B,MAAM,iCAGfzE,EAAgBkpB,qBAAqBxpB,KACnC,SAAUmJ,GACRlK,EAAOoX,cAAcoT,WAAatgB,EAAOsgB,YAE3C,SAAUtpB,GACRgD,EAAK4B,MAAM,gCAKjB9F,EAAOyqB,mBAAqB,WACtBzqB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOyqB,mBAAoB7Z,GAG5DvP,EAAgBqpB,wBAAwB1qB,EAAOoX,eAAerW,KAC5D,SAAUmJ,GAC8B,aAAlCA,EAAOygB,wBACT3qB,EAAOqX,kBAAkBuT,iBAAmB1gB,EAAO0gB,iBAC7CC,EAAexpB,EAAgBypB,+CACrCrc,EAAsBzS,QAAQ6uB,EAAc,IAAK,MAEjD7qB,EAAO+Y,eAGX,SAAU7X,GACRgD,EAAK4B,MAAM,mCAKjB9F,EAAO+qB,iBAAmB,WACpB/qB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO+qB,iBAAkBna,GAG1DvP,EAAgB2pB,sBAAsBhrB,EAAOoX,eAAerW,KAC1D,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,iCAKjB9F,EAAOirB,qBAAuB,WACxBjrB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOirB,qBAAsBra,GAG9DvP,EAAgB6pB,0BAA0BlrB,EAAO+W,kBAAkBhW,KACjE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,qCAKjB9F,EAAOmrB,4BAA8B,WAC9BnrB,EAAOorB,6BAIRprB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOmrB,4BAA6Bva,IAGrE5Q,EAAO+W,iBAAiBmN,oBAAsBlkB,EAAO+W,iBAAiB4M,uBAEtEtiB,EAAgBgqB,iCAAiCrrB,EAAO+W,kBAAkBhW,KACxE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,6CAKjB9F,EAAOsrB,4BAA8B,WAC9BtrB,EAAOorB,6BAIRprB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOsrB,4BAA6B1a,GAGrEvP,EAAgBkqB,iCAAiCvrB,EAAO+W,kBAAkBhW,KACxE,SAAUmJ,GACRlK,EAAO+Y,eAET,SAAU7X,GACRgD,EAAK4B,MAAM,4CAKjB9F,EAAOwrB,+BAAiC,WACtC,OACExrB,EAAOyH,eAAejG,SAASI,MAC/B5B,EAAOyH,eAAejG,SAASI,KAAK6pB,gCAIxCzrB,EAAO0rB,wBAA0B,WAC/B,OAAO1rB,EAAO+W,iBAAiB4M,uBAAyB,GAG1D3jB,EAAO2rB,uBAAyB,WAC9B,OACE3rB,EAAO+W,iBAAiB4M,uBACxB3jB,EAAOiU,wBAAwBG,+BAInCpU,EAAO4rB,oBAAsB,WAC3B,OAAQ5rB,EAAO2rB,2BAA6B3rB,EAAO0rB,2BAGrD1rB,EAAO6rB,2BAA6B,SAAUjqB,GAC5C5B,EAAOiU,wBAA0B,CAC/BC,6BAA8BtS,EAAKkqB,kCACnC3X,6BAA8BvS,EAAKmqB,0CACnC3X,8BAA+BxS,EAAKoqB,+CAAiD,IACrF3X,UAAU,IAIdrU,EAAOmb,2BAA6B,WAClC9Z,EAAgB4qB,kCAAkClrB,KAChD,SAAUmJ,GACRlK,EAAO6rB,2BAA2B3hB,IAEpC,SAAUhJ,GACRgD,EAAK4B,MAAM,4CAKjB9F,EAAOud,kBAAoB,WACzBlc,EAAgB6qB,4BAA4BnrB,KAC1C,SAAUmJ,GACRlK,EAAOmX,eAAegV,gCACpBjiB,EAAOkiB,mCACTpsB,EAAOmX,eAAekV,YAAcniB,EAAO9N,SAC3C4D,EAAOmX,eAAemV,WAAapiB,EAAOqiB,QAC1CvsB,EAAOmX,eAAeqV,WAAatiB,EAAOuiB,QAC1CzsB,EAAOmX,eAAeuV,UAAYxiB,EAAOyiB,QAE3C,SAAUzrB,GACRgD,EAAK4B,MAAM,oCAKjB9F,EAAOgd,qBAAuB,WAC5B3b,EAAgBurB,2BAA2B7rB,KACzC,SAAUmJ,GACRlK,EAAOqX,kBAAkBuT,iBAAmB1gB,EAAO0gB,kBAErD,SAAU1pB,GACRgD,EAAK4B,MAAM,sCAKjB9F,EAAO6sB,uBAAyB,WAC1B7sB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO6sB,uBAAwBjc,GAGhEvP,EAAgByrB,4BAA4B9sB,EAAOqX,mBAAmBtW,KACpE,SAAUmJ,GAC8B,aAAlCA,EAAOygB,wBACT3qB,EAAOoX,cAAckT,aAAepgB,EAAOogB,aACrCO,EAAexpB,EAAgB0rB,2CACrCte,EAAsBzS,QAAQ6uB,EAAc,IAAK,MAEjD7qB,EAAO+Y,eAGX,SAAU7X,GACRgD,EAAK4B,MAAM,uCAKjB9F,EAAOgtB,qBAAuB,WACxBhtB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOgtB,qBAAsBpc,GAI9DvP,EAAgB4rB,6BAA6BjtB,EAAOmX,gBAAgBpW,KAClE,WACE8Q,EACEtQ,EAAsB0E,QAAQjK,QAAQkG,MACtCX,EAAsB0E,QAAQjK,QAAQ2J,OAG1C,SAAUzE,GACR,IAAI2M,EAAW3M,GAASuO,EACpBvO,GAASA,EAAM8F,QAAU9F,EAAM8F,OAAO,IAAM9F,EAAM8F,OAAO,GAAGwC,UACxD0jB,EAAYhsB,EAAM8F,OAAO,GAAG/U,KAGlC4b,GADMsf,EAAkBt6B,EAA0B6J,gBAAgBwwB,IAE9DhgB,EAAiBM,IAAI2f,GACrBjgB,EAAiBM,IAAI,wBAE3BqE,EAAiBtQ,EAAsB0E,QAAQ/E,MAAMgB,MAAO2L,MAKlE7N,EAAOotB,YAAc,SAAUC,GACvBC,EAAYC,SAASF,EAAW/5B,QAAQ,qBAAsB,KAC9DmG,EAAQ,IAAIiY,KAAK4b,GACjBE,EAAW,IAAI9b,KAAKjY,EAAMg0B,iBAAkBh0B,EAAMi0B,cAAej0B,EAAMk0B,cAC7E,OAAO3f,EAAQ,WAARA,CAAoBwf,IAG7BxtB,EAAO4tB,YAAc,IAAIlc,KAEzB1R,EAAO0gB,aAAe,SAAUmN,GAGxBC,EAAWpc,KAAKqc,MAAQF,EAASnH,UACjCsH,EAAU,IAAItc,KAAKoc,GACzB,OAAOG,KAAKC,IAAIF,EAAQP,iBAAmB,OAG7CztB,EAAOmuB,6BAA+B,WACpC,OAAO5e,GAAQA,EAAK6e,mBAGtBpuB,EAAOue,4BAA8B,WACnC,OACEve,EAAOyH,eAAejG,SAASI,MAC/B5B,EAAOyH,eAAejG,SAASI,KAAKysB,6BAIxCruB,EAAOqe,cAAgB,WAErB,IADA,IAAMiQ,EAAOf,SAASvf,EAAQ,OAARA,CAAgB,IAAI0D,KAAQ,SACzC+V,EAAI,EAAGA,EAAI,IAAKA,IACvBznB,EAAOuT,gBAAgBgb,MAAM9G,GAAK,CAChCvuB,KAAM8G,EAAOmuB,+BACT5e,EAAKif,uBAAuBF,EAAO7G,EAAGva,EAAiBM,IAAI,eAC3D8gB,EAAO7G,EACXhuB,MAAO60B,EAAO7G,GAGdznB,EAAOue,+BACTve,EAAOyuB,uBAAuB,OAAQzuB,EAAOuT,gBAAgBgb,QAIjEvuB,EAAOme,aAAe,WACpB,IAAMnlB,EAAOgH,EAAOuX,SAASE,UAAUwG,UACjC7kB,EAAQ4G,EAAOuX,SAASE,UAAUuG,WAAa,EAC/CsQ,EAAO,IAAI5c,KAAK1Y,EAAc,EAARI,EAAW,GACnC4G,EAAOuX,SAASE,UAAUsG,SAAWuQ,EAAK3O,YAC5C3f,EAAOuX,SAASE,UAAUsG,SAAWuQ,EAAK3O,WAE5C3f,EAAOuT,gBAAgB4T,KAAO,GAC9B,IAAK,IAAIM,EAAI,EAAGA,EAAI6G,EAAK3O,UAAW8H,IAClCznB,EAAOuT,gBAAgB4T,KAAKM,GAAK,CAC/BvuB,KAAM8G,EAAOmuB,+BACT5e,EAAKif,uBAAuB/G,EAAI,EAAGva,EAAiBM,IAAI,cACxDia,EAAI,EACRhuB,MAAOguB,EAAI,GAIXznB,EAAOue,+BACTve,EAAOyuB,uBAAuB,MAAOzuB,EAAOuT,gBAAgB4T,OAIhEnnB,EAAOoe,eAAiB,WACtB,IAEQsQ,EAFJ1uB,EAAOue,gCAEHmQ,GADAnf,EAAOC,QAAQ,IAAIA,QAErBD,EAAKof,cAAc,QAASzhB,EAAiBM,IAAI,gBACjDN,EAAiBqC,KAAKqf,gBAE1B5uB,EAAOyuB,uBAAuB,QAASC,KAI3C1uB,EAAOyuB,uBAAyB,SAAUI,EAAUp1B,GAElD,IAAMq1B,EAAY9uB,EAAOuT,gBAAgBiL,qBAAqBE,UAAUmQ,GAExE7uB,EAAOuT,gBAAgBiL,qBAAqBC,MAAMqQ,GAAa,CAC7Dt1B,QAASC,EACTs1B,OAAQl8B,EAA0BkG,eAAe81B,GAAUl9B,GAC3Dq9B,UAAWn8B,EAA0BkG,eAAe81B,GAAU51B,MAC9Dg2B,aAAcp8B,EAA0BkG,eAAe81B,GAAU31B,OAIrE8G,EAAOkvB,oBAAsB,WAC3B7tB,EAAgB8tB,sBAAsBpuB,KACpC,SAAUmJ,GACR2H,EACEtQ,EAAsB0E,QAAQjK,QAAQkG,MACtCX,EAAsB6tB,cAAcpzB,QAAQ2J,OAGhD,SAAUzE,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB6tB,cAAcluB,MAAMyE,SAMlD3F,EAAOqvB,iBAAmB,WACxBhuB,EACGkL,4BAA4B1Z,EAA0BqJ,WAAWC,UAAUC,UAC3E2E,KACC,SAAUmJ,GACRlK,EAAOsvB,eAET,SAAUpuB,GACR2E,QAAQ0pB,KAAKruB,GACb2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpClC,EAAOiV,oBAAoB/T,OAMrClB,EAAOwvB,qBAAuB,WACxBxvB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOwvB,qBAAsB5e,GAM1D5Q,EAAOyH,eAAejG,SAASI,KAAKif,iCACxBvS,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMM,YACvD/B,WAAYtC,EAA0B8D,YAAYC,MAAMM,YACxD9E,QAAS,CACP8N,UAAW,CACTuvB,oBAAoB,EACpBjpB,gBAAiBxG,EAAOyH,eAAejG,SAASI,KAAKif,iCACrD7e,kBAAmBhC,EAAOyH,eAAejG,SAASI,KAAK8F,wBAIvDwC,OAAOxG,QAAQ,WACnBrC,EAAgBya,sBAAsB/a,KACpC,SAAUmJ,GACRlK,EAAOiZ,eAAe/O,GACjBlK,EAAOyH,eAAejG,SAASI,KAAKif,kCACvC7gB,EAAOqvB,oBAGX,SAAUnuB,GACRlB,EAAOyH,eAAejG,SAAW,CAC/BI,KAAMV,EACNmT,UAAU,OAMlBrU,EAAOqvB,oBAIXrvB,EAAO0vB,uBAAyB,SAAUvjB,GACpCA,EAASqJ,gBAAkB3iB,EAA0BqJ,WAAWC,UAAUC,SAE5E4D,EAAOwvB,uBAGOlhB,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMa,iBACvDtC,WAAYtC,EAA0B8D,YAAYC,MAAMa,iBACxDrF,QAAS,CACP8N,UAAW,CACTiM,eAIAjC,OAAOnJ,KAAK,WAChBgN,EAAQ5a,SAASotB,UAChB/tB,QAAQm9B,OAIf3vB,EAAO4vB,mBAAqB,WACtB5vB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO4vB,mBAAoBhf,GAI5DvP,EAAgBwuB,sBAAsB9uB,KAAK,SAAUmJ,GAC/CA,EAAOlO,QACTgE,EAAOsvB,cAEPzd,EACEtQ,EAAsB0E,QAAQjK,QAAQkG,MACtCX,EAAsBuuB,eAAe5uB,MAAMyE,SAMnD3F,EAAO+vB,aAAe,SAAUrY,GAC9B1X,EAAOuX,SAASG,OACd1X,EAAOuX,SAASG,SAAWA,EAAS1X,EAAOuT,gBAAgBmE,OAAOsY,QAAUtY,EAC9E1X,EAAOuhB,gBAGTvhB,EAAOiwB,gBAAkB,WACvB,IAAMld,EAAmB/S,EAAO+S,iBAAiBxD,EAAK2gB,mBAClDnd,EACFhF,EAAQhI,KAAKgN,EAAkB,UAIjChF,EAAQhI,KAAK/F,EAAO8S,eAAgB,WAGtC9S,EAAOmwB,SAAW,SAAUx8B,GAC1Boa,EAAQ5a,SAASC,KAAOO,GAG1BqM,EAAOsvB,YAAc,WACnBtvB,EAAO+b,yBACP/b,EAAO6b,kBAGT7b,EAAOub,YAAc,WACfvb,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOub,YAAa3K,GAIvCtC,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMM,YACvD/B,WAAYtC,EAA0B8D,YAAYC,MAAMM,YACxD9E,QAAS,CACP8N,UAAW,CACTuvB,oBAAoB,EACpBjpB,gBAAiBxG,EAAOyH,eAAejG,SAASI,KAAKif,iCACrD7e,kBAAmBhC,EAAOyH,eAAejG,SAASI,KAAK8F,wBAKvDwC,OAAOxG,QAAQ,WAEnB1D,EAAOsvB,iBAIXtvB,EAAOowB,eAAiB,WAEtB,IAqCQC,EApCLrwB,EAAOyH,eAAejG,SAASI,KAAKwX,gBACqB,IAA1DpZ,EAAOyH,eAAejG,SAASI,KAAK0uB,kBAMnCtwB,EAAOyH,eAAejG,SAASI,KAAKyX,kBACqB,IAA1DrZ,EAAOyH,eAAejG,SAASI,KAAK0uB,kBAMpCtwB,EAAOyH,eAAejG,SAASI,KAAK2uB,4BACsB,IAA1DvwB,EAAOyH,eAAejG,SAASI,KAAK0uB,kBAGpCze,EACE,yBAFc7R,EAAOyH,eAAejG,SAASI,KAAK4uB,+BAGvC,kEAIsD,OAA1DxwB,EAAOyH,eAAejG,SAASI,KAAK0uB,kBAC7Cze,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCX,EAAsB0E,QAAQ/E,MAAMyE,MAKgC,EAAtE3F,EAAOyH,eAAejG,SAASI,KAAK6uB,kCACsB,IAA1DzwB,EAAOyH,eAAejG,SAASI,KAAK0uB,mBAG9BD,EAAa,gBAAH,OADG,mBACH,0BAA+CrwB,EAAOyH,eAAejG,SAASI,KAAK6uB,gCAAnF,WACJtsB,EAAa4B,KAAK,CAC5BC,UAAWzE,EAAsB6uB,eAAeM,oBAChDC,eAAgBpvB,EAAsB6uB,eAAeQ,sBAAsB,CACzEP,eAEFnP,iBAAkB3f,EAAsB6uB,eAAeS,kBACvD5P,kBAAkB,EAClB6P,kBAAmB,iBACnBC,mBAAmB,EACnBC,SAAU,6BAEN9mB,OAAOnJ,KAAK,WAChBf,EAAOmwB,SAASnwB,EAAO8hB,YAAYC,gBAAgBkP,gBAKjDjxB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOowB,eAAgBxf,GAI5CtC,EAAUvI,KAAK,CACzBlS,YAAahB,EAA0BiB,UAAU8C,MAAMY,eACvDrC,WAAYtC,EAA0B8D,YAAYC,MAAMY,eACxDpF,QAAS,CACP8N,UAAW,CACTgxB,UAAWlxB,EAAOyH,eAAejG,SAASI,KAAK2X,UAC/C4X,iBAAkBnxB,EAAOsU,kBAAkBG,UAC3CzS,kBAAmBhC,EAAOyH,eAAejG,SAASI,KAAK8F,oBACvD2F,4BAA6BrN,EAAOyH,eAAejG,SAASI,KAAK0uB,sBAKjEpmB,OAAOxG,QAAQ,WACnB1D,EAAOsvB,gBA/DTtvB,EAAOoxB,oBAAmB,EAAM7vB,EAAsB6uB,eAAeiB,iBAPrErxB,EAAOsxB,gBAAgB/vB,EAAsB6uB,eAAemB,eA4EhEvxB,EAAOsZ,eAAiB,WAAM,MAC5B,OAAItZ,EAAOyH,eAAe0R,iBACjBtmB,EAA0BoC,YAAYwH,SAG3C,UAACuD,EAAOyH,eAAejG,SAASI,YAAhC,OAAC,EAAqCwX,cAInCvmB,EAA0BoC,YAAYuH,WAHpC3J,EAA0BoC,YAAYsH,MAMjDyD,EAAOoxB,mBAAqB,SAAUptB,EAAuBwtB,GAC3D1f,EAAqBjf,EAA0BoD,OAAOiH,gBAEtDoR,EAAUvI,KAAK,CACblS,YAAahB,EAA0BiB,UAAU8C,MAAMG,YACvD5B,WAAYtC,EAA0B8D,YAAYC,MAAMG,YACxD3E,QAAS,CACP8N,UAAW,CACTsxB,yBACAxtB,6BAMRhE,EAAOsxB,gBAAkB,SAAUpY,GAC7BlZ,EAAOyH,eAAejG,SAASI,KAAKwX,cACtCtH,EAAqBjf,EAA0BoD,OAAOmH,gBAEtD0U,EAAqBjf,EAA0BoD,OAAOgH,aAGpD+C,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOsxB,gBAAiB1gB,GAI3CtC,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAME,SACvD3B,WAAYtC,EAA0B8D,YAAYC,MAAME,SACxD1E,QAAS,CACP8N,UAAW,CACT6B,gBAAiB/B,EAAOyH,eAAejG,SAASI,KAAKyX,gBACrDlX,eAAgBnC,EAAOyH,eAAejG,SAASI,KAAKwX,eAAiBF,EACrEA,SACA5W,YAAatC,EAAOyH,eAAejG,SAASI,KAAKwX,cACjD7W,OAAQvC,EAAOyH,eAAejG,SAASI,KAAK6b,YAC5Czb,kBAAmBhC,EAAOyH,eAAejG,SAASI,KAAK8F,wBAKvDwC,OAAOxG,QAAQ,WACnB1D,EAAOsvB,iBAWXtvB,EAAO4b,aAAe,SAAUpS,EAAS0P,GACnClZ,EAAOyH,eAAeoO,uBACV1R,EAAa4B,KAAK,CAC9BC,UAAW/D,eAAelL,YAAY06B,2BACtCvrB,SAAUsD,EACVyX,kBAAkB,EAClBC,iBAAkBjf,eAAelL,YAAY26B,0BAC7CX,mBAAmB,IAGf7mB,OAAOnJ,KACX,WACEf,EAAOoxB,oBAAmB,IAE5B,cAKFpxB,EAAOsxB,gBAAgBpY,IAM3BlZ,EAAO2xB,SAAW,WAChB7f,EAAqBjf,EAA0BoD,OAAOkH,aACtD6C,EAAO6J,eAAiB,CACtBqP,OAAQ3X,EAAsBpK,SAASy6B,eACvCC,wBAAwB,GAG1B7xB,EAAOqY,oBAGTrY,EAAO8xB,YAAc,WACnBhgB,EAAqBjf,EAA0BoD,OAAOoH,gBAEtD2C,EAAO6J,eAAiB,CACtBqP,OAAQ3X,EAAsBpK,SAAS46B,gBACvCF,wBAAwB,EACxBjpB,YAAa5I,EAAOwK,oBAAoB5B,YACxCX,OAAQjI,EAAOwK,oBAAoBvC,OACnC2C,aAAc5K,EAAOwK,oBAAoB/B,OAG3CzI,EAAOqY,oBAKTrY,EAAOgyB,mBAAqB,WAC1BhyB,EAAOsT,kBAAoBtT,EAAOsT,kBAGpCtT,EAAOiyB,QAAU,SAAU9kB,GACzB9L,EAAgB6wB,wBAAwB/kB,EAAKglB,KAAKpxB,KAChD,WAGMf,EAAOyH,eAAejG,SAASI,QACjC5B,EAAOyH,eAAejG,SAASI,KAAKwwB,kBAAkBC,MAExDllB,EAAKmlB,QAAS,GAEhB,SAAUpxB,GAAO,MACfgD,EAAKhD,MAAM,0BAA2BA,GAEhCqxB,EAD0C,GAAxBrxB,SAAA,UAAAA,EAAO8F,cAAP,eAAeC,SAAc/F,EAAM8F,OAAO,GAAGwrB,mBAC9BtlB,EAAiBM,IAAI,uCAC5DiB,EAAsB8a,QAAQgJ,EAAW,IAAK,QAMpDvyB,EAAOwa,wBAA0B,WAE7Bxa,EAAOgR,+BAA+B/J,OAAS,GAC/CzU,QAAQigC,OAAOzyB,EAAO8Q,8BAA+B,KAIvDzP,EAAgBqxB,+BAA+B3xB,KAC7C,SAAUmJ,GACRlK,EAAOsW,qBAAuBpM,EAC9BlK,EAAOsW,qBAAqBI,8BAAgC,IAE9D,SAAUxV,GACRgD,EAAK4B,MAAM5E,MAIjBlB,EAAO2yB,6BAA+B,SAAUzgB,GAC9C,OAAOlS,EAAOsW,qBAAqBC,yBAAyBsD,OAAO,SAAU5H,GAC3E,OAAOA,EAAK2gB,0BAA4B1gB,KAI5ClS,EAAO6yB,8BAAgC,SACrCC,EACAC,GAEA,MAAoC,eAAhCA,GAGkD,GADlD/yB,EAAOyH,eAAejG,SAASI,KAAKoxB,gDACrB3/B,QAAQy/B,IAK7B9yB,EAAO0Z,4BAA8B,SAAUuZ,GAC7C5xB,EAAgBqY,4BAA4BuZ,IAG9CjzB,EAAOwZ,sBAAwB,SAAU0Z,GACvC7xB,EAAgBmY,sBAAsB0Z,IAGxClzB,EAAO2a,iBAAmB,SAAUuY,GAClC7xB,EAAgBsZ,iBAAiBuY,IAGnClzB,EAAOya,yBAA2B,SAAU0Y,GAC1C9xB,EAAgBoZ,yBAAyB0Y,IAG3CnzB,EAAO6P,YAAc,SAAUmB,GAC7B,OAAIA,EAA+B0B,mBAC1B1B,EAA+B0B,qBAI1C1S,EAAOuQ,aAAe,SAAUS,GAC9B,YAA2D,IAAhDA,EAA+BT,cACjCS,EAA+BT,gBAI1CvQ,EAAOozB,0BAA4B,SAAUpiB,GAC3C,GAAIA,EAA+B6B,mBAIjC,OAHc7B,EAA+B6B,mBAAmB,SAAUwgB,GACxErzB,EAAOmf,WAHgE,IAQnEjN,EAAoBlB,EAApBkB,gBACR,OAGc,EAFZlS,EAAOsW,qBAAqBG,iCAAiCoD,OAAO,SAAU5H,GAC5E,OAAOA,IAASC,IACfjL,QAGPjH,EAAOszB,4BAA8B,SAAUtiB,GAAgC,IACrEkB,EAAoBlB,EAApBkB,gBAER,GAAIlS,EAAOozB,0BAA0BpiB,GACnC,GAAIA,EAA+B2B,iBACjC3B,EAA+B2B,iBAAiB,SAAU0gB,GACxDrzB,EAAOmf,eAFX,CAOAnf,EAAOsW,qBAAqBI,8BAC1BxE,GACElB,EACJ,IACE,IAAIyW,EAAI,EACRA,EAAIznB,EAAOsW,qBAAqBG,iCAAiCxP,OACjEwgB,IAEA,GAAIznB,EAAOsW,qBAAqBG,iCAAiCgR,KAAOvV,EAEtE,YADAlS,EAAOsW,qBAAqBG,iCAAiCyP,OAAOuB,EAAG,QAKvEzW,EAA+B4B,kBACjC5B,EAA+B4B,kBAAkB,SAAUygB,GACzDrzB,EAAOmf,YAKXnf,EAAOsW,qBAAqBI,8BAC1BxE,GACElB,EACJhR,EAAOsW,qBAAqBG,iCAAiC2L,KAAKlQ,KAGtElS,EAAOuzB,uBAAyB,SAAUC,GACpCA,EAAiBC,gBACnBD,EAAiBE,iBAAkB,EACnCF,EAAiB1jB,WAAa0jB,EAAiB1jB,YAInD9P,EAAO2zB,2BAA6B,WAClC,GAAI3zB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO2zB,2BAA4B/iB,OADpE,CAKA,IAOWgjB,EAPLC,EAAkC7zB,EAAOsW,qBAAqBC,yBAAyBsD,OAC3F,SAAUpgB,GACR,OAAOA,EAAMi6B,kBAGXI,EAA+B,GAC/BC,EAAgC,GACtC,IAAWH,KAAO5zB,EAAOsW,qBAAqBI,+BAE1C1W,EAAOozB,0BACLpzB,EAAOsW,qBAAqBI,8BAA8Bkd,IAG5DG,EAEAD,GAF8B1R,KAAKwR,GAMvCvyB,EACG2yB,gCACCH,EACAE,EACAD,GAED/yB,KACC,WACEf,EAAOsvB,cACPzd,EACEtD,EAA6B0lB,UAAUj4B,QAAQkG,MAC/CqM,EAA6B0lB,UAAUj4B,QAAQ2J,OAGnD,WAEEkM,EACEtD,EAA6B0lB,UAAU/yB,MAAMgB,MAC7CqM,EAA6B0lB,UAAU/yB,MAAMyE,UAMvD3F,EAAOk0B,qBAAuB,SAAUhqB,GACtClK,EAAOsU,kBAAkBxE,UAAY5F,EAAO4F,UAC5C9P,EAAOsU,kBAAkBE,cAAgBtK,EAAOsK,cAChDxU,EAAOsU,kBAAkBC,YAAa,EAClCrK,EAAO4F,WAAa5F,EAAOsK,gBAC7BxU,EAAOsU,kBAAkBC,YAAa,EACtCvU,EAAOm0B,WAAWjqB,EAAOsK,iBAI7BxU,EAAOuY,sBAAwB,WAC7B,OACEvY,EAAOsU,kBAAkBxE,YACxB9P,EAAOsU,kBAAkBC,YAC1BvU,EAAOyH,eAAejG,SAASI,KAAKgZ,qBAKxC5a,EAAO6a,qBAAuB,WAC5BxZ,EAAgB+yB,4BAA4BrzB,KAC1C,SAAUmJ,GACJA,GACFlK,EAAOk0B,qBAAqBhqB,IAGhC,SAAUhJ,GACRgD,EAAK4B,MAAM5E,MAMjBlB,EAAOq0B,sBAAwB,WAC7BhzB,EAAgBizB,6BAA6BvzB,KAC3C,SAAUmJ,GACJA,IACFlK,EAAOsU,kBAAkBC,YAAa,EACtCvU,EAAOsU,kBAAkBE,cAAgB,KACzCxU,EAAOu0B,eAGX,SAAUrzB,GACRgD,EAAK4B,MAAM5E,MAMjBlB,EAAOwY,wBAA0B,SAAUzI,EAAUykB,EAAOC,GAC1DnmB,EACGvI,KAAK,CACJlS,YAAahB,EAA0BiB,UAAU8C,MAAMU,UACvDnC,WAAYtC,EAA0B8D,YAAYC,MAAMU,UACxDlF,QAAS,CACP8N,UAAW,CACTixB,iBAAkBnxB,EAAOsU,kBAAkBG,cAIhDvK,OAAOnJ,KACN,SAAUmJ,GACoB,MAAxBA,EAAOsK,gBACTxU,EAAOsU,kBAAkBxE,WAAY,EACrC9P,EAAOsU,kBAAkBC,YAAa,EACtCvU,EAAOsU,kBAAkBE,cAAgBtK,EAAOsK,cAChDxU,EAAOm0B,WAAWlG,KAAKyG,MAAMxqB,EAAOsK,gBAEhCzE,GACFA,EAAS4kB,UAIf,SAAUzzB,GACJuzB,GACFA,EAAcE,WAOxB30B,EAAOm0B,WAAa,SAAUS,GAC5B50B,EAAOu0B,aACPv0B,EAAOsU,kBAAkBugB,cAAgBD,EACzC50B,EAAOsU,kBAAkBwgB,iBAAmB,KAC5C90B,EAAOsU,kBAAkBygB,iBAAmB,KAC5CpkB,EAAWzC,EAAU,WACnBlO,EAAOsU,kBAAkBugB,cAAgB70B,EAAOsU,kBAAkBugB,cAAgB,EAClF70B,EAAOsU,kBAAkBwgB,iBAAmB7G,KAAKyG,MAC/C10B,EAAOsU,kBAAkBugB,cAAgB,IAE3C70B,EAAOsU,kBAAkBygB,iBAAmB9G,KAAKyG,MAC/C10B,EAAOsU,kBAAkBugB,cAA4D,GAA5C70B,EAAOsU,kBAAkBwgB,kBAGhE90B,EAAOsU,kBAAkBugB,eAAiB,IAC5C70B,EAAOsU,kBAAkBC,YAAa,EACtCvU,EAAOsU,kBAAkBE,cAAgB,KACzCxU,EAAOu0B,eAER,MAGLv0B,EAAOu0B,WAAa,WAClBrmB,EAAU8mB,OAAOrkB,IAGnB3Q,EAAOi1B,4BAA8B,WAC/Bj1B,EAAOsU,kBAAkBC,WAC3BvU,EAAOq0B,wBAEPr0B,EAAOwY,2BAIXxY,EAAOk1B,0BAA4B,WACjC5mB,EACGvI,KAAK,CACJlS,YAAahB,EAA0BiB,UAAU8C,MAAMS,UACvDlC,WAAYtC,EAA0B8D,YAAYC,MAAMS,UACxDjF,QAAS,CACP8N,UAAW,CACTgxB,UAAWlxB,EAAOyH,eAAejG,SAASI,KAAK2X,UAC/C4X,iBAAkBnxB,EAAOsU,kBAAkBG,cAIhDvK,OAAOnJ,KACN,WACEf,EAAO6a,wBAET,cAEDnX,QAAQ,WACP1D,EAAO6a,0BAIb7a,EAAOorB,yBAA2B,WAEhC,OAAKprB,EAAOyH,eAAejG,SAASI,KAAKwX,cAI7BpZ,EAAOyH,eAAe0R,mBAItBnZ,EAAOsU,kBAAkBxE,YACnC9P,EAAOk1B,6BACA,IALPl1B,EAAOoxB,oBAAmB,EAAM7vB,EAAsBlK,UAAUg6B,kBACzD,IALPrxB,EAAOsxB,gBAAgB/vB,EAAsBlK,UAAUk6B,eAChD,IAaXvxB,EAAOm1B,oCAAsC,WAC3C,OAAuD,OAAnDn1B,EAAO+W,iBAAiB4M,wBAAmC3jB,EAAO+W,iBAAiBgN,2BAA6BlxB,EAA0BgL,8BAA8BG,sBAC1KgC,EAAO+W,iBAAiB4M,uBAAyB,KACjD3jB,EAAO+W,iBAAiBmN,oBAAsB,KAC9ClkB,EAAO+W,iBAAiBgN,yBAA2BlxB,EAA0BgL,8BAA8BG,qBAC3GgC,EAAO+W,iBAAiB+M,qBAAsB,EAC9C9jB,EAAO+W,iBAAiBkN,4BAA6B,EAC9C5iB,EAAgBgqB,iCAAiCrrB,EAAO+W,mBAG1Dqe,QAAQhjC,WAGjB4N,EAAOq1B,+BAAiC,WAEjCr1B,EAAOyH,eAAejG,SAASI,KAAKwX,cAI7BpZ,EAAOyH,eAAe0R,iBAK5BnZ,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOq1B,+BAAgCzkB,GAKpE5Q,EAAOsU,kBAAkBxE,UAC3B9P,EAAOm1B,sCAAsCp0B,KAC3C,SAAUmJ,GACR7I,EAAgBi0B,+BAA+Bv0B,KAC7C,SAAUmJ,GACJA,IACFlK,EAAOsU,kBAAkBxE,WAAY,EACrC9P,EAAOsU,kBAAkBC,YAAa,EACtCvU,EAAOsU,kBAAkBE,cAAgB,OAG7C,SAAUtT,GACR2Q,EAAiB,QAAS7R,EAAOiV,oBAAoB/T,IACrDgD,EAAK4B,MAAM5E,MAIjB,SAAUA,GACR2Q,EAAiB,QAAS7R,EAAOiV,oBAAoB/T,IACrDgD,EAAK4B,MAAM5E,KAMflB,EAAOk1B,4BAnCTl1B,EAAOoxB,oBAAmB,EAAM7vB,EAAsBlK,UAAUg6B,iBAJhErxB,EAAOsxB,gBAAgB/vB,EAAsBlK,UAAUk6B,eA4C3DvxB,EAAOgb,uBAAyB,WAC9Bhb,EAAO0U,cAAcC,oBAAoBC,iBACvC5U,EAAOyH,eAAejG,SAASI,KAAK2zB,oCACtCl0B,EAAgBm0B,8BAA8Bz0B,KAC5C,SAAUmJ,GACRlK,EAAO2U,oBAAsBzK,GAE/B,SAAUhJ,GACRgD,EAAK4B,MAAM,kDAKjB9F,EAAOy1B,iCAAmC,WACpCz1B,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAOy1B,iCAAkC7kB,GAItE5Q,EAAO0U,cAAcC,oBAAoBC,mBACtC5U,EAAO2U,oBAAoB+gB,UA6B9Br0B,EAAgBs0B,gCAAgC31B,EAAO2U,oBAAoB+gB,WAAW30B,KACpF,WACEf,EAAO2U,oBAAoB+gB,WAAa11B,EAAO2U,oBAAoB+gB,UACnE11B,EAAO+Y,eAET,SAAU7X,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCb,EAAgBu0B,yBAAyB10B,OApC/ClB,EAAO+W,iBAAiByM,eAlqFZ,QAmqFZniB,EAAgB6pB,0BAA0BlrB,EAAO+W,kBAAkBhW,KACjE,SAAUmJ,KACV,SAAUhJ,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCb,EAAgBu0B,yBAAyB10B,MAI/ClB,EAAO2W,gBAAgBkS,cAAgB3Z,EACvClP,EAAO4oB,uCAAuC7nB,KAC5CM,EACGs0B,gCAAgC31B,EAAO2U,oBAAoB+gB,WAC3D30B,KACC,WACEf,EAAO2U,oBAAoB+gB,WAAa11B,EAAO2U,oBAAoB+gB,UACnE11B,EAAO+Y,eAET,SAAU7X,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCb,EAAgBu0B,yBAAyB10B,UAsBzDlB,EAAO61B,0BAA4B,WAC5B71B,EAAOorB,6BAIRprB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO61B,0BAA2BjlB,IAIhB,MAA/C5Q,EAAO+W,iBAAiB+M,qBAC1B9jB,EAAO+W,iBAAiB+M,qBAAsB,EAC9C9jB,EAAO+W,iBAAiB4M,uBAAyB,IAEjD3jB,EAAO+W,iBAAiB+M,qBAAuB9jB,EAAO+W,iBAAiB+M,oBAClE9jB,EAAO+W,iBAAiB+M,oBAG3B9jB,EAAO+W,iBAAiB4M,uBAAyB,EAFjD3jB,EAAO+W,iBAAiB4M,uBAAyB,MAKrD3jB,EAAOmrB,iCAGTnrB,EAAO81B,iCAAmC,WACnC91B,EAAOorB,6BAIRprB,EAAOuY,wBACTvY,EAAOwY,wBAAwBxY,EAAO81B,iCAAkCllB,IAIhB,MAAtD5Q,EAAO+W,iBAAiBkN,4BAC1BjkB,EAAO+W,iBAAiBkN,4BAA6B,EACrDjkB,EAAO+W,iBAAiBgN,yBAA2BlxB,EAA0BgL,8BAA8BG,uBAE3GgC,EAAO+W,iBAAiBkN,4BAA8BjkB,EAAO+W,iBAC1DkN,2BACEjkB,EAAO+W,iBAAiBkN,2BAG3BjkB,EAAO+W,iBAAiBgN,yBAA2BlxB,EAA0BgL,8BAA8BG,qBAF3GgC,EAAO+W,iBAAiBgN,yBAA2BlxB,EAA0BgL,8BAA8BE,kBAK/GiC,EAAOsrB,iCAGTtrB,EAAO8a,sBAAwB,WAC7BzZ,EAAgBuf,0BAA0B7f,KACxC,SAAUmJ,GACJA,IACFlK,EAAO6U,kBAAkB1Y,UAAY+N,EAAO/N,UACxC+N,EAAO/N,WAAa+N,EAAO/N,UAAU,IACvC6D,EAAO6U,kBAAkBC,6BAA8B,EACvD5K,EAAO/N,UAAU6V,QAAQ,SAAU7F,GAE/BA,EAASA,SAASqJ,gBAClB3iB,EAA0BqJ,WAAWC,UAAUC,WAE/C4D,EAAO+1B,kCAAmC,EAC1C/1B,EAAOkV,oBAIXlV,EAAO6U,kBAAkBC,6BAA8B,IAI7D,SAAU5T,GACR2Q,EACEtQ,EAAsB0E,QAAQ/E,MAAMgB,MACpCb,EAAgBu0B,yBAAyB10B,OAMjDlB,EAAO+a,kBAAoB,WACzB/a,EAAO0V,KAAKC,wBACV3V,EAAOyH,eAAejG,SAASI,KAAKo0B,wBAClCh2B,EAAO0V,KAAKC,yBACdtU,EAAgB40B,yBAAyBl1B,KAAK,SAAUmJ,GAClDA,GAAUA,EAAOgsB,wBACnBl2B,EAAO0V,KAAKE,0BAA2B,EAEvC5V,EAAO0V,KAAKE,0BAA2B,KAM/C5V,EAAOsjB,gCAAkC,WACvC,IAAIpZ,EAAS8E,EAEThP,EAAOyH,eAAejG,SAASI,KAAK6b,YAEpCzd,EAAO2W,gBAAgByM,wBAA0BhU,GACjDpP,EAAO2W,gBAAgBqM,iBAAmB5T,GAC1CpP,EAAO2W,gBAAgBuM,kBAAoB/T,EAE3CjF,EAAS+E,EAETjP,EAAO2W,gBAAgByM,wBAA0B/T,GACjDrP,EAAO2W,gBAAgBqM,iBAAmB3T,GAC1CrP,EAAO2W,gBAAgBuM,kBAAoB7T,IAE3CnF,EAASgF,GAgBblP,EAAO2W,gBAAgBkS,cAAgB3e,GAUzClK,EAAOm2B,eAAiB,WACtB90B,EAAgB+0B,sBAAsBr1B,KACpC,SAAUmJ,GACJA,EAAOlO,SACTgE,EAAO+X,qBAAuB7N,EAAOmsB,YAC/BC,EAAgB,CACpBvX,UAAW,EACXwX,YAAa/nB,EAAuB5a,MAAM+jB,QAC1C6e,cAAehoB,EAAuB5a,MAAM+jB,QAC5C8e,UAAU,GAEZz2B,EAAO+X,qBAAqB2e,QAAQJ,IAEpCpyB,EAAK4B,MAAM,qCAGf,SAAU5E,GACRgD,EAAK4B,MAAM5E,MAMjBlB,EAAO22B,yBAA2B,SAAU36B,GAC1C,IAAKA,EAGH,OAFAgE,EAAOsX,sBAAwBzkB,EAA0B4I,0CACzDuE,EAAO42B,uBAGT,IACM56B,EADFgE,EAAOgY,2BAA2BE,gCAChClc,GAAU,EACdqF,EACGw1B,gCACA91B,KACC,SAAUmJ,GACRlK,EAAOsX,sBAAwBpN,GAEjC,SAAUhJ,GACRlF,GAAU,IAGb0H,QAAQ,WACP1D,EAAO82B,sCAAsC96B,GAC7CgE,EAAO42B,2BAGX52B,EAAOsX,sBAAwBzkB,EAA0B+G,6BACzDoG,EAAO42B,yBAIX52B,EAAO82B,sCAAwC,SAAU96B,GACvD,IAAM+6B,EAAgBlkC,EAA0BiJ,SAC1CoO,EAASlO,EAAU+6B,EAAc/6B,QAAU+6B,EAAc96B,QAC/D2S,EAAoBooB,UAAUD,EAAch7B,2BAA6BmO,IAG3ElK,EAAO42B,qBAAuB,WACxB52B,EAAOsX,sBAAsBvc,oBAC/BiF,EAAOm2B,iBAETn2B,EAAO+b,yBACP/b,EAAO6b,kBAGT7b,EAAOi3B,qDAAuD,WAC5D,IAAIj7B,GAAU,EACdqF,EACG61B,qCACAn2B,KACC,SAAUmJ,GACRlK,EAAOgY,2BAA6B9N,GAEtC,SAAUhJ,GAERlF,GAAU,IAGb0H,QAAQ,WACP1D,EAAO22B,yBAAyB36B,MAKtCgE,EAAOi3B,uD,kZAOT7hC,eAAiC,4BAA6B0Y,GAE9D,a,mDC99FA,SAASqpB,EACPn3B,EACAqO,EACAnK,EACAqK,EACAlN,EACAmN,EACA3b,EACAwR,GAIArE,EAAOo3B,aAAe,GAEtBp3B,EAAOq3B,YAAc,CACnBC,UAAW,GACXC,WAAY,IAGdv3B,EAAOw3B,SAAW,WAChBx3B,EAAOo3B,aAAevkC,EAA0B2K,mBAChD6D,EAAgBo2B,qBAAqB12B,KACnC,SAAUmJ,GACRlK,EAAOo3B,aAAe,GACtB,IAAK,IAAI3P,EAAI,EAAGA,EAAIvd,EAAOwtB,YAAYzwB,OAAQwgB,KACzCvd,EAAOytB,UAAUx8B,mBAAsD,YAAjC+O,EAAOwtB,YAAYjQ,GAAGmQ,QAC9D53B,EAAOo3B,aAAahV,KAAK,CACvBlpB,KAAMgR,EAAOwtB,YAAYjQ,GAAGmQ,OAC5BhkC,MAAOsW,EAAOwtB,YAAYjQ,GAAGvlB,SAKrC,SAAUod,GACRpb,EAAK4B,MAAM,kCAMjB9F,EAAO63B,uBAAyB,GAChC73B,EAAO83B,iBAAmBvpB,EAA6BupB,iBAmBvDz2B,EAAgB61B,qCAAqCn2B,KACnD,SAAUmJ,GACHA,EAAO+N,wCACV8f,KAAKC,0CAGT,SAAU1Y,GACRyY,KAAKC,2CAITh4B,EAAO8hB,YAAe9hB,EAAO8hB,aACzB,CACEC,gBAAiB,IAIvB/hB,EAAOi4B,IAAI,sBAAuB,SAAUC,EAAOC,EAASC,EAAUC,EAAWC,GAC/Et4B,EAAOq3B,YAAYC,UAAYa,EAAQj/B,KACvC8G,EAAOq3B,YAAYE,WAAa/oB,EAAuB+pB,KAAKJ,EAAQj/B,MAChEi/B,EAAQj/B,OAASrG,EAA0BuB,iBAAiBC,4BAC9D2L,EAAOq3B,YAAYC,UAAY,oBAE/BjzB,EAA2BghB,wBAI/BrlB,EAAOw4B,OAAO,cAAe,SAAUC,EAAUC,GAC/C14B,EAAO24B,kBAAoB34B,EAAO8hB,YAAYC,gBAAgB4W,oBAGhE34B,EAAOw3B,W,wKAGTpiC,eAAiC,qBAAsB+hC,GAEvD,a,mFC9FA,SAASyB,EACP54B,EACA64B,EACA54B,EACA64B,EACAC,EACAC,EACA3jC,EACA4Y,GAIA,IAAMgrB,EAAcH,EAAaI,SACjCl5B,EAAOE,UAAY,CACjBi5B,oBAAqB3mC,SAAaymC,EAAYG,aAC9CC,eAAgB,GAChBC,mBAAoB9mC,SAAaymC,EAAYG,aAC7CG,2BAA4B,GAC5BC,4BAA6B,EAC7BC,8BAA+B,GAEjCz5B,EAAO05B,YAAclnC,SAAawmC,EAAkBW,yBAZpD,MAgBItkC,EADFG,kBAAqBC,EAfvB,EAeuBA,uBAAwBC,EAf/C,EAe+CA,WAAYC,EAf3D,EAe2DA,UAG3DqK,EAAO45B,sBAAwB,SAAAC,GAC7B,IAAmE,EAI3DC,EAJJD,WAAiB7yB,QAA2C,GAAjC6yB,aAAA,EAAAA,EAAiB7yB,OAAOC,UAE7ChV,GADM4nC,aAAH,EAAGA,EAAiB7yB,OAAO,IAC9B/U,KACA8nC,GAHyD,EAGtBf,EAAkBgB,2BAArDD,cACFD,EAJ2D,EAG1CG,gBACgBhoC,GACvC+N,EAAO05B,YAAYQ,gBAAkBH,EAAcD,KAIvD95B,EAAOm6B,gBAAkB,WAAM,MACuBn6B,EAAOE,UAAnDi5B,EADqB,EACrBA,oBAAqBG,EADA,EACAA,mBAC7BT,EAAauB,kBAAb,OAA+BC,0BAA/B,IAA+BA,yBAA/B,EAA+BA,uBAAuBf,GAAoBv4B,KACxE,WACEf,EAAO05B,YAAYY,iBAAkB,EACrCrB,EAAYG,YAAcE,EAC1BP,EAAmBwB,oBAAoB9kC,EAAwBC,EAAY,CACzE4jC,qBACAH,wBAEFl5B,EAAkBQ,WAEpB,SAAAo5B,GACE75B,EAAO05B,YAAYY,iBAAkB,EACrCt6B,EAAOE,UAAUo5B,mBAAqBH,EACtCn5B,EAAO45B,sBAAsBC,MAKnC75B,EAAOgB,MAAQ,WAAM,IACXm4B,EAAwBn5B,EAAOE,UAA/Bi5B,oBACRJ,EAAmBwB,oBAAoB9kC,EAAwBE,EAAW,CACxE0jC,eAAgB,KAChBF,wBAEFn5B,EAAOE,UAAUo5B,mBAAqBH,EACtClrB,EAAS+mB,OAAOh1B,EAAOw6B,4BACvBx6B,EAAOE,UAAUq5B,2BAA6B,GAC9Ct5B,EAAkBQ,WAGpBT,EAAOy6B,oBAAsB,SAAAnB,GAC3Bt5B,EAAO05B,YAAYgB,cAAe,EAClC16B,EAAOw6B,2BAA6BvsB,EAAS,WAC3C4qB,EACG8B,oBADH,OACuBN,0BADvB,IACuBA,yBADvB,EACuBA,uBAAuBf,GAC3Cv4B,KACC,WACEf,EAAO05B,YAAYkB,aAAc,GAEnC,SAAAf,GACE75B,EAAO05B,YAAYkB,aAAc,EACjC56B,EAAO45B,sBAAsBC,KAGhCn2B,QAAQ,WACP1D,EAAO05B,YAAYgB,cAAe,EAClCzsB,EAAS+mB,OAAOh1B,EAAOw6B,4BAFV,MAOTx6B,EAAOE,UAHTq5B,EAJW,EAIXA,2BACAC,EALW,EAKXA,4BACAC,EANW,EAMXA,8BAEF5zB,QAAQC,MAAR,wCAA+CyzB,IAC3CA,IACEE,EAAgCD,GAClCx5B,EAAOE,UAAUu5B,8BAAgCA,EAAgC,EACjFz5B,EAAOy6B,oBAAoBlB,IAE3Bv5B,EAAOE,UAAUu5B,8BAAgC,EAEnDz5B,EAAOE,UAAUq5B,2BAA6B,OAGnD,IAGLv5B,EAAO66B,oBAAsB,WAC3B76B,EAAO05B,YAAYY,iBAAkB,EACrCz0B,QAAQC,MAAR,0BACqB9F,EAAOE,UAAUo5B,mBADtC,6BAC6Et5B,EAAO05B,YAAYgB,aADhG,MAFiC,IASvBX,EAHFT,EAAuBt5B,EAAOE,UAA9Bo5B,mBACJA,EAAmBryB,OAASjH,EAAO05B,YAAYoB,6BACjD96B,EAAO05B,YAAYkB,aAAc,EACzBb,EAAkBf,EAAkBgB,0BAApCD,cACR/5B,EAAO05B,YAAYQ,gBAAkBH,EAAcgB,cAC1C/6B,EAAO05B,YAAYgB,aAC5B16B,EAAOE,UAAUq5B,2BAA6BD,EAE9Ct5B,EAAOy6B,oBAAoBnB,IAI/Bt5B,EAAOg7B,uBAAyB,WAC9B,OAAOh7B,EAAO05B,YAAYY,kBAAoBt6B,EAAO05B,YAAYkB,a,kJAGrExlC,eAAiC,8BAA+BwjC,GAEhE,a,iEClIA,SAASqC,EAAsBj7B,EAAQsO,GAGrCtO,EAAOk7B,kBAAoB,WACzB,IAAMC,EAAW9lC,6CACXyjC,EAAe,CACnBI,SAAUl5B,EAAOyH,eAAejG,SAASI,MAErC0W,EAAc,CAClB8iB,WAAW,EACXvnC,YAAasnC,EACbhmC,WAAYE,gDACZjD,QAAS,CACP0mC,iBAGJxqB,EAAUvI,KAAKuS,GAAapO,OAAOnJ,KACjC,aACA,e,iCAIN3L,eAAiC,wBAAyB6lC,GAE1D,a,iECxBA,SAASI,EACPr7B,EACAC,EACAC,EACAwM,GAIA1M,EAAOG,OAAS,CACdlO,KAAM,GACNqpC,WAAYp7B,EAAUo7B,YAAc,GACpCC,YAAar7B,EAAUq7B,aAAe,GACtCC,eAAgBt7B,EAAUs7B,gBAAkB,GAC5Cn7B,aAAc,GACdsG,qBAAsB,GACtBvG,SAAUF,EAAUE,UAAY,GAChCE,UAAU,EACVm7B,YAAY,EACZC,wBAAyBx7B,EAAUy7B,SAASD,wBAC5CE,SAAU17B,EAAUy7B,SAASE,6BAC7BC,iBAAkB57B,EAAUy7B,SAASI,6CAA+C77B,EAAUE,UAGhGJ,EAAOg8B,UAAY,WACjB,OACGh8B,EAAOG,OAAOE,eACdL,EAAOG,OAAOG,UACfN,EAAOG,OAAOlO,MACd+N,EAAOG,OAAOlO,KAAKgV,SAAW/G,EAAUy7B,SAASD,2BAC/C17B,EAAOG,OAAO27B,kBAAoB97B,EAAOG,OAAOC,WAItDJ,EAAOQ,kBAAoB,WACzBR,EAAOG,OAAOE,aAAe,IAG/BL,EAAOi8B,0BAA4B,WACjCj8B,EAAOG,OAAOwG,qBAAuB,IAGvC3G,EAAOS,QAAU,WACfR,EAAkBQ,WAGpBT,EAAOk8B,UAAY,SAAAC,GACZrvB,0BAA6CqvB,EAAOvI,MACvDuI,EAAOC,cAAcC,kBAIzBr8B,EAAOs8B,aAAe,WACpBt8B,EAAOG,OAAOs7B,YAAcz7B,EAAOG,OAAOs7B,YAG5Cz7B,EAAOu8B,aAAe,WACpBrpC,OAAO6S,KAAK/F,EAAOG,OAAOy7B,WAG5B57B,EAAOU,OAAS,SAAAC,GACVX,EAAOG,OAAOG,UAIdK,EAAKC,SACPD,EAAKE,eAELb,EAAOQ,oBACPR,EAAOG,OAAOG,UAAW,EAEzBoM,EACG8vB,0BAA0Bx8B,EAAOG,OAAOm7B,WAAYt7B,EAAOG,OAAOlO,KAAM+N,EAAOG,OAAOC,UACtFW,KAAK,WACJb,EAAUu8B,OAAOr8B,SAAWJ,EAAOG,OAAOC,SAC1CH,EAAkBe,OAAM,KAEzBC,MAAM,SAAAC,GACDA,EAAMjP,MAAQ6a,+CAChB9M,EAAOG,OAAO27B,kBAAmB,EACjC97B,EAAOG,OAAOwG,qBAAuBzF,EAAMsI,SAE3CxJ,EAAOG,OAAOE,aAAea,EAAMsI,QAErCxJ,EAAOG,OAAOG,UAAW,MAK5BJ,EAAUy7B,SAASI,4CACtBrvB,EACG1V,oBAAoBgJ,EAAOG,OAAOC,UAClCW,KAAK,SAAAa,GACJ5B,EAAOG,OAAOm7B,WAAa15B,EAAK05B,WAChCt7B,EAAOG,OAAOq7B,eAAiB55B,EAAK45B,eACpCx7B,EAAOG,OAAOo7B,YAAc35B,EAAK86B,iBAElCz7B,MAAM,SAAAqe,GACLtf,EAAOG,OAAOE,aAAeif,EAAI9V,U,kFAKzCpU,eACE,qCACAimC,GAEF,a,iEC1GA,SAASsB,EACP38B,EACAC,EACAC,EACAwM,GAIA1M,EAAOG,OAAS,CACdC,SAAU,GACVC,aAAc,GACdC,UAAU,GAGZN,EAAOO,UAAY,WACjB,OAAOP,EAAOG,OAAOC,WAAaJ,EAAOG,OAAOE,eAAiBL,EAAOG,OAAOG,UAGjFN,EAAOQ,kBAAoB,WACzBR,EAAOG,OAAOE,aAAe,IAG/BL,EAAOS,QAAU,WACfR,EAAkBQ,WAGpBT,EAAOU,OAAS,SAAAC,GACVX,EAAOG,OAAOG,UAIdK,EAAKC,SACPD,EAAKE,eAELb,EAAOQ,oBACPR,EAAOG,OAAOG,UAAW,EAErBJ,EAAU2M,YAAcC,2BAC1BJ,EACCkwB,+BAA+B58B,EAAOG,OAAOC,UAC3CW,KAAK,WACJd,EAAkBe,OAAM,KAEzBC,MAAM,SAAAC,GACLlB,EAAOG,OAAOE,aAAea,EAAMsI,QACnCxJ,EAAOG,OAAOG,UAAW,IAEpBJ,EAAU2M,YAAcC,oCACjCJ,EACG1V,oBAAoBgJ,EAAOG,OAAOC,UAClCW,KAAK,SAAAa,GACA1B,EAAUu8B,SACZv8B,EAAUu8B,OAAOr8B,SAAWJ,EAAOG,OAAOC,SAC1CF,EAAUu8B,OAAOnB,WAAa15B,EAAK05B,WACnCp7B,EAAUu8B,OAAOjB,eAAiB55B,EAAK45B,eACvCt7B,EAAUu8B,OAAOlB,YAAc35B,EAAK86B,gBAEtCz8B,EAAkBe,OAAM,KAEzBC,MAAM,SAAAC,GACLlB,EAAOG,OAAOE,aAAea,EAAMsI,QACnCxJ,EAAOG,OAAOG,UAAW,M,kFAOrClL,eACE,2CACAunC,GAEF,a,0DCxEA,SAASE,EACP78B,EACA+N,EACA7J,EACAiK,EACA9M,EACA03B,EACAlmC,EACAiqC,EACA34B,EACA5C,GAIAvB,EAAO+8B,aAAe,WACpB17B,EAAgB27B,uBAAuBh9B,EAAO6T,aAAaC,cAAc/S,KACvE,WAEEoN,EAAUuC,eAAe7d,EAA0B8F,mBAErD,WACEwL,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsB0E,QAAQ/E,MAAMgB,MAC/CgE,SAAU3E,EAAsB0E,QAAQ/E,MAAMyE,UAMtD3F,EAAOi9B,qBAAuB,SAAUnpB,EAAcC,GACpDglB,EAAmBwB,oBACjBxB,EAAmBmE,WAAWC,QAAQC,YACtCvqC,EAA0B4F,wBAC1B,CACEqb,eACAC,kBAgBN,IAAMspB,EAAuB,GAC7BA,EACEP,EAAgBQ,kBAAkBC,gCAAgCC,aAbpE,WAEMx9B,EAAO6T,aAAaE,eAAiB/T,EAAO6T,aAAaC,cAK7D9T,EAAOi9B,qBAAqBj9B,EAAO6T,aAAaC,aAAc9T,EAAO6T,aAAaE,cAClF/T,EAAO6T,aAAaE,aAAe/T,EAAO6T,aAAaC,cALrD9T,EAAOib,mBAYX6hB,EAAgBW,qBACdX,EAAgBY,cAAcH,gCAC9BF,G,8KAGJjoC,eAAiC,qBAAsBynC,GAEvD,a,iEC9DA,SAASc,EAA6B39B,EAAQC,EAAmBC,EAAWwM,GAG1E1M,EAAOG,OAAS,CACdC,SAAUF,EAAUE,UAAY,GAChC7I,cAAe,KACfqmC,kBAAmB,GACnBC,mBAAoB,GACpBC,wBAAyB,EACzBz9B,aAAc,GACd09B,iBAAkB,GAClBC,SAAS,EACT19B,UAAU,EACV29B,mBAAmB,EACnBnC,kBAAmB57B,EAAUE,UAG/BJ,EAAOk+B,YAAc,WACnB,OAAOl+B,EAAOG,OAAOC,WAAaJ,EAAOG,OAAOE,eAAiBL,EAAOG,OAAOG,UAGjFN,EAAOQ,kBAAoB,WACzBR,EAAOG,OAAOE,aAAe,IAG/BL,EAAOS,QAAU,WAEfR,EAAkBQ,WAGpBT,EAAOgB,MAAQ,WAEbf,EAAkBe,OAAM,IAG1BhB,EAAOm+B,oBAAsB,SAAA5mC,GAC3B,OAAOA,EAAc6mC,KAAK,OAG5Bp+B,EAAOU,OAAS,SAAAC,GACVX,EAAOG,OAAOG,UAIdK,EAAKC,SACPD,EAAKE,eAELb,EAAOQ,oBACPR,EAAOG,OAAOG,UAAW,EAEzBoM,EACG2xB,sBAAsBr+B,EAAOG,OAAOC,UACpCW,KAAK,SAAAxJ,GACJyI,EAAOG,OAAO5I,cAAgBA,EAC9ByI,EAAOG,OAAOy9B,kBAAoBrmC,EAAc+mC,MAAM,EAAG/mC,EAAc0P,OAAS,GAChFjH,EAAOG,OAAO09B,mBAAqBtmC,EAAc+mC,MAAM/mC,EAAc0P,OAAS,KAE/EhG,MAAM,SAAAC,GACDA,EAAMjP,MAAQ6a,gDAChB9M,EAAOG,OAAO27B,kBAAmB,GAEnC97B,EAAOG,OAAOE,aAAea,EAAMsI,QACnCxJ,EAAOG,OAAOG,UAAW,MAKjCoM,EACG6xB,yBACAx9B,KAAK,SAAAa,GACJ5B,EAAOG,OAAO29B,wBAA0Bl8B,EAAK48B,YACxCx+B,EAAOG,OAAO27B,kBAAqB97B,EAAOG,OAAO29B,wBAmBpD99B,EAAOG,OAAO69B,SAAU,EAlBxBtxB,EACG2xB,sBAAsBr+B,EAAOG,OAAOC,UACpCW,KAAK,SAAAxJ,GACJyI,EAAOG,OAAO5I,cAAgBA,EAC9ByI,EAAOG,OAAOy9B,kBAAoBrmC,EAAc+mC,MAAM,EAAG/mC,EAAc0P,OAAS,GAChFjH,EAAOG,OAAO09B,mBAAqBtmC,EAAc+mC,MAAM/mC,EAAc0P,OAAS,KAE/EhG,MAAM,SAAAC,GACDA,EAAMjP,MAAQ6a,gDAChB9M,EAAOG,OAAO27B,kBAAmB,GAEnC97B,EAAOG,OAAOE,aAAea,EAAMsI,QACnCxJ,EAAOG,OAAOG,UAAW,IAE1BoD,QAAQ,WACP1D,EAAOG,OAAO69B,SAAU,MAM/B/8B,MAAM,SAAAqe,GACLtf,EAAOG,OAAO49B,iBAAmBze,EAAI9V,QACrCxJ,EAAOG,OAAO69B,SAAU,I,kFAI9B5oC,eAAiC,+BAAgCuoC,GACjE,a,iECpGA,SAASc,EACPz+B,EACAC,EACAyM,EACApN,EACAxM,EACAoa,EACAuB,GA8BA,SAASiwB,IACP1+B,EAAOS,UACP,IAAMJ,EAAe6M,EAAiBM,IAAI,8BAC1CiB,EAAsB8a,QAAQlpB,EAAc,IAAK,KAGnD,SAASs+B,EAAe1sC,GACtB,IAAIoO,EAAe6M,EAAiBM,IAAI,8BACpCvb,IAAS6a,4CACXzM,EAAe6M,EAAiBM,IAAI,iCAEtCxN,EAAOG,OAAOy+B,kBAAmB,EACjC5+B,EAAOG,OAAO0+B,wBAA0Bx+B,EACxCqM,EAA2BoyB,kBACzBhsC,EAA2BmD,OAAOS,kBAxCtCsJ,EAAOG,OAAS,CACd4+B,UAAU,EACVC,uBAAuB,EACvBJ,kBAAkB,EAClBC,wBAAyB,GACzBI,eAAgB3/B,EAAW4/B,eAAepsC,EAA2B8C,KAAKC,SAC1EspC,sBAAuB,GACvBC,qBAAsBlyB,EAAiBM,IAAI,iCAAkC,CAC3ExX,WAAYlD,EAA2BkD,aAEzCA,WAAYlD,EAA2BkD,WACvCqpC,qBAAqB,GAGvBr/B,EAAOs/B,WAAa,CAClBC,eAAgB,GAChBttC,KAAM,IA4BR+N,EAAOS,QAAU,WACf,IACQ++B,EADJx/B,EAAOG,OAAOk/B,qBACVG,EAAiBtyB,EAAiBM,IAAI,qCAC5CiB,EAAsBzS,QAAQwjC,EAAgB,IAAK,KACnDv/B,EAAkBe,OAAM,IAExBf,EAAkBQ,WAItBT,EAAOgK,WAAa,WAClB0C,EAA2BoyB,kBAAkBhsC,EAA2BmD,OAAOG,eAE/EsW,EACG+yB,gBAAgBz/B,EAAOs/B,WAAWC,gBAClCx+B,KAAK,WACJf,EAAOG,OAAO4+B,UAAW,IAE1B99B,MAAM,SAAAqe,GACLqf,EAAerf,EAAIrtB,SAIzB+N,EAAO0/B,oBAAsB,WAC3BhzB,EAA2BoyB,kBAAkBhsC,EAA2BmD,OAAOI,eAE/E2J,EAAOG,OAAO6+B,uBAAwB,EACtCtyB,EACGgzB,oBAAoB1/B,EAAOs/B,WAAWC,eAAgBv/B,EAAOs/B,WAAWrtC,MACxE8O,KAAK,SAAA4+B,GACJjzB,EAA2BoyB,kBACzBhsC,EAA2BmD,OAAOQ,wBAEpCuJ,EAAOG,OAAOk/B,qBAAsB,EACpC3yB,EACGkzB,oCAAoC5/B,EAAOs/B,WAAWC,eAAgBI,GACtE5+B,KAAK,SAAA/E,GACAA,EACFgE,EAAOS,UAGPi+B,MAGHz9B,MAAM,WACLy9B,QAGLz9B,MAAM,SAAAqe,GACLqf,EAAerf,EAAIrtB,MACnB+N,EAAOG,OAAO6+B,uBAAwB,KAI5Ch/B,EAAO6/B,sBAAwB,WA/E/B,IAA8BC,EAgF5B9/B,EAAOG,OAAOg/B,uBAhFcW,EAgF+B9/B,EAAOG,OAAO8+B,eA/EnEc,EAAkB,kDAAH,OAAqDD,EAArD,6BAAoF5yB,EAAiBM,IACxH,uBADmB,QAGdN,EAAiBM,IAAI,+BAAgC,CAAEwyB,YAAaD,KA8E3ErzB,EACGuzB,4BACAl/B,KAAK,SAAAw+B,GACJv/B,EAAOs/B,WAAWC,eAAiBA,IAEpCt+B,MAAM,WACLy9B,OAIN1+B,EAAO6/B,wB,2JAGTzqC,eACE,2CACAqpC,GAEF,a,sGC9HA,SAASyB,EACPxzB,EACAvI,EACA5C,EACAF,EACAxO,EACAqa,EACAoB,EACAxb,EACAC,EACA0b,GAIA,IAAM0xB,EAAOpI,KACboI,EAAKC,mDAAqD,EAC1DD,EAAKhgC,OAAS,CACZ69B,SAAS,EACTqC,UAAW,GACXC,4CAA4C,EAC5CC,2CAA2C,GAG7CJ,EAAKK,0BAA4B,CAC/BC,UAAW,YAAF,OAAc3zB,iCAAd,sBACT4zB,QAAS,QAGXP,EAAKxE,SAAW,GAChBwE,EAAKlhC,WAAa6N,qBAClBqzB,EAAKvzB,kBAAoB,GAEzBuzB,EAAKQ,yBAA2B,WAC9Bj0B,EACGk0B,yBACA7/B,KAAK,SAAA8/B,GACAA,GACFn0B,EAA2BoyB,kBACzBhsC,EAA2BmD,OAAOM,0CAGjC4pC,EAAKhgC,OAAOogC,4CACfJ,EAAKhgC,OAAOmgC,2CAA6CO,KAG5D5/B,MAAM,eAKXk/B,EAAKW,yBAA2B,WAC9Bp0B,EACGq0B,yBACAhgC,KAAK,SAAA8/B,GACCV,EAAKhgC,OAAOmgC,6CACfH,EAAKhgC,OAAOogC,0CAA4CM,KAG3D5/B,MAAM,eAKXk/B,EAAKa,+BAAiC,WACpC,OAAOb,EAAKxE,SAASsF,sBAAwD,EAAhCd,EAAKvzB,kBAAkB3F,QAGtEk5B,EAAKe,mBAAqB,SAAAr0B,GACxB,OAAOszB,EAAKvzB,kBAAkBu0B,SAASt0B,IAIzCszB,EAAKiB,kBAAmB,EACxBjB,EAAKkB,oCAAsC,WACzC,OACElB,EAAKvzB,kBAAkBu0B,SAASr0B,6BAChCqzB,EAAKvzB,kBAAkBu0B,SAASr0B,qCAIpCqzB,EAAKvD,+BAAiC,WACpC,IAYE0E,KAVEnB,EAAKxE,SAAS4F,sDACFjzB,EAAUvI,KAAK,CAC3BlS,YAAYhB,EAA0BiB,UAAU8C,MAAMK,0BACtD9B,WAAWtC,EAA0B8D,YAAYC,MAAMK,0BACvD7E,QAAS,CACP8N,UAAW,CACT2M,UAAWszB,EAAKlhC,WAAWC,UAIXgL,OAENwC,EAA2BkwB,kCAI1C77B,KAAK,WACCo/B,EAAKe,mBAAmBp0B,6BAC3BqzB,EAAKvzB,kBAAkBwV,KAAKtV,4BAGhCqzB,EAAKQ,2BACLR,EAAKW,6BAGHX,EAAKxE,SAAS4F,sDAChBD,EACGrgC,MAAM,cAITqgC,EACGrgC,MAAM,SAAAC,GACDA,EAAMjP,OAAS6a,+CAGjBqzB,EAAKxE,SAAS4F,uDAAwD,EACtEpB,EAAKvD,kCAELz4B,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsB0E,QAAQ/E,MAAMgB,MAC/CgE,SAAUhF,EAAMsI,aAO5B22B,EAAKnpC,oBAAsB,WAOM,SAAzBwqC,IACCrB,EAAKe,mBAAmBp0B,sCAC3BqzB,EAAKvzB,kBAAkBwV,KAAKtV,oCAC5BqzB,EAAK9B,uBAAsB,EAAOoD,EAAYrhC,WAGhD+/B,EAAKQ,2BACLR,EAAKW,2BAbP,IAAMW,EAAc,CAClBrhC,SAAU,GACVk7B,WAAY,GACZC,YAAa,GACbC,eAAgB,KAYd2E,EAAKxE,SAASI,2CACIztB,EAAUvI,KAAK,CACjClS,YAAYhB,EAA0BiB,UAAU8C,MAAMK,0BACtD9B,WAAWtC,EAA0B8D,YAAYC,MAAMK,0BACvD7E,QAAS,CACP8N,UAAW,CACT2M,UAAWszB,EAAKlhC,WAAWE,cAC3Bs9B,OAAQgF,MAKFv3B,OAAOnJ,KAAK,WACRuN,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMI,oBACvD7B,WAAYtC,EAA0B8D,YAAYC,MAAMI,oBACxD5E,QAAS,CACP8N,UAAW,CACTy7B,SAAUwE,EAAKxE,SACfc,OAAQgF,EACRrhC,SAAUqhC,EAAYrhC,SACtBk7B,WAAYmG,EAAYnG,WACxBC,YAAakG,EAAYlG,YACzBC,eAAgBiG,EAAYjG,mBAK5BtxB,OACHnJ,KAAKygC,GACLvgC,MAAM,gBAQGqN,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMI,oBACvD7B,WAAYtC,EAA0B8D,YAAYC,MAAMI,oBACxD5E,QAAS,CACP8N,UAAW,CACTy7B,SAAUwE,EAAKxE,SACfc,OAAQgF,MAKRv3B,OACHnJ,KAAKygC,IAhBPvgC,MAAM,eAuBXk/B,EAAKuB,0BAA4B,SAAC70B,EAAW80B,GAC3C,IAAMC,EAAmBzB,EAAKe,mBAAmBr0B,GAWjD,GAVIwP,eACEulB,EAEFvgC,EAAgByQ,qBAAqBjf,EAA0BoD,OAAOsH,cAGtE8D,EAAgByQ,qBAAqBjf,EAA0BoD,OAAOqH,eAItE6iC,EAAKprC,WAAc4sC,EAOvB,GAAIC,EAEYtzB,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMQ,WACvDjC,WAAYtC,EAA0B8D,YAAYC,MAAMQ,WACxDhF,QAAS,CACP8N,UAAW,CACT2M,YACAD,kBAAmBuzB,EAAKvzB,sBAKxB1C,OACHnJ,KAAK,WAEJ,IAAM8gC,EAAiB1B,EAAKvzB,kBAAkBvZ,QAAQwZ,GAChC,GAAlBg1B,GACF1B,EAAKvzB,kBAAkBsZ,OAAO2b,EAAgB,KAGjD5gC,MAAM,mBAGJ,GAAIk/B,EAAKlrC,cAAgBpC,EAA0BoC,YAAYwH,SAEpE,OAAQoQ,GACN,KAAKC,2BACHqzB,EAAKvD,iCACL,MACF,KAAK9vB,mCACHqzB,EAAKnpC,2BAMTmN,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsBzK,SAASsL,qBAC1C8D,SAAU3E,EAAsBugC,oBAAoBvQ,oBA3CtD4O,EAAKnrC,UAAU,kBAAMmrC,EAAKuB,0BAA0B70B,GAAW,MAgDnEszB,EAAK9B,sBAAwB,SAACsD,EAAavhC,IACrC+/B,EAAKprC,WAAc4sC,EAOTrzB,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMW,cACvDpC,WAAYtC,EAA0B8D,YAAYC,MAAMW,cAExDwqC,SAAU,SAEVC,UAAU,EACV5vC,QAAU,CACR8N,UAAW,CACTE,eAKA8J,OACHnJ,KAAK,cAGLE,MAAM,cAGNyC,QAAQ,WACPgJ,EACG6xB,yBACAx9B,KAAK,SAAAa,GACJu+B,EAAKrC,wBAA0Bl8B,EAAK48B,YACpC2B,EAAK8B,oBAAsBrgC,EAAKsgC,UAEjCjhC,MAAM,WACLk/B,EAAKrC,wBAA0B,KAC/BqC,EAAK8B,oBAAsB,SAlCjC9B,EAAKnrC,UAAU,kBAAMmrC,EAAK9B,uBAAsB,EAAMj+B,MAuC1D+/B,EAAKzB,gBAAkB,WACrB,IAAMr+B,EAAe6M,EAAiBM,IAAI,8BAC1CiB,EAAsB8a,QAAQlpB,EAAc,IAAK,MAGnD8/B,EAAKgC,qCAAuC,SAAAC,GAC1C11B,EACGkzB,oCAAoCO,EAAKZ,eAAgB6C,EAAUzC,mBACnE5+B,KAAK,SAAA/E,GACAA,GACIwjC,EAAiBtyB,EAAiBM,IAAI,qCAC5CiB,EAAsBzS,QAAQwjC,EAAgB,IAAK,KACnDW,EAAKhgC,OAAOmgC,4CAA6C,EACzDH,EAAKhgC,OAAOogC,2CAA4C,GAGxDJ,EAAKzB,oBAGRz9B,MAAM,WACLk/B,EAAKzB,qBAIXyB,EAAKkC,qCAAuC,SAAAD,GAC1C11B,EACG41B,oCAAoCnC,EAAKZ,eAAgB6C,EAAUzC,mBACnE5+B,KAAK,SAAA/E,GACAA,GACIwjC,EAAiBtyB,EAAiBM,IAAI,qCAC5CiB,EAAsBzS,QAAQwjC,EAAgB,IAAK,KACnDW,EAAKhgC,OAAOmgC,4CAA6C,EACzDH,EAAKhgC,OAAOogC,2CAA4C,GAGxDJ,EAAKzB,oBAGRz9B,MAAM,WACLk/B,EAAKzB,qBAIXyB,EAAKoC,sDAAwD,WAGvDpC,EAAKC,mDAFkB,EAGzBD,EAAKqC,6CAGLrC,EAAKzB,kBAEPyB,EAAKC,oDAAsD,GAG7DD,EAAKsC,sDAAwD,WAGvDtC,EAAKC,mDAFkB,EAGzBD,EAAKuC,6CAGLvC,EAAKzB,kBAEPyB,EAAKC,oDAAsD,GAG7DD,EAAKqC,2CAA6C,WAChD91B,EACGuzB,4BACAl/B,KAAK,SAAAw+B,GAAkB,IACdoD,EAAwBC,uDAChCzC,EAAKZ,eAAiBA,EACtBoD,EAAoBE,gBAAgB,CAClCC,YAAa,sBACbC,OAAQ1I,uBACR2I,YAAazD,EACb0D,WAAYN,EAAoBO,WAAWC,WAC3CC,cAAc,EACdC,kCAAkC,EAClCC,2CAA2C,EAC3CC,qBAAsBpD,EAAKgC,qCAC3BqB,uBAAwBrD,EAAKoC,sDAC7BkB,0BAA2BjxC,aAG9ByO,MAAM,WACLk/B,EAAKzB,qBAIXyB,EAAKuC,2CAA6C,WAChDh2B,EACGg3B,4BACA3iC,KAAK,SAAAw+B,GAAkB,IACdoD,EAAwBC,uDAChCzC,EAAKZ,eAAiBA,EACtBoD,EAAoBE,gBAAgB,CAClCC,YAAa,sBACbC,OAAQ1I,uBACR2I,YAAazD,EACb0D,WAAYN,EAAoBO,WAAWS,UAC3CP,cAAc,EACdC,kCAAkC,EAClCC,2CAA2C,EAC3CC,qBAAsBpD,EAAKkC,qCAC3BmB,uBAAwBrD,EAAKsC,sDAC7BgB,0BAA2BjxC,aAG9ByO,MAAM,WACLk/B,EAAKzB,qBAIXyB,EAAKzoC,0BAA4B,WAC/BgV,EAA2BoyB,kBACzBhsC,EAA2BmD,OAAOO,yBAEpCkW,EAA2BoyB,kBACzBhsC,EAA2BmD,OAAOK,uBAGhC6pC,EAAKxE,SAASiI,+BAChBzD,EAAKqC,6CAESl0B,EAAUvI,KAAK,CAC3BlS,YAAahB,EAA0BiB,UAAU8C,MAAMc,0BACvDvC,WAAYtC,EAA0B8D,YAAYC,MAAMc,4BAGpDwS,OACHnJ,KAAK,SAAA/E,GACAA,GACFmkC,EAAKhgC,OAAOmgC,4CAA6C,EACzDH,EAAKhgC,OAAOogC,2CAA4C,GAExDp8B,EAAa4B,KAAK,CAChBC,UAAWzE,EAAsB0E,QAAQ/E,MAAMgB,MAC/CgE,SAAU3E,EAAsB0E,QAAQ/E,MAAMyE,SAInD1E,MAAM,eAMbk/B,EAAK0D,yBAA2B,WAC9Bn3B,EAA2BoyB,kBACzB/rC,EAA0BkD,OAAOO,yBAEnCkW,EAA2BoyB,kBACzB/rC,EAA0BkD,OAAOK,uBAGnC6pC,EAAKuC,8CAGW,SAAZrC,IACJF,EAAKhgC,OAAOkgC,UAAYnzB,EAAiBM,IAAI,yBAC7C2yB,EAAKhgC,OAAO69B,SAAU,EAmDxBmC,EAAK2D,QAhDQ,WACX3D,EAAKhgC,OAAO69B,SAAU,EAEtBtxB,EACGq3B,cACAhjC,KAAK,SAAA46B,IACJwE,EAAKxE,SAAWA,GAEHqI,4BACXt3B,EACGu3B,sCACAljC,KAAK,SAAAmjC,GACJ,IAAMt3B,EAAoB,GAE1Bs3B,EAAcC,QAAQnyB,QAAQ,SAAAxN,GACxBA,EAAO3B,SAAWiK,qBAAwCtI,EAAOqI,YACnED,EAAkBwV,KAAK5d,EAAOqI,aAIlCszB,EAAKvzB,kBAAoBA,EACzBuzB,EAAKhgC,OAAO69B,SAAU,IAEvB/8B,MAAMo/B,GAETF,EAAKQ,2BACLR,EAAKW,6BAELX,EAAKhgC,OAAOkgC,UAAYnzB,EAAiBM,IAAI,4BAC7C2yB,EAAKhgC,OAAO69B,SAAU,GAGpBrC,EAASsF,sBACXv0B,EACG6xB,yBACAx9B,KAAK,SAAAa,GACJu+B,EAAKrC,wBAA0Bl8B,EAAK48B,YACpC2B,EAAK8B,oBAAsBrgC,EAAKsgC,UAEjCjhC,MAAM,WACLk/B,EAAKrC,wBAA0B,KAC/BqC,EAAK8B,oBAAsB,SAIlChhC,MAAMo/B,I,8OAMbjrC,eAAiC,gCAAiC8qC,GAClE,a,mDCphBA,SAAStoC,EAAiB/E,GAGxB,MAAO,CACLuxC,SAAU,IACVvwC,YAAahB,EAA0BiB,UAAU8D,kB,wCAIrDxC,cAAgC,mBAAoBwC,GAEpD,a,kCCXA,SAASysC,IAGP,MAAO,CACLD,SAAU,IACVE,KAFK,SAEA3rB,EAAOxF,EAASoxB,GACnB5rB,EAAMmJ,YAAenJ,EAAMmJ,aACvB,CACEC,gBAAiB,IAGvBpJ,EAAMmJ,YAAYC,gBAAkB,CAClC7O,iBAAkBqxB,EAAMC,iBACxBC,qBAAsBF,EAAMG,qBAC5BC,sBAAuBJ,EAAMI,sBAC7BhM,kBAA+C,SAA5B4L,EAAMK,kBACzB3T,YAAasT,EAAMM,YACnBC,uBAAwBP,EAAMO,uBAC9BC,MAAuB,SAAhBR,EAAMQ,MACbC,iCAA2E,SAAzCT,EAAMU,+BACxCvsC,iBAAkB6rC,EAAM7rC,iBACxBwsC,+BAAyE,SAAzCX,EAAMW,kC,eAM9C9vC,YAAgC,yBAA0BivC,GAE1D,a,gEC5BA,SAASc,EAAqBC,EAAa7jC,GAGzC,MAAO,CACL6iC,SAAU,IACViB,QAAS,UACTf,KAHK,SAGA3rB,EAAO2sB,EAAKf,EAAOpE,GACtBxnB,EAAM4sB,6BAA+B,EACrC5sB,EAAM6sB,SAAW,WACf,IAAMC,IAAe9sB,EAAM4sB,6BAEvBG,EAAyB,GACzBC,GAA4B,EAFa,KAAxBhtB,EAAMxL,KAAKmI,UAAmB9iB,QAAQozC,YAAYjtB,EAAMxL,KAAKmI,WAKhFqwB,GAA4B,EAC5BD,EAAyBG,0DAKM,MAH/BH,EAAyBI,OAAOC,2BAA2BC,0BACzDrtB,EAAMxL,KAAKmI,aAGXqwB,GAA4B,GAIhCxF,EAAK8F,aAAa,iBAAkBN,GAChCA,EACFxF,EAAK+F,iBAAmBR,GAIlBS,EAAY,CAChBxyC,KAHFwsC,EAAK+F,iBAAmB,IAGnB,OAAKJ,OAAOM,gBAAgBC,QAA5B,2BAGChoC,EAAS,CACbiX,SAAUqD,EAAMxL,KAAKmI,SACrBlX,QAAS,kBAGXgnC,EAAYkB,SAASH,EAAW9nC,GAAQ0C,KAAK,SAAUmJ,GACrD,IAGIq8B,EACAC,EACAC,EALAhB,IAAe9sB,EAAM4sB,+BAIrBiB,EADAD,GAAS,EAETE,EAAoB,GAEJ,IAAhBv8B,EAAOjY,OACTs0C,GAAS,EACTE,EAAoBZ,sDAGF,IAAhB37B,EAAOjY,OACTu0C,GAAQ,EACRC,EAAoBZ,oDAGF,KAAhB37B,EAAOjY,OACTu0C,GAAQ,EACRC,EAAoBZ,uDAGtB1F,EAAK8F,aAAa,SAAUM,GAC5BpG,EAAK8F,aAAa,YAAaO,GAC3BrG,EAAK/8B,SACmB,KAAtBqjC,IACFtG,EAAK+F,iBAAmBO,GAG1BtG,EAAK+F,iBAAmB,U,kDAStC9wC,cAAgC,uBAAwB+vC,GAExD,a,mDCnFA,SAASttC,EAAgBhF,GAGvB,MAAO,CACLuxC,SAAU,IACVzrB,OAAO,EACP9kB,YAAahB,EAA0BiB,UAAU+D,iB,wCAIrDzC,cAAgC,kBAAmByC,GAEnD,a,yECVA,SAASwJ,EACPqN,EACAxK,EACAkhC,EACAvyC,EACA6zC,EACAx5B,EACAy5B,GAsGiB,SAAXC,EAAqBjzC,EAAK0K,EAAQmG,EAAQqiC,GAC9C,IAIIjlC,EAJEukC,EAAY,CAChBxyC,MACAmzC,iBAAiB,GAGnB,OAAQtiC,GACN,KAAK4gC,EAAYjB,QAAQ32B,IAEvB,OADA24B,EAAUY,SAAWF,EACdzB,EAAY4B,QAAQb,EAAW9nC,GACxC,KAAK+mC,EAAYjB,QAAQ8C,KAOvB,OANAd,EAAUe,QAAU,CAClB,eAAgB,qCAEJ,MAAV7oC,IACFuD,EAAOiX,EAAEsuB,MAAM9oC,IAEV+mC,EAAYkB,SAASH,EAAWvkC,GACzC,KAAKwjC,EAAYjB,QAAQiD,MAOvB,OANAjB,EAAUe,QAAU,CAClB,eAAgB,qCAEJ,MAAV7oC,IACFuD,EAAOiX,EAAEsuB,MAAM9oC,IAEV+mC,EAAYiC,UAAUlB,EAAWvkC,GAC1C,KAAKwjC,EAAYjB,QAAQmD,OACvB,OAAOlC,EAAYmC,WAAWpB,EAAW9nC,IA7H/C,IAAMmpC,EAAkB,CACtBC,kBAAmB,oBACnBC,kBAAmB,0DACnBC,4BAA6B,iCAC7BC,2BAA4B,sDAC5BC,yBAA0B,oCAC1BC,0BAA2B,GAAF,OAAK1B,qCAAL,oCAGzB2B,sBAAuB,qCACvBC,uBAAwB,sCACxBC,6BAA8B,4CAC9BC,kCAAmC,kDACnCC,uBAAwB,sCACxBC,2BAA4B,yCAC5BC,eAAgB,oCAChBC,aAAc,GAAF,OAAKlC,wCAAL,aACZmC,mBAAoB,GAAF,OAAKnC,wCAAL,oBAClBoC,uBAAwB,GAAF,OAAKpC,wCAAL,oBACtBqC,mBAAoB,GAAF,OAAKrC,wCAAL,oBAClBsC,kBAAmB,8BACnBC,mBAAoB,GAAF,OAAKvC,wCAAL,mBAClBwC,iBAAkB,GAAF,OAAKxC,wCAAL,iBAChByC,cAAe,GAAF,OAAKzC,wCAAL,cACb0C,yBAA0B,GAAF,OAAK1C,wCAAL,0BACxBpuB,2BAA4B,GAAF,OAAKouB,wCAAL,gBAC1B2C,wBAAyB,GAAF,OAAK3C,wCAAL,gBACvB4C,uBAAwB,GAAF,OAAK5C,wCAAL,gBACtB9uB,sBAAuB,GAAF,OAAK8uB,+CAAL,6CACrB6C,8BAA+B,GAAF,OAAK7C,+CAAL,8CAC7B8C,wBAAyB,GAAF,OAAK9C,+CAAL,yDACvB+C,0BAA2B,GAAF,OAAK/C,4CAAL,oBACzBgD,0BAA2B,GAAF,OAAKhD,2BAAL,gBACzBiD,6BAA8B,GAAF,OAAKjD,2BAAL,4BAC5BkD,4BAA6B,GAAF,OAAKlD,6BAAL,sCAC3BmD,+BAAgC,GAAF,OAAKnD,6BAAL,iCAG1BoD,EAAiB7C,EAAoB8C,kBACzC,CAEElwC,EAAG2T,EAAiBM,IAAI,wBACxB9T,EAAGwT,EAAiBM,IAAI,uBACxB7T,EAAGuT,EAAiBM,IAAI,+BACxB/N,EAAGyN,EAAiBM,IAAI,iCACxB9N,EAAGwN,EAAiBM,IAAI,8BACxB7N,EAAGuN,EAAiBM,IAAI,+BACxB5N,EAAGsN,EAAiBM,IAAI,iCACxB3N,EAAGqN,EAAiBM,IAAI,mCAE1BN,EAAiBM,IAAI,0BAGjBk8B,EAAmB/C,EAAoB8C,kBAC3C,CAEElwC,EAAG2T,EAAiBM,IAAI,yBACxB9T,EAAGwT,EAAiBM,IAAI,4BACxB7T,EAAGuT,EAAiBM,IAAI,iCACxB/N,EAAGyN,EAAiBM,IAAI,oCACxB9N,EAAGwN,EAAiBM,IAAI,wBACxB7N,EAAGuN,EAAiBM,IAAI,sCACxB5N,EAAGsN,EAAiBM,IAAI,sCACxB3N,EAAGqN,EAAiBM,IAAI,4BACxBm8B,EAAGz8B,EAAiBM,IAAI,8BAE1BN,EAAiBM,IAAI,0BAGjBo8B,EAAmBjD,EAAoB8C,kBAC3C,CAEElwC,EAAG2T,EAAiBM,IAAI,+BACxB9T,EAAGwT,EAAiBM,IAAI,iCACxB7T,EAAGuT,EAAiBM,IAAI,uCACxB/N,EAAGyN,EAAiBM,IAAI,uCACxB9N,EAAGwN,EAAiBM,IAAI,iCACxB7N,EAAGuN,EAAiBM,IAAI,uCACxB5N,EAAGsN,EAAiBM,IAAI,sCACxB3N,EAAGqN,EAAiBM,IAAI,qCACxBm8B,EAAGz8B,EAAiBM,IAAI,yCACxBq8B,EAAG38B,EAAiBM,IAAI,oCACxB1N,GAAIoN,EAAiBM,IAAI,0CAE3BN,EAAiBM,IAAI,0BAGjBs8B,EAAuBnD,EAAoB8C,kBAC/C,CAEElwC,EAAG2T,EAAiBM,IAAI,yBACxB7T,EAAGuT,EAAiBM,IAAI,wBACxB/N,EAAGyN,EAAiBM,IAAI,4BACxBm8B,EAAGz8B,EAAiBM,IAAI,uCAE1BN,EAAiBM,IAAI,0BAywBvB,MAvuBa,CACXkM,4BADW,SACiBuZ,GAC1BuU,EAAgBhtB,wBAAhB,UAA6CyY,EAA7C,kCACAuU,EAAgBuC,+BAAhB,UAAoD9W,EAApD,kDACAuU,EAAgBwC,4BAAhB,UAAiD/W,EAAjD,sDACAuU,EAAgByC,yBAAhB,UAA8ChX,EAA9C,yDAGFzZ,sBARW,SAQW0Z,GACpBsU,EAAgB0C,eAAhB,UAAoChX,EAApC,uBACAsU,EAAgB1X,eAAhB,UAAoCoD,EAApC,wBAGFzY,yBAbW,SAac0Y,GACvBqU,EAAgB2C,uBAAhB,UAA4ChX,EAA5C,qBACAqU,EAAgB4C,qBAAhB,UAA0CjX,EAA1C,mBACAqU,EAAgB6C,2BAAhB,UAAgDlX,EAAhD,yBACAqU,EAAgB8C,kBAAhB,UAAuCnX,EAAvC,2BACAqU,EAAgB+C,oBAAhB,UAAyCpX,EAAzC,aACAqU,EAAgBgD,mBAAhB,UAAwCrX,EAAxC,oBACAqU,EAAgBrU,yBAA2BA,EAC3CqU,EAAgBiD,yBAAhB,UAA8CtX,EAA9C,mBACAqU,EAAgBkD,0BAAhB,UAA+CvX,EAA/C,oBACAqU,EAAgBmD,2BAAhB,UAAgDxX,EAAhD,0BACAqU,EAAgBoD,4BAAhB,UAAiDzX,EAAjD,0BACAqU,EAAgBqD,2BAAhB,UAAgD1X,EAAhD,kCAGF2X,yBA5BW,SA4BcC,GACvBvD,EAAgBmB,mBAAhB,UAAwCoC,EAAxC,mBACAvD,EAAgBoB,iBAAhB,UAAsCmC,EAAtC,iBACAvD,EAAgBqB,cAAhB,UAAmCkC,EAAnC,cACAvD,EAAgBsB,yBAAhB,UAA8CiC,EAA9C,0BACAvD,EAAgBxvB,2BAAhB,UAAgD+yB,EAAhD,gBACAvD,EAAgBc,aAAhB,UAAkCyC,EAAlC,aACAvD,EAAgBe,mBAAhB,UAAwCwC,EAAxC,oBACAvD,EAAgBgB,uBAAhB,UAA4CuC,EAA5C,oBACAvD,EAAgBiB,mBAAhB,UAAwCsC,EAAxC,qBAGFpwB,iBAxCW,SAwCMuY,GACfsU,EAAgBwD,cAAhB,UAAmC9X,EAAnC,mBACAsU,EAAgByD,kBAAhB,UAAuC/X,EAAvC,wBACAsU,EAAgB0D,oBAAhB,UAAyChY,EAAzC,0BACAsU,EAAgB2D,uBAAhB,UAA4CjY,EAA5C,kCACAsU,EAAgB4D,oBAAhB,UAAyClY,EAAzC,cACAsU,EAAgB6D,yBAAhB,UAA8CnY,EAA9C,6BACAsU,EAAgBwB,uBAAhB,UAA4C9V,EAA5C,gBACAsU,EAAgBuB,wBAAhB,UAA6C7V,EAA7C,iBAGFoY,gCAnDW,SAmDqBC,GAC9B/D,EAAgBlwB,sBAAhB,UAA2Ci0B,EAA3C,6CACA/D,EAAgByB,8BAAhB,UAAmDsC,EAAnD,8CACA/D,EAAgB0B,wBAAhB,UAA6CqC,EAA7C,0DAGFC,aAAc,CACZC,mBAAoB,qCACpBC,iBAAkB,mCAClBC,uBAAwB,kCACxBC,wBAAyB,oCACzBC,uBAAwB,kCACxBC,qBAAsB,gCACtBC,8BAA+B,sCAC/BC,gCAAiC,4CACjCC,qBAAsB,gCACtBC,iCAAkC,8CAIpC34B,gBAAiBmzB,EAEjBtQ,oBAzEW,WA0ET,IAEAziC,EAAM6zC,EAAgBkB,kBACtB,OAAO9B,EAASjzC,OAHZ0K,EAGyB,QAG/Byd,oBAhFW,WAiFT,IAEAnoB,EAAM6zC,EAAgBC,kBACtB,OAAOb,EAASjzC,OAFZ0K,EAEyB,QAG/B8tC,4BAvFW,WAwFT,IAEAx4C,EAAM6zC,EAAgBM,0BAA0Bx0C,QAAQ,WAAY+mC,wBACpE,OAAOuM,EAASjzC,OAFZ0K,EAEyB,QAG/B+tC,4CA9FW,WA+FT,IAEAz4C,EAAM6zC,EAAgBI,2BACtB,OAAOhB,EAASjzC,OAFZ0K,EAEyB,QAG/B8wB,oBArGW,WAsGT,IAEAx7B,EAAM6zC,EAAgBE,kBACtBrpC,EAAS,CACPguC,2BAA4B75C,QAAQ2gB,QAAQ,qCAAqCm5B,OAEnF,OAAO1F,EAASjzC,EAAK0K,EAAQ,SAG/B0I,2BA/GW,SA+GgBX,GACzB,IAEAzS,EAAM6zC,EAAgB6D,yBACtBhtC,EAAS,CACPgY,gBAAiBjQ,EAAaiQ,gBAC9BD,YAAahQ,EAAagQ,aAE5B,OAAOwwB,EAASjzC,EAAK0K,EAAQ,SAG/BmF,4BA1HW,SA0HiB+oC,GAC1B,IAAM54C,EAAM6zC,EAAgB+C,oBACtBlsC,EAAS,CACbmuC,aAAcD,EAAUC,aACxBpsC,SAAUmsC,EAAUnsC,UAEtB,OAAOwmC,EAASjzC,EAAK0K,EAAQ,SAG/ByF,+BAnIW,WAoIT,IAAMnQ,EAAM6zC,EAAgBgD,mBAC5B,OAAO5D,EAASjzC,EAAK,KAAM,SAG7B84C,cAxIW,WAyIT,IAAM94C,EAAM6zC,EAAgB+C,oBAC5B,OAAO3D,EAASjzC,EAAK,KAAM,QAG7B6pB,cA7IW,WA8IT,IAAM7pB,EAAM6zC,EAAgBc,aAE5B,OAAO1B,EAASjzC,EAAK,KAAM,QAG7BkV,wBAnJW,SAmJarB,GACtB,IAAM7T,EAAM6zC,EAAgBc,aACtBjqC,EAAS,CACbuK,YAAapB,EAAUoB,YACvBX,OAAQT,EAAUS,OAClBQ,MAAOjB,EAAUiB,MACjBrI,SAAUoH,EAAUpH,UAGtB,OAAOwmC,EAASjzC,EAAK0K,EAAQ,SAG/BiL,wBA/JW,SA+JaD,GACtB,IAAM1V,EAAM6zC,EAAgBe,mBACtBlqC,EAAS,CACb+B,SAAUiJ,EAAWjJ,UAGvB,OAAOwmC,EAASjzC,EAAK0K,EAAQ,SAG/B4L,4BAxKW,WAyKT,IAAMtW,EAAM6zC,EAAgBgB,uBAC5B,OAAO5B,EAASjzC,EAAK,KAAM,SAG7BmW,wBA7KW,SA6KaH,GACtB,IAAMhW,EAAM6zC,EAAgBiB,mBACtBpqC,EAAS,CACbpM,KAAM0X,EAAS1X,MAEjB,OAAO20C,EAASjzC,EAAK0K,EAAQ,SAG/B6zB,wBArLW,SAqLaC,GAChBx+B,EAAM,GAAH,OAAMyyC,qCAAN,qBAAqDjU,EAArD,YACT,OAAOyU,EAASjzC,EAAK,KAAM,SAG7B+4C,iCA1LW,WA2LT,IACA/4C,EAAM6zC,EAAgBG,4BACtB,OAAOf,EAASjzC,EAAK,KAAM,SAG7Bg5C,+BAhMW,WAiMT,IAAMh5C,EAAM6zC,EAAgBwB,uBAC5B,OAAOpC,EAASjzC,EAAK,KAAM,OAAO,IAGpCia,6BArMW,SAqMkBT,GAC3B,IAEAxZ,EAAM6zC,EAAgBuB,wBACtB1qC,EAAS,CACPiX,SAAUnI,EAAKmI,SACflV,SAAU+M,EAAK/M,UAEjB,OAAOwmC,EAASjzC,EAAK0K,EAAQ,SAG/Bq0B,6BAhNW,WAiNT,IAAM/+B,EAAM6zC,EAAgBhtB,wBAC5B,OAAOosB,EAASjzC,EAAK,KAAM,OAAO,IAGpCqgC,gCArNW,SAsNTH,EACA+Y,EACAC,GAEA,IAAMzjB,EAAW,GAEX0jB,EAAkBtF,EAAgBuC,+BACK,EAAzClW,EAAgC5sB,QAClCmiB,EAAShH,KACPwkB,EACEkG,EACA,CAAEC,gBAAiBlZ,GACnB,QACA,IAMN,IAAMmZ,EAAsBxF,EAAgBwC,4BAC5Cx3C,QAAQwf,QAAQ66B,EAA+B,SAAUpzC,GACvD2vB,EAAShH,KAAKwkB,EAASoG,EAAqB,CAAE96B,gBAAiBzY,GAAS,QAAQ,MAGlF,IAAMwzC,EAAyBzF,EAAgByC,yBAK/C,OAJAz3C,QAAQwf,QAAQ46B,EAAgC,SAAUnzC,GACxD2vB,EAAShH,KAAKwkB,EAASqG,EAAwB,CAAE/6B,gBAAiBzY,GAAS,QAAQ,MAG9EiV,EAAG2a,IAAID,IAGhBxI,wBAtPW,WAuPT,IAAMjtB,EAAM6zC,EAAgB2D,uBAC5B,OAAOvE,EAASjzC,EAAK,KAAM,OAAO,IAGpC4Y,4BA3PW,SA2PiBJ,EAAU/L,GACpC,IAAMzM,EAAM,GAAH,OAAM6zC,EAAgB4D,oBAAtB,YAA6Cj/B,EAA7C,eAEH9N,EAAS,GAKf,OAJI+B,IACF/B,EAAO+B,SAAWA,GAGbwmC,EAASjzC,EAAK0K,EAAQ,SAG/B43B,uBAtQW,WAuQT,IAAMtiC,EAAM6zC,EAAgB0C,eAC5B,OAAOtD,EAASjzC,EAAK,KAAM,OAAO,IAGpCk8B,oBA3QW,WA4QT,IAAMl8B,EAAM6zC,EAAgB1X,eAC5B,OAAO8W,EAASjzC,EAAK,KAAM,SAK7BiiC,yBAlRW,SAkRc10B,GACvB,IAAI2M,EAAW3M,GAAS,gDAIxB,OAHIA,GAASA,EAAM8F,QAAU9F,EAAM8F,OAAO,IAAM9F,EAAM8F,OAAO,GAAGwC,UAC9DqE,EAAW3M,EAAM8F,OAAO,GAAGwC,SAEtBqE,GAGTlC,2BA1RW,SA0RgBzK,GACzB,OAAOsoC,EAAe0D,4BAA4BhsC,IAGpDuC,6BA9RW,SA8RkBvC,GAC3B,OAAO0oC,EAAiBsD,4BAA4BhsC,IAGtD8H,6BAlSW,SAkSkB9H,GAC3B,OAAOwoC,EAAiBwD,4BAA4BhsC,IAGtDC,iCAtSW,SAsSsBD,GAC/B,OAAO4oC,EAAqBoD,4BAA4BhsC,IAM1Dg2B,mCA7SW,WA8ST,IAAMvjC,EAAM6zC,EAAgBxvB,2BAC5B,OAAO4uB,EAASjzC,EAAK,KAAM,OAAO,IAIpCkrB,oBAnTW,WAoTT,IAAMlrB,EAAM6zC,EAAgBmB,mBAC5B,OAAO/B,EAASjzC,EAAK,KAAM,OAAO,IAGpC6rB,uBAxTW,SAwTYhI,GACrB,IAAM7jB,EAAM6zC,EAAgBmB,mBAI5B,OAAO/B,EAASjzC,EAHD,CACb6jB,eAE2B,SAI/BsG,kBAjUW,WAkUT,IAAMnqB,EAAM6zC,EAAgBoB,iBAC5B,OAAOhC,EAASjzC,EAAK,KAAM,OAAO,IAGpC2sB,qBAtUW,SAsUU7I,EAAWrX,GAC9B,IAAMzM,EAAM6zC,EAAgBoB,iBACtBvqC,EAAS,CACb0f,SAAUtG,EAAUsG,SACpBC,WAAYvG,EAAUuG,WACtBC,UAAWxG,EAAUwG,UACrB7d,YAEF,OAAOwmC,EAASjzC,EAAK0K,EAAQ,SAI/B2gB,eAlVW,WAmVT,IAAMrrB,EAAM6zC,EAAgBqB,cAC5B,OAAOjC,EAASjzC,EAAK,KAAM,OAAO,IAGpC6tB,kBAvVW,SAuVO9J,GAChB,IAAM/jB,EAAM6zC,EAAgBqB,cAI5B,OAAOjC,EAASjzC,EAHD,CACb+jB,UAE2B,SAG/BoH,gBA/VW,WAgWT,IAAMnrB,EAAM6zC,EAAgBa,eAC5B,OAAOzB,EAASjzC,EAAK,KAAM,OAAO,IAGpC+tB,mBApWW,SAoWQnK,GACjB,IAAM5jB,EAAM6zC,EAAgBa,eACtBhqC,EAAS,CACb0gB,UAAWxH,EAASI,QAAQoH,WAE9B,OAAO6nB,EAASjzC,EAAK0K,EAAQ,SAI/BsjB,uBA7WW,WA8WT,IAAMhuB,EAAM6zC,EAAgBiD,yBAC5B,OAAO7D,EAASjzC,EAAK,KAAM,OAAO,IAGpCqpC,uBAlXW,SAkXYnb,GACrB,IAAMluB,EAAM6zC,EAAgBiD,yBAI5B,OAAO7D,EAASjzC,EAHD,CACbkuB,aAE2B,UAG/BG,4BA1XW,WA2XT,IAAMruB,EAAM6zC,EAAgBkD,0BAC5B,OAAO9D,EAASjzC,EAAK,KAAM,OAAO,IAIpCu4B,0BAhYW,WAiYT,IAAMv4B,EAAM6zC,EAAgBsB,yBAC5B,OAAOlC,EAASjzC,EAAK,KAAM,OAAO,IAGpCs5B,6BArYW,SAqYkBkgB,GAC3B,IAAMx5C,EAAM6zC,EAAgBsB,yBACtBzqC,EAAS,CACbjC,SAAU+wC,EAAY9gB,YACtBE,QAAS4gB,EAAY7gB,WACrBG,QAAS0gB,EAAY3gB,WACrBG,OAAQwgB,EAAYzgB,UACpBN,mCAAoC+gB,EAAYhhB,iCAElD,OAAOya,EAASjzC,EAAK0K,EAAQ,SAO/BgkB,8BArZW,WAsZT,IAAM+qB,EAAqB5F,EAAgB4B,0BACrChgB,EAAW,CACfikB,gBAAiBzG,EAASwG,EAAoB,KAAM,QAGtD,OAAO1+B,EAAG2a,IAAID,GAAUroB,KAAK,SAAUa,GACrC,IAAMgV,EAAwB,GAK9B,OAJAA,EAAsB0L,mBAAqB1gB,EAAKyrC,gBAAgB/qB,mBAChE1L,EAAsB2L,mBAAqB3gB,EAAKyrC,gBAAgB9qB,mBAChE3L,EAAsB4L,qBAAuB5gB,EAAKyrC,gBAAgB1qB,YAClE/L,EAAsB6L,gBAAkB7gB,EAAKyrC,gBAAgB5qB,gBACtD7L,KAIX8L,8BAraW,SAqamB4qB,GAC5B,IAAM35C,EAAM6zC,EAAgB6B,6BAI5B,OAAOzC,EAASjzC,EAHD,CACbgvB,YAAa2qB,GAEc,SAI/B1qB,0BA9aW,WA+aT,IAAMjvB,EAAM6zC,EAAgBoD,4BAC5B,OAAOhE,EAASjzC,EAAK,KAAM,OAAOoN,KAAK,SAAUa,GAC/C,IAAMiV,EAAqB,GAG3B,OAFAA,EAAmBgM,YACjBjhB,EAAK2rC,mBAAqB16C,EAA0B4K,gBAAgBG,UAC/DiZ,KAGXiM,wBAvbW,SAubaD,GACtB,IAAMlvB,EAAM6zC,EAAgBoD,4BACtBvsC,EAAS,CACbkvC,kBAAmB1qB,EACfhwB,EAA0B4K,gBAAgBG,UAC1C/K,EAA0B4K,gBAAgBE,SAEhD,OAAOipC,EAASjzC,EAAK0K,EAAQ,QAAQ0C,KACnC,WACE,OAAO8hB,GAET,SAAU3hB,GACR,OAAOA,KAKb6hB,wBAxcW,WAycT,IAAMyqB,EAAoBhG,EAAgBO,sBACpC0F,EAAqBjG,EAAgBQ,uBACrC0F,EAA0BlG,EAAgBS,6BAE1C7e,EAAW,CACfnG,eAAgB2jB,EAAS4G,EAAmB,KAAM,OAClDrqB,gBAAiByjB,EAAS6G,EAAoB,KAAM,OACpDpqB,sBAAuBujB,EAAS8G,EAAyB,KAAM,QAGjE,OAAOh/B,EAAG2a,IAAID,GAAUroB,KAAK,SAAUa,GACrC,IAAM+U,EAAkB,GAIxB,OAHAA,EAAgBsM,eAAiBrhB,EAAKqhB,eAAeD,eACrDrM,EAAgBwM,gBAAkBvhB,EAAKuhB,gBAAgBD,gBACvDvM,EAAgB0M,sBAAwBzhB,EAAKyhB,sBAAsBD,sBAC5DzM,KAKXg3B,uBA7dW,WA8dT,IAAMh6C,EAAM6zC,EAAgBO,sBAC5B,OAAOnB,EAASjzC,EAAK,KAAM,OAAO,IAEpCo1B,0BAjeW,SAieepS,GACxB,IAAMhjB,EAAM6zC,EAAgBO,sBACtB1pC,EAAS,CACb2kB,eAAgBrM,EAAgBqM,gBAElC,OAAO4jB,EAASjzC,EAAK0K,EAAQ,SAI/BuvC,wBA1eW,WA2eT,IAAMj6C,EAAM6zC,EAAgBQ,uBAC5B,OAAOpB,EAASjzC,EAAK,KAAM,OAAO,IAEpCs1B,2BA9eW,SA8egBtS,GACzB,IAAMhjB,EAAM6zC,EAAgBQ,uBACtB3pC,EAAS,CACb6kB,gBAAiBvM,EAAgBuM,iBAEnC,OAAO0jB,EAASjzC,EAAK0K,EAAQ,SAI/BwvC,8BAvfW,WAwfT,IAAMl6C,EAAM6zC,EAAgBS,6BAC5B,OAAOrB,EAASjzC,EAAK,KAAM,OAAO,IAEpCw1B,iCA3fW,SA2fsBxS,GAC/B,IAAMhjB,EAAM6zC,EAAgBS,6BACtB5pC,EAAS,CACb+kB,sBAAuBzM,EAAgByM,uBAEzC,OAAOwjB,EAASjzC,EAAK0K,EAAQ,SAI/BsrB,mCApgBW,WAqgBT,IAAMh2B,EAAM6zC,EAAgBU,kCAC5B,OAAOtB,EAASjzC,EAAK,KAAM,OAAO,IAEpCu2B,sCAxgBW,SAwgB2BpT,GACpC,IAAMnjB,EAAM6zC,EAAgBU,kCACtB7pC,EAAS,CACbwrB,2BAA4B/S,EAAa8S,4BAE3C,OAAOgd,EAASjzC,EAAK0K,EAAQ,SAI/ByrB,wBAjhBW,WAkhBT,IAAMn2B,EAAM6zC,EAAgBW,uBAC5B,OAAOvB,EAASjzC,EAAK,KAAM,OAAO,IAGpCy2B,2BAthBW,SAshBgBtT,GACzB,IAAMnjB,EAAM6zC,EAAgBW,uBACtB9pC,EAAS,CACb2rB,gBAAiBlT,EAAaiT,iBAEhC,OAAO6c,EAASjzC,EAAK0K,EAAQ,SAI/BuuB,yBA/hBW,WAgiBT,IAAMj5B,EAAM6zC,EAAgB6C,2BAC5B,OAAOzD,EAASjzC,EAAK,KAAM,OAAO,IAGpCm5B,4BApiBW,SAoiBiBzV,GAC1B,IAAM1jB,EAAM6zC,EAAgB6C,2BACtBhsC,EAAS,CACbusB,iBAAkBvT,EAAkBuT,kBAEtC,OAAOgc,EAASjzC,EAAK0K,EAAQ,SAG/B0uB,yCA5iBW,WA6iBT,OAAO7f,EAAiBM,IAAI,uCAI9B6c,qBAjjBW,WAkjBT,IAAM12B,EAAM6zC,EAAgB2C,uBAC5B,OAAOvD,EAASjzC,EAAK,KAAM,OAAO,IAGpC+2B,wBAtjBW,SAsjBatT,GACtB,IAAMzjB,EAAM6zC,EAAgB2C,uBACtB9rC,EAAS,CACbisB,aAAclT,EAAckT,cAE9B,OAAOsc,EAASjzC,EAAK0K,EAAQ,SAG/BysB,6CA9jBW,WA+jBT,OAAO5d,EAAiBM,IAAI,2CAI9B+c,mBAnkBW,WAokBT,IAAM52B,EAAM6zC,EAAgB4C,qBAC5B,OAAOxD,EAASjzC,EAAK,KAAM,OAAO,IAGpCq3B,sBAxkBW,SAwkBW5T,GACpB,IAAMzjB,EAAM6zC,EAAgB4C,qBACtB/rC,EAAS,CACbmsB,WAAYpT,EAAcoT,YAE5B,OAAOoc,EAASjzC,EAAK0K,EAAQ,SAM/B+1B,0BAnlBW,WAolBT,IAAMzgC,EAAM6zC,EAAgBwD,cAC5B,OAAOpE,EAASjzC,EAAK,KAAM,OAAO,IAGpC+X,6BAxlBW,SAwlBkBJ,GAC3B,IAAM3X,EAAM6zC,EAAgBwD,cAI5B,OAAOpE,EAASjzC,EAHD,CACboY,IAAKT,GAEsB,QAAQ,IAGvCgqB,6BAhmBW,WAimBT,IAAM3hC,EAAM6zC,EAAgBwD,cAC5B,OAAOpE,EAASjzC,EAAK,KAAM,UAAU,IAGvCmY,6BArmBW,SAqmBkB9W,GAC3B,IAAMrB,EAAM6zC,EAAgB0D,oBAI5B,OAAOtE,EAASjzC,EAHD,CACboY,IAAK/W,GAEsB,QAAQ,IAGvCs/B,2BA7mBW,WA8mBT,IAAM3gC,EAAM6zC,EAAgByD,kBAC5B,OAAOrE,EAASjzC,EAAK,KAAM,QAAQ,IAIrC6hC,4BAnnBW,WAonBT,IAAM7hC,EAAM6zC,EAAgBY,2BAC5B,OAAOxB,EAASjzC,EAAK,KAAM,OAAO,IAEpCgiC,+BAvnBW,SAunBoBmY,GAC7B,IAAMn6C,EAAM6zC,EAAgBY,2BAI5B,OAAOxB,EAASjzC,EAHD,CACbmc,UAAWg+B,GAEgB,QAAQ,IAIvCvqB,uBAhoBW,WAioBT,IAAM5vB,EAAM6zC,EAAgB8C,kBAC5B,OAAO1D,EAASjzC,EAAK,KAAM,OAAO,IAEpCu3B,0BApoBW,SAooBenU,GACxB,IAAMpjB,EAAM6zC,EAAgB8C,kBACtBjsC,EAAS,CACbolB,wBAAyB1M,EAAiByM,gBAE5C,OAAOojB,EAASjzC,EAAK0K,EAAQ,SAG/B4tB,gCA5oBW,WA6oBT,IAAMt4B,EAAM6zC,EAAgBqD,2BAC5B,OAAOjE,EAASjzC,EAAK,KAAM,QAI7B+vB,8BAlpBW,WAmpBT,IAAM/vB,EAAM6zC,EAAgB8B,4BAC5B,OAAO1C,EAASjzC,EAAK,KAAM,OAAO,IAGpC03B,iCAvpBW,SAupBsBtU,GAC/B,IAAMpjB,EAAM6zC,EAAgB+B,+BACtBlrC,EAAS,CACbulB,uBAAwB7M,EAAiB4M,uBACzCK,yBAA0BjN,EAAiBgN,0BAE7C,OAAO6iB,EAASjzC,EAAK0K,EAAQ,SAG/BktB,iCAhqBW,SAgqBsBxU,GAC/B,IAAMpjB,EAAM6zC,EAAgB+B,+BACtBlrC,EAAS,CACbulB,uBAAwB7M,EAAiBmN,oBACzCF,yBAA0BjN,EAAiBgN,0BAE7C,OAAO6iB,EAASjzC,EAAK0K,EAAQ,SAI/BgmB,+BA1qBW,WA2qBT,IAAM1wB,EAAM6zC,EAAgB2B,0BAC5B,OAAOvC,EAASjzC,EAAK,KAAM,OAAO,IAGpCg1B,yBA/qBW,SA+qBcolB,EAAUC,GACjC,IAAM7H,EAAY,CAChBxyC,IAAK6zC,EAAgB2B,0BACrBrC,iBAAiB,GAEbllC,EAAO,CACXmsC,WACA/oC,wBAAyBgpC,EACzBC,YAAa,CAAC,aAEhB,OAAO7I,EAAYkB,SAASH,EAAWvkC,IAGzC2jB,sCA5rBW,WA6rBT,IAAM5xB,EAAM6zC,EAAgByB,8BAC5B,OAAOrC,EAASjzC,EAAK,KAAM,OAAO,IAGpC+xB,gCAjsBW,WAksBT,IAAM/xB,EAAM6zC,EAAgB0B,wBAC5B,OAAOtC,EAASjzC,EAAK,KAAM,OAAO,IAKpCu6C,kBAxsBW,SAwsBOv6C,GAChB,OAAOizC,EAASjzC,EAAK,KAAM,OAAO,IAGpCkjC,8BA5sBW,WA6sBT,IAAMljC,EAAM6zC,EAAgBlwB,sBAC5B,OAAOsvB,EAASjzC,EAAK,KAAM,OAAO,IAGpC8jC,mBAjtBW,WAktBT,IACMrO,EAAW,CACfsO,YAAakP,EAASY,EAAgBK,8BAFpCxpC,EAEsE,OACxEs5B,UAAWiP,EAASY,EAAgBlwB,sBAAuB,KAAM,OAAO,IAE1E,OAAO5I,EAAG2a,IAAID,IAKhBtX,qBA5tBW,SA4tBUC,GACfo8B,eACFA,wBACEt7C,EAA0BoD,OAAO8G,yBACjClK,EAA0BoD,OAAO+G,YACjC,CAAEsB,IAAKyT,M,sIASjB3c,YAA8B,kBAAmBiM,GAEjD,a,mDC13BA,SAASmN,EAAuBtK,EAAMgJ,GAIpC,MAAO,CACLwC,WAAY,CACVhS,QAAS,CACPiS,YAAay+B,EAAG5gC,IAAI,0CAGxB5Z,MAAO,CACL+jB,QAASy2B,EAAG5gC,IAAI,iBAChB6gC,aAAcD,EAAG5gC,IAAI,sBACrB4iB,eAAgBge,EAAG5gC,IAAI,4BACvB8gC,kBAAmBF,EAAG5gC,IAAI,4BAE5B+qB,KAAM,CACJhJ,KAAM6e,EAAG5gC,IAAI,2BACb+gC,SAAUH,EAAG5gC,IAAI,wBACjBghC,QAASJ,EAAG5gC,IAAI,uBAChB,oBAAqB4gC,EAAG5gC,IAAI,gCAC5B,iCAAkC4gC,EAAG5gC,IAAI,gCACzCihC,QAASL,EAAG5gC,IAAI,uBAChBkhC,cAAeN,EAAG5gC,IAAI,6BACtBmhC,UAAWP,EAAG5gC,IAAI,2B,sCAKxBpY,YAA8B,yBAA0BoZ,GAExD,a,mDC/BA,SAASwqB,EAAkB90B,EAAMgJ,GAK/B,MAAO,CACLysB,wBAAyB,CACvBW,iBAAiB,EACjBM,aAAa,EACbF,cAAc,EACdkU,WAAYC,EAAKrhC,IAAI,qBACrBshC,YAAaD,EAAKrhC,IAAI,mBACtBuhC,UAAWF,EAAKrhC,IAAI,iBACpBwhC,wBAAyBH,EAAKrhC,IAAI,yCAClC0sB,gBAAiB,GACjB+U,4BAA6B,GAC7BnU,4BAA6B,GAG/Bd,0BAA2B,CACzBD,cAAe,CACbmV,eAAgBL,EAAKrhC,IAAI,+BACzB2hC,eAAgBN,EAAKrhC,IAAI,+BACzB4hC,kBAAmBP,EAAKrhC,IAAI,kCAC5B6hC,YAAaR,EAAKrhC,IAAI,4BACtButB,aAAc8T,EAAKrhC,IAAI,6BACvB8hC,qBAAsBT,EAAKrhC,IAAI,sCAEjCysB,gBAAiB,CACfvgC,EAAG,eACHC,EAAG,cACH8F,EAAG,uBACHC,EAAG,oBACHC,EAAG,oB,sCAMXvK,YAA8B,oBAAqB4jC,GAEnD,a,+DCxCA,SAAS0N,EAAyBxiC,EAAMgJ,GAGtC,IAAMqC,EAAOC,QAAQ,IAAIA,OACnB+/B,EAAUriC,EAAiBM,IAC3BgiC,EAAS,CACbC,SAAUF,EAAQ,2BAClBG,UAAWH,EAAQ,4BACnBI,UAAWJ,EAAQ,4BACnBK,QAASL,EAAQ,0BACjBM,MAAON,EAAQ,wBACftpC,QAASspC,EAAQ,0BACjBO,OAAQP,EAAQ,yBAChBQ,IAAKR,EAAQ,sBACbhzC,KAAMgzC,EAAQ,uBACdS,KAAMT,EAAQ,uBACdU,OAAQV,EAAQ,yBAChBW,IAAKX,EAAQ,sBACbY,eAAgBZ,EAAQ,iCACxBa,KAAMb,EAAQ,uBACdc,QAASd,EAAQ,0BACjBe,MAAOf,EAAQ,wBACfttB,OAAQ,CACNsuB,KAAMhB,EAAQ,mBACd12C,QAAS02C,EAAQ,sBACjBz2C,MAAOy2C,EAAQ,qBAEjBvxC,qBAAsBuxC,EAAQ,8BAC9BzxC,iBAAkByxC,EAAQ,0BAC1BiB,iBAAkBjB,EAAQ,2BAG5B,MAAO,CACLhhB,MAAO,GACPpH,KAAM,GACNuH,OAAQxhB,EAAiBqC,KAAKqf,gBAC9B6hB,WAAYlhC,EACRA,EAAKof,cAAc,QAAS4gB,EAAQ,gBACpCriC,EAAiBqC,KAAKqf,gBAC1B4f,QAAS,CACP,CAAEt1C,KAAMs2C,EAAOC,SAAUh2C,MAAO,OAChC,CAAEP,KAAMs2C,EAAOE,UAAWj2C,MAAO,aACjC,CAAEP,KAAMs2C,EAAOG,UAAWl2C,MAAO,aACjC,CAAEP,KAAMs2C,EAAOI,QAASn2C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/Bi3C,WAAY,CACV,CAAEx3C,KAAMs2C,EAAOC,SAAUh2C,MAAO,YAChC,CAAEP,KAAMs2C,EAAOE,UAAWj2C,MAAO,gCACjC,CAAEP,KAAMs2C,EAAOG,UAAWl2C,MAAO,uBACjC,CAAEP,KAAMs2C,EAAOI,QAASn2C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/Bk3C,eAAgB,CACd,CAAEz3C,KAAMs2C,EAAOI,QAASn2C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/Bm3C,mBAAoB,CAClB,CAAE13C,KAAMs2C,EAAOG,UAAWl2C,MAAO,aACjC,CAAEP,KAAMs2C,EAAOI,QAASn2C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/Bo3C,6BAA8B,CAC5B,CAAE33C,KAAMs2C,EAAOvpC,QAASxM,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOM,OAAQr2C,MAAO,UAC9B,CAAEP,KAAMs2C,EAAOO,IAAKt2C,MAAO,QAE7Bq3C,UAAW,CACT,CAAE53C,KAAMs2C,EAAOC,SAAUh2C,MAAO,OAChC,CAAEP,KAAMs2C,EAAOE,UAAWj2C,MAAO,aACjC,CAAEP,KAAMs2C,EAAOG,UAAWl2C,MAAO,aACjC,CAAEP,KAAMs2C,EAAOI,QAASn2C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/Bs3C,QAAS,CACP,CAAE73C,KAAMs2C,EAAOI,QAASn2C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/Bu3C,SAAU,CACR,CAAE93C,KAAMs2C,EAAOC,SAAUh2C,MAAO,YAChC,CAAEP,KAAMs2C,EAAOK,MAAOp2C,MAAO,UAE/B+wB,WAAY,CACV,CAAEtxB,KAAMs2C,EAAOjzC,KAAM9C,MAAO,QAC5B,CAAEP,KAAMs2C,EAAOU,IAAKz2C,MAAO,OAC3B,CAAEP,KAAMs2C,EAAOS,OAAQx2C,MAAO,UAC9B,CAAEP,KAAMs2C,EAAOQ,KAAMv2C,MAAO,SAE9Bw3C,eAAgB,CACd,CAAE/3C,KAAMs2C,EAAOW,eAAgB12C,MAAO,kBACtC,CAAEP,KAAMs2C,EAAOY,KAAM32C,MAAO,QAC5B,CAAEP,KAAMs2C,EAAOa,QAAS52C,MAAO,WAC/B,CAAEP,KAAMs2C,EAAOc,MAAO72C,MAAO,UAE/B6c,qBAAsB,CACpB,CAAEpd,KAAMs2C,EAAOxxC,qBAAsBvE,MAAO,sCAC5C,CAAEP,KAAMs2C,EAAO1xC,iBAAkBrE,MAAO,kCAE1CwoB,OAAQ,CACN,CAAE/oB,KAAMs2C,EAAOvtB,OAAOsuB,KAAM92C,MAAO,QACnC,CAAEP,KAAMs2C,EAAOvtB,OAAOnpB,MAAOW,MAAO,UAEtCie,OAAQ,CACNsY,QAAS,IACTkhB,KAAM,IACNC,OAAQ,KAEV39B,aAAc,IAAI49B,IAClB19B,YAAa,IAAI09B,IACjB5sB,sBAAuB,GACvBC,oBAAqB,GACrBqB,WAAY,I,sCAIhB1wB,YAA8B,2BAA4BsxC,GAE1D,a,0ECpHA,SAAStiC,EAA2BF,EAAMgJ,EAAkB7I,GAA4B,IAG9EgtC,EAA8BjL,6BAAlBkL,EAAkBlL,gCAEhCmL,EAA8B,GAAH,OAAMD,EAAN,8DAC3BE,EAAkC,GAAH,OAAMF,EAAN,mEAmDrC,MA7Ca,CAEX7rC,eAFW,SAEIgsC,EAAMpzC,EAFV,GAEmC,IAAjBmG,EAAiB,6BAFnC,IAE2B,OAC9B7D,EAAO+E,SAASgsC,cAAc,QAcpC,OAbA/wC,EAAK6D,OAASA,EACd7D,EAAKuY,OAASu4B,EAEdt/C,OAAOD,KAAKmM,GAAQ2T,QAAQ,SAAA4hB,GAC1B,IACQ+d,EADJx/C,OAAOy/C,UAAUC,eAAeC,KAAKzzC,EAAQu1B,MACzC+d,EAAcjsC,SAASgsC,cAAc,UAC/Bv4C,KAAO,SACnBw4C,EAAYz4C,KAAO06B,EACnB+d,EAAYl4C,MAAQ4E,EAAOu1B,GAE3BjzB,EAAKiF,YAAY+rC,MAGdhxC,GAGTwE,8BApBW,SAoBmBX,GAC5B,IAAM2hC,EAAY,CAChBW,iBAAiB,EACjBnzC,IAAK49C,GAEDlzC,EAAS,CACbmG,SACAutC,YA9BGzyC,wBAAsB+xC,EALH,iDAqCxB,OAAOjM,mBAAiBe,EAAW9nC,IAGrCwmB,kCAhCW,SAgCuBD,EAAUpgB,GAC1C,IAAM2hC,EAAY,CAChBW,iBAAiB,EACjBnzC,IAAK69C,GAEDnzC,EAAS,CACbmG,OAAQA,EACRogB,SAAUA,GAEZ,OAAOwgB,mBAAiBe,EAAW9nC,K,mEAOzCjJ,YAA8B,6BAA8BgP,GAE5D,a,mDChEA,SAAS7C,EAAsB2L,EAAkBy5B,GAG/C,IAAMyH,EAAKlhC,EACL8kC,EAA8BrL,EAAoB8C,kBACtD,CAEE/pC,EAAG0uC,EAAG5gC,IAAI,6BAEZ4gC,EAAG5gC,IAAI,0BAEHykC,EAAmCtL,EAAoB8C,kBAC3D,CAEE7pC,EAAGwuC,EAAG5gC,IAAI,gCAEZ4gC,EAAG5gC,IAAI,sCAGT,MAAO,CACLvH,QAAS,CACPkb,gBAAiBitB,EAAG5gC,IAAI,qBACxB6T,gBAAiB+sB,EAAG5gC,IAAI,oBACxB1K,iBAAkBsrC,EAAG5gC,IAAI,yBACzBxR,QAAS,CACPkG,MAAOksC,EAAG5gC,IAAI,iCACd7H,KAAMyoC,EAAG5gC,IAAI,0CAEftM,MAAO,CACLgB,MAAOksC,EAAG5gC,IAAI,+BACd7H,KAAMyoC,EAAG5gC,IAAI,wCAEfnN,aAAc+tC,EAAG5gC,IAAI,sCAEvB4hB,cAAe,CACbpzB,QAAS,CACP2J,KAAMyoC,EAAG5gC,IAAI,gDAEftM,MAAO,CACLyE,KAAMyoC,EAAG5gC,IAAI,0CAGjBsiB,eAAgB,CACd5uB,MAAO,CACLyE,KAAMyoC,EAAG5gC,IAAI,yCAGjBmmB,2BAA4B,CAC1BzyB,MAAO,CACLyE,KAAMyoC,EAAG5gC,IAAI,qDAGjBs0B,oBAAqB,CACnB9lC,QAAS,CACPkG,MAAOksC,EAAG5gC,IAAI,uCACd0kC,UAAW,YACXvsC,KAAMyoC,EAAG5gC,IAAI,sCAEf2kC,UAAW,CACTjwC,MAAOksC,EAAG5gC,IAAI,2BACd7H,KAAMyoC,EAAG5gC,IAAI,0CAEf+jB,aAAc6c,EAAG5gC,IAAI,sDACrB6jB,gBAAiB+c,EAAG5gC,IAAI,0DAE1BsT,eAAgB,CACd7a,QAAS,CACP/D,MAAOksC,EAAG5gC,IAAI,2BACd7H,KAAMyoC,EAAG5gC,IAAI,iDAEfwT,iBAAkB,CAChBrb,KAAMyoC,EAAG5gC,IAAI,+CACb2T,gBAAiBitB,EAAG5gC,IAAI,kCACxB6T,gBAAiB+sB,EAAG5gC,IAAI,yBAE1BuT,aAAc,CACZ7e,MAAOksC,EAAG5gC,IAAI,+CACd7H,KAAMyoC,EAAG5gC,IAAI,gDAGjB1W,SAAU,CACRsL,qBAAsBgsC,EAAG5gC,IAAI,8BAC7BnL,uBAAwB+rC,EAAG5gC,IAAI,oCAC/BnK,2BAA4B+qC,EAAG5gC,IAAI,uCACnC7K,iBAAkByrC,EAAG5gC,IAAI,gCACzB9K,iBAAkB0rC,EAAG5gC,IAAI,+BACzBxK,cAAeorC,EAAG5gC,IAAI,0BACtB/K,oBAAqB2rC,EAAG5gC,IAAI,mCAC5BhL,oBAAqB4rC,EAAG5gC,IAAI,kCAC5BzK,iBAAkBqrC,EAAG5gC,IAAI,8BAE3BrW,SAAU,CACRy6B,eAAgBwc,EAAG5gC,IAAI,0BACvBukB,gBAAiBqc,EAAG5gC,IAAI,kCACxBzD,qBAAsBqkC,EAAG5gC,IAAI,oDAC7B/D,qBAAsB2kC,EAAG5gC,IAAI,qDAC7BvC,wBAAyBmjC,EAAG5gC,IAAI,oCAChCpD,8BAA+B6nC,EAAiC/E,6BAElEh2C,YAAa,CACXuP,sBAAuB2nC,EAAG5gC,IAAI,iCAC9B9G,mBAAoB0nC,EAAG5gC,IAAI,8BAC3B3G,kBAAmBunC,EAAG5gC,IAAI,yCAC1BjH,sBAAuB6nC,EAAG5gC,IAAI,yCAEhCtG,eAAgB,CACdnI,gBAAiBqvC,EAAG5gC,IAAI,+BACxB5O,gBAAiBwvC,EAAG5gC,IAAI,sCACxBrG,uBAAwBinC,EAAG5gC,IAAI,mDAC/BzY,UAAWq5C,EAAG5gC,IAAI,0BAEpBnW,UAAW,CACTwP,kBAAmBunC,EAAG5gC,IAAI,qCAC1B+jB,aAAc6c,EAAG5gC,IAAI,6CACrB6jB,gBAAiB+c,EAAG5gC,IAAI,iDAE1B4iB,eAAgB,CACdmB,aAAc6c,EAAG5gC,IAAI,2CACrB6jB,gBAAiB+c,EAAG5gC,IAAI,8CACxBqjB,kBAAmBud,EAAG5gC,IAAI,mCAC1BojB,sBAJc,SAIQwhB,GACpB,OAAOhE,EAAG5gC,IAAI,8CAA+C4kC,IAE/D1hB,oBAAqB0d,EAAG5gC,IAAI,oCAC5BtM,MAAO,CACLmxC,YAAajE,EAAG5gC,IAAI,yCACpB8kC,aAAclE,EAAG5gC,IAAI,8CACrB+kC,WAAYnE,EAAG5gC,IAAI,8CAGvB/V,iBAAkB,CAChByU,YADgB,SACJC,GACV,OAAOiiC,EAAG5gC,IAAI,iBAAkB,CAAErB,cAEpCK,oBAAqBwlC,EAA4B9E,6BAEnDl2B,WAAY,CACVmO,iBAAkB,CAChBjkB,MAAO,CACL6mB,uBAAwBqmB,EAAG5gC,IAAI,0CAC/Bsa,oBAAqBsmB,EAAG5gC,IAAI,uCAC5B0a,sBAAuBkmB,EAAG5gC,IAAI,yCAC9B4X,kBAAmBgpB,EAAG5gC,IAAI,uCAG9BtI,gBAAiB,CACflJ,QAAS,CACP2J,KAAMyoC,EAAG5gC,IAAI,0CAEftM,MAAO,CACLyE,KAAMyoC,EAAG5gC,IAAI,2C,qDAOvBpY,YAA8B,wBAAyBmM,GAEvD,a,kDC/JA,SAASgN,EAA6BrK,EAAMgJ,GAI1C,MAAO,CACL4D,8BAA+B,CAC7B0hC,sBAAuBpE,EAAG5gC,IAAI,6CAC9BilC,sBAAuBrE,EAAG5gC,IAAI,6CAC9BklC,oBAAqBtE,EAAG5gC,IAAI,oCAC5BmlC,kBAAmBvE,EAAG5gC,IAAI,mCAC1BolC,eAAgBxE,EAAG5gC,IAAI,4BACvBqlC,uBAAwBzE,EAAG5gC,IAAI,sCAC/BslC,kCAAmC1E,EAAG5gC,IAAI,qCAC1CulC,4BAA6B3E,EAAG5gC,IAAI,mDACpCwlC,iBAAkB5E,EAAG5gC,IAAI,wCACzBylC,WAAY7E,EAAG5gC,IAAI,kCACnB0lC,0BAA2B9E,EAAG5gC,IAAI,iDAClC2lC,yBAA0B/E,EAAG5gC,IAAI,iDAEnCsqB,iBAAkB,CAAC,qBAAsB,cAAe,cACxD7D,UAAW,CACTj4B,QAAS,CACPkG,MAAOksC,EAAG5gC,IAAI,iCACd7H,KAAMyoC,EAAG5gC,IAAI,0CAEftM,MAAO,CACLgB,MAAOksC,EAAG5gC,IAAI,+BACd7H,KAAMyoC,EAAG5gC,IAAI,qDAGjBwD,+BAAgC,CAC9B,CACEkB,gBAAiB,qBACjBkhC,cAAehF,EAAG5gC,IAAI,gCACtB6lC,UAAWjF,EAAG5gC,IAAI,mCAClB8lC,eAAgBlF,EAAG5gC,IAAI,oCACvB+lC,sBAAuBnF,EAAG5gC,IAAI,mCAC9BiF,iBAAiB,EACjBlC,aAPF,WAQI,OAAO,IAGX,CACE2B,gBAAiB,cACjBkhC,cAAehF,EAAG5gC,IAAI,qCACtB6lC,UAAWjF,EAAG5gC,IAAI,4BAClBgmC,mBAAoBpF,EAAG5gC,IAAI,4BAC3B8lC,eAAgBlF,EAAG5gC,IAAI,oCACvB+lC,sBAAuBnF,EAAG5gC,IAAI,6BAEhC,CACE0E,gBAAiB,aACjBkhC,cAAehF,EAAG5gC,IAAI,oCACtB6lC,UAAWjF,EAAG5gC,IAAI,2BAClB8lC,eAAgB,GAChB7gC,iBAAiB,EACjB8gC,sBAAuBnF,EAAG5gC,IAAI,8B,sCAMtCpY,YAA8B,+BAAgCmZ,GAE9D,a,yEC9DA,SAASlK,EAA2BH,EAAMgJ,GAwBd,SAApBsZ,EAAoBitB,GACxB,IAAMnlB,EAAO,IAAI5c,KAAK+hC,GACfC,GAFyB,EAER,CAACplB,EAAKqlB,WAAYrlB,EAAKslB,eAFf,GAEnBC,EAFmB,KAKhC,OAFyBH,EAAO,GAAK,IAAMA,EAAOA,GAExB,KADEG,EAAU,GAAK,IAAMA,EAAUA,GACL,MAGpB,SAA9BC,EAA+BC,EAAO9sB,GAI1C,IAHA,IAAI+sB,EAAa,CAACD,GACdE,EAAY,IAAIviC,KAAK4U,EAAUG,cAAgBstB,GAAOrtB,UACtDE,EAAU,IAAIlV,KAAK4U,EAAUG,cAAgBQ,GAAKP,UAC7Ce,EAAIwsB,EAAY3tB,EAAU4tB,kBAAmBzsB,EAAIb,EAASa,GAAKnB,EAAU4tB,kBAChFF,EAAW5xB,KAAKoE,EAAkBiB,IAGpC,OADAusB,EAAW5xB,KAAK6E,GACT+sB,EArCT,IAAMzkC,EAAOC,QAAQ,IAAIA,OACnB4+B,EAAKlhC,EACLoZ,EAAY,CAChB4tB,kBAAmB,KACnBvtB,YAAa,KACbqB,qBAAsB,MACtBvB,cAAe,cACf0tB,kBAAmB,WACnBptB,wBAAyB,WACzBD,wBAAyB,WACzBD,kBAAmB,YAGfpiB,EAAwB,CAC5BC,UAAW,SACXC,OAAQ,SACRC,0BAA2B,0BAC3BC,mBAAoB,mBACpBC,kBAAmB,mBA2HrB,MArGa,CACX6iB,mBAAoB,CAClBtB,MAAO,WACPY,IAAK,WACLE,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAG3BG,aAAc,CACZC,SAAU6mB,EAAG5gC,IAAI,kBACjBga,MAAO4mB,EAAG5gC,IAAI,gBAGhBlJ,oBAAqB,CACnB,CAAE1Q,MAAOw6C,EAAG5gC,IAAI,sBAAuB/T,MAAO,QAC9C,CAAE7F,MAAOw6C,EAAG5gC,IAAI,gBAAiB/T,MAAO,SACxC,CAAE7F,MAAOw6C,EAAG5gC,IAAI,eAAgB/T,MAAO,SAGzC6sB,UAAWA,EACXE,kBAAmBA,EACnB/hB,sBAAuBA,EAEvBgP,qBAtBW,WAyBT,IAFA,IAAMD,EAAe,IAAI49B,IACrBgD,EAAQN,EAA4BxtB,EAAU6tB,kBAAmB7tB,EAAUS,yBACtEU,EAAI,EAAGA,EAAI2sB,EAAMntC,OAAQwgB,IAAK,CACrC,IAAIrB,EAAYguB,EAAM3sB,GAChB4sB,EAAgB9kC,EAAKoP,uBAAuB21B,kBAC1B,IAAI5iC,KACF4U,EAAUG,cAAgBL,GAC1B,CAAEmuB,UAAW,UAEvC/gC,EAAa4U,IAAIhC,EAAWiuB,GAI9B,OADA7gC,EAAa4U,IAAI9B,EAAUS,wBAAyBvT,EAAahG,IAAI8Y,EAAU6tB,oBACxE3gC,GAGTG,oBAvCW,SAuCS6gC,GAClB,IAAM9gC,EAAc,IAAI09B,IAExB19B,EAAY0U,IAAI,EAAGosB,EAAa,GAAGt7C,MACnC,IAAK,IAAIuuB,EAAI,EAAGA,EAAI,EAAGA,IACrB/T,EAAY0U,IAAIosB,EAAa/sB,GAAGhuB,MAAO+6C,EAAa/sB,GAAGvuB,MAEzD,OAAOwa,GAGT4Q,8BAjDW,SAiDmB9Q,EAjDnB,GAoDT,IAHmE,IAAzBihC,EAAyB,6BAjD1D,IAiDsD,GACzDjwB,EAAwB,GAC1BkwB,EAAe,IAAIpsB,IACdb,EAAI,EAAGA,EAAIgtB,EAAmBxtC,OAAQwgB,IAAK,CAClD,IAAIzB,EAAcyuB,EAAmBhtB,GACjCktB,EAAmBb,EAA4B9tB,EAAYK,MAAOL,EAAYiB,KAClF0tB,EAAiBC,MACjBD,EAAiB3iC,QAAQ,SAAAyhC,GAAI,OAAIiB,EAAalsB,IAAIirB,KAYpD,OARAK,EAA4BxtB,EAAU6tB,kBAAmB7tB,EAAUQ,yBAAyB9U,QAAQ,SAAAoU,GAC7FsuB,EAAaG,IAAIzuB,IACpB5B,EAAsBpC,KAAK,CACzBgE,UAAWA,EACXltB,KAAMsa,EAAahG,IAAI4Y,OAItB5B,GAGTD,4BAvEW,SAuEiB/Q,EAvEjB,GA0ET,IAHiE,IAAzBihC,EAAyB,6BAvExD,IAuEoD,GACvDhwB,EAAsB,GACxBiwB,EAAe,IAAIpsB,IACdb,EAAI,EAAGA,EAAIgtB,EAAmBxtC,OAAQwgB,IAAK,CAClD,IAAIzB,EAAcyuB,EAAmBhtB,GACjCktB,EAAmBb,EAA4B9tB,EAAYK,MAAOL,EAAYiB,KAClF0tB,EAAiBzuB,OAAO,EAAG,GAC3ByuB,EAAiB3iC,QAAQ,SAAAyhC,GAAI,OAAIiB,EAAalsB,IAAIirB,KAYpD,OARAK,EAA4B,WAAYxtB,EAAUS,yBAAyB/U,QAAQ,SAAAoU,GAC5EsuB,EAAaG,IAAIzuB,IACpB3B,EAAoBrC,KAAK,CACvBgE,UAAWA,EACXltB,KAAMsa,EAAahG,IAAI4Y,OAItB3B,GAGTY,oBA7FW,YA6FoB,IAElBuO,EAFO1hC,EAAW,6BA7FpB,IA6FgB,GAEzB,IAAW0hC,KAD2B,EAAd1hC,EAAK+U,OAAa/U,EAAOuS,EAE/CM,yCAAuCN,EAAsBmvB,M,sCAQrEx+B,YAA8B,6BAA8BiP,GAE5D,a,2MCpJA,SAASqI,EAA2BgC,EAAI02B,EAAauB,EAAqB7zC,EAA4Boa,EAAkBuB,GAAuB,IAGzIqmC,EAAgB,KAEdC,EAAiCpO,EAAoB8C,mBAApB,OAElC38B,8CAAmEI,EAAiBM,IACnF,kCAHiC,IAKlCV,2CAAgEI,EAAiBM,IAChF,kCANiC,IAQlCV,8CAAmEI,EAAiBM,IACnF,0CATiC,IAWlCV,8CAAmEI,EAAiBM,IACnF,6BAZiC,IAclCV,wCAA6DI,EAAiBM,IAC7E,kCAfiC,IAiBlCV,gDAAqEI,EAAiBM,IACrF,gDAlBiC,IAoBlCV,0CAA+DI,EAAiBM,IAC/E,qCArBiC,GAwBrCN,EAAiBM,IAAI,0BAGvB,MAAO,CACLu2B,YADK,WAEH,OAAOr1B,EAAG,SAACtc,EAAS4iD,GACdF,EACF1iD,EAAQ0iD,GAIV1P,EACG4B,QAAQ,CACPrzC,IAAK,GAAF,OAAKyyC,yCAAL,kBAEJrlC,KAAK,SAAA46B,GAEJvpC,EADA0iD,EAAgBnZ,KAGjB16B,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMlE+W,oCA7BK,WA8BH,OAAOv1B,EAAG,SAACtc,EAAS4iD,GAClB5P,EACG4B,QAAQ,CACPrzC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,oBAEJt5B,KAAK,SAAAmjC,GACJ9xC,EAAQ8xC,KAETjjC,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMlE0P,+BAnDK,SAmD0Bx8B,GAC7B,OAAOsO,EAAG,SAACtc,EAAS4iD,GAClB5P,EACGkB,SAAS,CACR3yC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,gCAEL,CACEj6B,aAEDW,KAAK,WACJ3O,MAED6O,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMlEl2B,oBA5EK,SA4EeoJ,GAClB,OAAOsO,EAAG,SAACtc,EAAS4iD,GAClB5P,EACGkB,SACC,CACE3yC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,wCAEL,CACEj6B,aAGHW,KAAK3O,GACL6O,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMlEsP,0BArGK,SAqGqBlB,EAAYrpC,EAAMmO,GAC1C,OAAOsO,EAAG,SAACtc,EAAS4iD,GAClB5P,EACGkB,SACC,CACE3yC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,+CAEL,CACEiB,aACArpC,OACAmO,aAGHW,KAAK,WACJ3O,MAED6O,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAGEogB,IAAcpgB,6CAChB1a,IAEA4iD,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAOpElgB,2BAvIK,SAuIsBH,EAAWzM,GACpC,OAAOsO,EAAG,SAACtc,EAAS4iD,GAClB,GAAK50C,EAAL,CAKA,IAAM+lC,EAAY,GAClB,OAAQt5B,GACN,KAAKC,2BACHq5B,EAAUxyC,IAAV,UAAmByyC,yCAAnB,qBAAsE/L,uBAAtE,gCACA,MACF,KAAKvtB,mCACHq5B,EAAUxyC,IAAV,UAAmByyC,yCAAnB,qBAAsE/L,uBAAtE,wCACA,MACF,QACE2a,EAAOloC,gDAGXs4B,EACGkB,SAASH,EAAW,CACnB/lC,aAEDW,KAAK,WACJ3O,MAED6O,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,YA9B5D8nB,EAAOloC,kDAoCbyxB,uBA9KK,WA+KH,OAAO7vB,EAAG,SAACtc,EAAS4iD,GAClB5P,EACG4B,QAAQ,CACPrzC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,qBAEJt5B,KAAK,SAAAqE,GACJhT,EAAQgT,KAETnE,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMlEmR,sBApMK,SAoMiBj+B,GACpB,OAAOsO,EAAG,SAACtc,EAAS4iD,GACb50C,EAKLglC,EACGkB,SACC,CACE3yC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,+BAEL,CACEj6B,aAGHW,KAAK,SAAAqE,GACJhT,EAAQgT,EAAS7N,iBAElB0J,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC5B31B,EACAxS,0BAEFkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,OAvB5D8nB,EAAOloC,kDA6Bb8zB,uBApOK,WAqOH,OAAOlyB,EAAG,SAACtc,EAAS4iD,GAClB5P,EACK4B,QACG,CACErzC,IAAK,GAAF,OAAKyyC,6BAAL,oDAEL,IAEHrlC,KAAK,SAAAqE,GACJhT,EAAQgT,KAETnE,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpE6T,uBA7PK,WA8PH,OAAOryB,EAAG,SAACtc,EAAS4iD,GAClB5P,EACK4B,QACG,CACErzC,IAAK,GAAF,OAAKyyC,4BAAL,oDAEL,IAEHrlC,KAAK,SAAAqE,GACJhT,EAAQgT,KAETnE,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpE+S,0BAtRK,WAuRH,OAAOvxB,EAAG,SAACtc,EAAS4iD,GAClB5P,EACKkB,SACG,CACE3yC,IAAK,GAAF,OAAKyyC,6BAAL,sDAEL,IAEHrlC,KAAK,SAAAqE,GACJhT,EAAQgT,KAETnE,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpEwW,0BA/SK,WAgTH,OAAOh1B,EAAG,SAACtc,EAAS4iD,GAClB5P,EACKkB,SACG,CACE3yC,IAAK,GAAF,OAAKyyC,4BAAL,sDAEL,IAEHrlC,KAAK,SAAAqE,GACJhT,EAAQgT,KAETnE,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpEwS,oBAxUK,SAwUesD,EAAa/wC,GAC/B,OAAOyc,EAAG,SAACtc,EAAS4iD,GAClB5P,EACKkB,SACG,CACE3yC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,6BAEL,CACE2I,cACAC,WAAYnwC,EAA2BgD,YAAYmI,WACnDhM,SAGL8O,KAAK,SAAAqE,GACJhT,EAAQgT,EAASu6B,qBAElB1+B,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpEuS,gBArWK,SAqWWuD,GACd,OAAOt0B,EAAG,SAACtc,EAAS4iD,GAClB5P,EACKkB,SACG,CACE3yC,IAAK,GAAF,OAAKyyC,yCAAL,qBAAwD/L,uBAAxD,gCAEL,CACE2I,YAAaA,EACbC,WAAYnwC,EAA2BgD,YAAYmI,aAGxD8C,KAAK,WACJ3O,MAED6O,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpE0S,oCAjYK,SAiY+BoD,EAAarD,GAC/C,OAAOjxB,EAAG,SAACtc,EAAS4iD,GAClB5P,EACKkB,SACG,CACE3yC,IAAK,GAAF,OAAKyyC,6BAAL,oDAEL,CACE7G,eAAgByD,EAChBrD,sBAGL5+B,KAAK,SAAC/E,GACL5J,EAAQ4J,KAETiF,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpEoV,oCA7ZK,SA6Z+BU,EAAarD,GAC/C,OAAOjxB,EAAG,SAACtc,EAAS4iD,GAClB5P,EACKkB,SACG,CACE3yC,IAAK,GAAF,OAAKyyC,4BAAL,oDAEL,CACE7G,eAAgByD,EAChBrD,sBAGL5+B,KAAK,SAAC/E,GACL5J,EAAQ4J,KAETiF,MAAM,SAAAqe,GACC4N,EAAYkY,EAAY6P,uBAC1B31B,EACAxS,0BAEJkoC,EAAO,CACL/iD,KAAMi7B,EACN1jB,QAASurC,EAA+BG,gBAAgBhoB,UAMpE4R,kBAzbK,SAyba/sB,GACZo8B,eAAeA,yBACjBA,wBACEr7C,EAA2BmD,OAAOC,kBAClCpD,EAA2BmD,OAAOE,uBAClC,CAAEmI,IAAKyT,M,6HAOjB3c,YAA8B,6BAA8BsX,GAC5D,a,gECxeA,SAASmsB,EAAanqB,EAAIxK,EAAMkhC,GAG9B,MAAO,CACLhL,kBAAmB,SAAC2I,EAAQ1J,GACpB8M,EAAY,CAChBxyC,IAAK,GAAF,OAAKyyC,2BAAL,qBAA0CrD,EAA1C,kBACH+D,iBAAiB,GAEbqO,EAAe,CAAE9b,kBACvB,OAAO+L,EAAYiC,UAAUlB,EAAWgP,IAG1Cxa,oBAAqB,SAACoI,EAAQ1J,GACtB8M,EAAY,CAChBxyC,IAAK,GAAF,OAAKyyC,2BAAL,qBAA0CrD,EAA1C,+CAAuF1J,GAC1FyN,iBAAiB,GAEnB,OAAO1B,EAAY4B,QAAQb,K,sCAKjC/wC,YAA8B,eAAgByjC,GAE9C,a,gBC3BA,SAASuc,EAAaC,GAClB,OAAOA,EAAI/hD,QAAQ,kBAAmB,SAASkiB,cAGnD,SAAS8/B,EAAoBD,GAEzB,OADWA,EAAIE,MAAM,KAAKX,MACdthD,QAAQ,QAAS,IAUjC,IAAMkiD,EAAqB,CAEvBC,qBAAsB,SAACC,GACnBA,EAAIxjD,OAAO8f,QAAQ0jC,IAGvBC,uBAAwB,SAACnjD,EAASojD,EAAYC,EAAYC,GACtD,OAAOtjD,EAAQH,OAAOujD,EAAY,IAC7BG,IAAI,CAAC,iBAAkB,SAAUC,GAC1BH,GACAA,EAAW3jD,OAAO8f,QAAQ,SAAA4hB,GACtB,IAAI16B,EAAOk8C,EAAaE,EAAoB1hB,IAC5CoiB,EAAGC,IAAI/8C,EAAM28C,EAAWjiB,MAG5BkiB,GACAA,EAAa5jD,OAAO8f,QAAQ,SAAA4hB,GACxB,IAAI16B,EAAOk8C,EAAaE,EAAoB1hB,IAC5CoiB,EAAGC,IAAI/8C,EAAsB48C,EAAaliB,GArBnDtgC,QADQ,qBACc,YA4BrCjB,EAAOC,QAAUkjD,G,iBC1CjBnjD,EAAOC,QAAU,wvJ,iBCAjBD,EAAOC,QAAU,s6F,iBCAjBD,EAAOC,QAAU,onD,iBCAjBD,EAAOC,QAAU,4rd,iBCAjBD,EAAOC,QAAU,2vF,iBCAjBD,EAAOC,QAAU,+/X,iBCAjBD,EAAOC,QAAU,suc,iBCAjBD,EAAOC,QAAU,gpJ,gBCAjBD,EAAOC,QAAU,uqE,iBCAjBD,EAAOC,QAAU,sjD,iBCAjBD,EAAOC,QAAU,m+G,iBCAjBD,EAAOC,QAAU,6vD,iBCAjBD,EAAOC,QAAU,88E,iBCAjBD,EAAOC,QAAU,0iD,iBCAjBD,EAAOC,QAAU,svB,iBCAjBD,EAAOC,QAAU,86E,iBCAjBD,EAAOC,QAAU,mnD,iBCAjBD,EAAOC,QAAU,gK,iBCAjBD,EAAOC,QAAU,okH,iBCAjBD,EAAOC,QAAU,quD,iBCAjBD,EAAOC,QAAU,+6E,iBCAjBD,EAAOC,QAAU,k6C,iBCAjBD,EAAOC,QAAU,msH,iBCAjBD,EAAOC,QAAU,4hD,iBCAjBD,EAAOC,QAAU,+iD,iBCAjBD,EAAOC,QAAU,8uD,gBCAjBD,EAAOC,QAAU,srD,iBCAjBD,EAAOC,QAAU,41F,iBCAjBD,EAAOC,QAAU,2oC,iBCAjBD,EAAOC,QAAU,k9C,6BCAjBD,EAAOC,QAAU4jD,qB,8BCAjB7jD,EAAOC,QAAU6jD,e,6BCAjB9jD,EAAOC,QAAU8jD,e,6BCAjB/jD,EAAOC,QAAUwzC,Q,8BCAjBzzC,EAAOC,QAAUE,UCCb6jD,EAA2B,GAG/B,SAASxkD,EAAoBykD,GAE5B,GAAGD,EAAyBC,GAC3B,OAAOD,EAAyBC,GAAUhkD,QAG3C,IAAID,EAASgkD,EAAyBC,GAAY,CAGjDhkD,QAAS,IAOV,OAHAikD,EAAoBD,GAAUjkD,EAAQA,EAAOC,QAAST,GAG/CQ,EAAOC,QCnBfT,EAAoBuoB,EAAI,SAAS/nB,GAChC,IAAImkD,EAASnkD,GAAUA,EAAOokD,WAC7B,WAAa,OAAOpkD,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAR,EAAoB4f,EAAE+kC,EAAQ,CAAEE,EAAGF,IAC5BA,GCLR3kD,EAAoB4f,EAAI,SAASnf,EAASqkD,GACzC,IAAI,IAAI/iB,KAAO+iB,EACX9kD,EAAoBC,EAAE6kD,EAAY/iB,KAAS/hC,EAAoBC,EAAEQ,EAASshC,IAC5EzhC,OAAOykD,eAAetkD,EAASshC,EAAK,CAAEijB,YAAY,EAAMrpC,IAAKmpC,EAAW/iB,MCJ3E/hC,EAAoBC,EAAI,SAASglD,EAAKC,GAAQ,OAAO5kD,OAAOy/C,UAAUC,eAAeC,KAAKgF,EAAKC,ICC/FllD,EAAoB02B,EAAI,SAASj2B,GACX,oBAAX0kD,QAA0BA,OAAOC,aAC1C9kD,OAAOykD,eAAetkD,EAAS0kD,OAAOC,YAAa,CAAEx9C,MAAO,WAE7DtH,OAAOykD,eAAetkD,EAAS,aAAc,CAAEmH,OAAO,K,4BCCjDy9C,EACAjkB,E,sCASe,SAAbkkB,IARe,IACbC,IAAW1xC,SAAS0N,eAAe,yBACzC8jC,EAA0CE,EAASC,aACjD,6CAEFpkB,EAAsBmkB,EAASC,aAAa,6BA8DhD,OArEMH,GAA0C,EAC1CjkB,EAAsB,GA2D1BkkB,IACO,CACLA,aACAG,cAtBoB,SAAAvnC,GACpB,IAAMo2B,EAAY,CAChBxyC,IAAK,GAAF,OAAKs/B,EAAL,yDACH6T,iBAAiB,GAEnB1B,kBAAgBe,GAAWplC,KACzB,SAAAw2C,GACgBnyC,EAAamyC,EAAnB31C,KACJwD,WAAUoyC,YACZznC,GAAS,GAETA,GAAS,IAGb,SAAA8pB,GACEh0B,QAAQ4xC,IAAI5d,MAQhB6d,iCAjDuC,WACvC,OAAOR,GAiDPS,wBA9C8B,SAACC,EAAWC,GAC1C,IAAM1R,EAAY,CAChBxyC,IAAK,GAAF,OAAKs/B,EAAL,oDACH6T,iBAAiB,GAEnB1B,mBAAiBe,GAAWplC,KAC1B,SAAAw2C,GACgBO,EAAQP,EAAd31C,KA5BQ,aA6BZk2C,aAAA,EAAAA,EAAKC,gBACHH,GAAkC,mBAAdA,GACtBA,GAAU,IAIhB,SAAA7lD,GACM8lD,GAAkC,mBAAdA,GACtBA,EAAU9lD,Q,UChCpBmB,OAAO4yC,OAAOr1B,8BAAgCunC,GAG9CvC,0BAAqBpQ,UACrBoQ,0BAAqBpQ,UACrBoQ,0BAAqBpQ,UACrBoQ,0BAAqBpQ,UACrBoQ,0BAAqBpQ,SAErB,IAAM4S,EAAkB5S,OAClBvxC,GAAY6hD,4BAAuBnjD,IAAS,2BAA4BylD,GAG9EzlD,YAAgB,WACdA,cAAkB,gBAAiB,CAAC4C,SAA4BtB,EAAUoF,S","file":"accountSettings.bundle.min.js","sourcesContent":["var map = {\n\t\"./twoStepVerificationComponent.js\": 6032\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2583;","var map = {\n\t\"./displayNameConstants.js\": 1566,\n\t\"./itemTradeTwoStepResources.js\": 1510,\n\t\"./resources.js\": 2482,\n\t\"./robuxSpendTwoStepResources.js\": 4661,\n\t\"./settingsEventStreamConstants.js\": 5944,\n\t\"./twoStepVerificationConstants.js\": 7849\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9731;","var map = {\n\t\"./accountSettingsModalChangeBirthdateController.js\": 9054,\n\t\"./accountSettingsModalEmailSetController.js\": 6678,\n\t\"./accountSettingsModalEmailVerifyController.js\": 696,\n\t\"./accountSettingsModalKoreanIdVerificationController.js\": 5501,\n\t\"./accountSettingsModalPasswordSetController.js\": 5038,\n\t\"./accountSettingsModalPhoneSetController.js\": 530,\n\t\"./accountSettingsModalPinCreateController.js\": 6922,\n\t\"./accountSettingsModalPinUnlockController.js\": 6879,\n\t\"./accountSettingsModalSocialDisconnectController.js\": 7426,\n\t\"./accountSettingsModalTwoStepController.js\": 4828,\n\t\"./accountSettingsModalUsernameUpdateController.js\": 1802,\n\t\"./accountsContentController.js\": 9014,\n\t\"./accountsController.js\": 4579,\n\t\"./changeDisplayNameController.js\": 2142,\n\t\"./displayNameController.js\": 6980,\n\t\"./enableAuthenticatorModalController.js\": 1273,\n\t\"./enableTwoStepVerificationModalController.js\": 5707,\n\t\"./personalController.js\": 8136,\n\t\"./recoveryCodesModalController.js\": 8619,\n\t\"./robuxSpendVerifyChallengeModalController.js\": 8161,\n\t\"./twoStepVerificationController.js\": 3441\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 9073;","var map = {\n\t\"./accountPinStatusDirective.js\": 6490,\n\t\"./accountsStatePropertiesDirective.js\": 7034,\n\t\"./accountsValidUsernameDirective.js\": 4693,\n\t\"./userAccountBaseDirective.js\": 9722\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1765;","var map = {\n\t\"./accountsService.js\": 5294,\n\t\"./commonConstantsService.js\": 7500,\n\t\"./displayNameLayout.js\": 9873,\n\t\"./formFieldsMappingService.js\": 906,\n\t\"./koreaIdVerificationService.js\": 2138,\n\t\"./modalConstantsService.js\": 5809,\n\t\"./notificationConstantsService.js\": 816,\n\t\"./screentimeConstantsService.js\": 5210,\n\t\"./twoStepVerificationService.js\": 7181,\n\t\"./usersService.js\": 8514\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2625;","var map = {\n\t\"./components/templates/twoStepVerification.html\": 7549,\n\t\"./controllers/templates/accountBilling.html\": 7986,\n\t\"./controllers/templates/accountFastTrack.html\": 1762,\n\t\"./controllers/templates/accountInfo.html\": 4919,\n\t\"./controllers/templates/accountNotifications.html\": 1467,\n\t\"./controllers/templates/accountParentalControls.html\": 1924,\n\t\"./controllers/templates/accountPrivacy.html\": 5997,\n\t\"./controllers/templates/accountSecurity.html\": 1195,\n\t\"./controllers/templates/accountSocial.html\": 592,\n\t\"./controllers/templates/changeDisplayNameModal.html\": 7466,\n\t\"./controllers/templates/modalAuthenticatorEnable.html\": 6431,\n\t\"./controllers/templates/modalBirthdateAgeDown.html\": 9445,\n\t\"./controllers/templates/modalEmailSet.html\": 9011,\n\t\"./controllers/templates/modalEmailVerify.html\": 8878,\n\t\"./controllers/templates/modalKoreanIdVerification.html\": 4140,\n\t\"./controllers/templates/modalPasswordSet.html\": 3008,\n\t\"./controllers/templates/modalPhoneDelete.html\": 9854,\n\t\"./controllers/templates/modalPhoneSet.html\": 7265,\n\t\"./controllers/templates/modalPhoneUpdate.html\": 9494,\n\t\"./controllers/templates/modalPhoneVerify.html\": 5713,\n\t\"./controllers/templates/modalPinCreate.html\": 2016,\n\t\"./controllers/templates/modalPinUnlock.html\": 8790,\n\t\"./controllers/templates/modalRecoveryCodes.html\": 3164,\n\t\"./controllers/templates/modalRobuxSpendVerifyChallenge.html\": 3712,\n\t\"./controllers/templates/modalSocialDisconnect.html\": 4349,\n\t\"./controllers/templates/modalTwoStepDisable.html\": 6161,\n\t\"./controllers/templates/modalTwoStepEnable.html\": 916,\n\t\"./controllers/templates/modalUsernameUpdate.html\": 2360,\n\t\"./directives/templates/accountPinStatus.html\": 9399,\n\t\"./directives/templates/userAccountBase.html\": 9804\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 360;","import { Lang } from 'Roblox';\nimport angular from 'angular';\n\nconst dependencies = [\n  'robloxApp',\n  'ui.router',\n  'cursorPagination',\n  'premium',\n  'systemFeedback',\n  'verticalMenu',\n  'modal',\n  'phoneValidation'\n];\nconst accounts = angular.module('accounts', dependencies).config([\n  '$stateProvider',\n  '$urlRouterProvider',\n  '$locationProvider',\n  'accountConstantsResources',\n  'robuxSpendTwoStepResources',\n  'itemTradeTwoStepResources',\n  'languageResourceProvider',\n  (\n    $stateProvider,\n    $urlRouterProvider,\n    $locationProvider,\n    accountConstantsResources,\n    robuxSpendTwoStepResources,\n    itemTradeTwoStepResources,\n    languageResourceProvider\n  ) => {\n    // validate url\n    const loc = window.location.href;\n    if (loc.indexOf('#') != -1 && loc.indexOf('#!') == -1) {\n      window.location.href = loc.replace('#', '#!');\n    }\n    // false mean hashband mode\n    $locationProvider.html5Mode(false);\n    $locationProvider.hashPrefix('!');\n    $urlRouterProvider.otherwise('/info');\n    $stateProvider\n      .state('info', {\n        url: '/info',\n        label: 'Account Info',\n        templateUrl: accountConstantsResources.templates.accountInfo\n      })\n      .state('social', {\n        url: '/social',\n        label: 'Social',\n        templateUrl: accountConstantsResources.templates.accountSocial\n      })\n      .state('security', {\n        url: '/security',\n        label: 'Security',\n        templateUrl: accountConstantsResources.templates.accountSecurity\n      })\n      .state('privacy', {\n        url: '/privacy',\n        label: 'Privacy',\n        templateUrl: accountConstantsResources.templates.accountPrivacy\n      })\n      .state('parental-controls', {\n        url: '/parental-controls',\n        label: 'Parental Controls',\n        templateUrl: accountConstantsResources.templates.accountParentalControls\n      })\n      .state(accountConstantsResources.accountTabsNames.parentalControlsCheckStatus, {\n        url: '/parental-controls/check-status',\n        label: 'Parental Controls',\n        templateUrl: accountConstantsResources.templates.accountParentalControls\n      })\n      .state('billing', {\n        url: '/billing',\n        label: 'Billing',\n        templateUrl: accountConstantsResources.templates.accountBilling\n      })\n      .state('notifications', {\n        url: '/notifications',\n        label: 'Notifications',\n        templateUrl: accountConstantsResources.templates.accountNotifications\n      })\n      .state('fast-track', {\n        url: '/fast-track',\n        label: 'Fast Track',\n        templateUrl: accountConstantsResources.templates.accountFastTrack\n      });\n\n    const accountSettingsResources = Lang.AccountSettingsResources;\n    // Temporary until strings are added\n    const translationConstants = {\n      'Label.Notifications.GroupJoinRequestAccepted':\n        (accountSettingsResources &&\n          accountSettingsResources['Label.Notifications.GroupJoinRequestAccepted']) ||\n        'Someone accepts my group join request',\n        'Response.Dialog.EnableTwoStepVerification': (accountSettingsResources && accountSettingsResources['Response.Dialog.EnableTwoStepVerification']) || 'Turn on 2 Step Verification',\n        'Response.Dialog.EnableTwoStepVerificationMessage': (accountSettingsResources && accountSettingsResources['Response.Dialog.EnableTwoStepVerificationMessage']) || 'To turn on 2-Step Verification, please verify account password.',\n        'Message.RobuxSpendTwoStepVerificationMessage': (accountSettingsResources && accountSettingsResources['Message.RobuxSpendTwoStepVerificationMessage']) || 'Verification is required to continue with your virtual transaction.',\n        'Message.ItemTradeTwoStepVerificationMessage': (accountSettingsResources && accountSettingsResources['Message.ItemTradeTwoStepVerificationMessage']) || 'Verification is required to continue with your trade.',\n      'Label.USDCurrency': (accountSettingsResources && accountSettingsResources['Label.USDCurrency']) || 'USD',\n      'Label.ChatFilteringLevel': (accountSettingsResources && accountSettingsResources['Label.ChatFilteringLevel']) || 'Chat Filtering Level',\n      'Label.ToolTip.ChatFilteringLevel': (accountSettingsResources && accountSettingsResources['Label.ToolTip.ChatFilteringLevel']) ||\n        'All text chat is scanned for language that is inappropriate within the Roblox community. This setting controls what you can send and receive while chatting with others on Roblox.',\n      'Label.DropDown.MaximumFiltering': (accountSettingsResources && accountSettingsResources['Label.DropDown.MaximumFiltering']) || 'Maximum Filtering',\n      'Label.DropDown.13PlusFiltering': (accountSettingsResources && accountSettingsResources['Label.DropDown.13PlusFiltering']) || '13+ Filtering'\n    };\n\n    languageResourceProvider.setLanguageKeysFromFile(Lang.AccountSettingsResources);\n    languageResourceProvider.setLanguageKeysFromFile(translationConstants);\n    languageResourceProvider.setLanguageKeysFromFile(Lang.ControlsResources);\n    languageResourceProvider.setLanguageKeysFromFile(Lang['Authentication.Social']);\n    languageResourceProvider.setLanguageKeysFromFile(Lang.PremiumResources);\n    languageResourceProvider.setLanguageKeysFromFile(Lang.DisplayNameResources);\n    languageResourceProvider.setLanguageKeysFromFile(Lang.TwoStepVerificationResources);\n    languageResourceProvider.setLanguageKeysFromFile(Lang.IdVerificationResources);\n  }\n]);\n\nexport default accounts;\n","import accountSettingsModule from '../accountSettingsModule';\n\nconst twoStepVerificationComponent = {\n  templateUrl: 'two-step-verification',\n  bindings: {\n    pinLocked: '<',\n    unlockPin: '<',\n    emailStatus: '<',\n    email: '<'\n  },\n  controller: 'twoStepVerificationController'\n};\n\naccountSettingsModule.component('twoStepVerification', twoStepVerificationComponent);\nexport default twoStepVerificationComponent;\n","import accountSettingsModule from '../accountSettingsModule';\n\nconst displayNameConstants = {\n  changeDisplayNameModal: {\n    templateUrl: 'change-display-name-modal',\n    controllerName: 'changeDisplayNameController'\n  },\n  eventstreamParams: {\n    changeDisplayNameEvent: 'changeDisplayname',\n    successCtx: 'success',\n    cancelCtx: 'cancel'\n  }\n};\n\naccountSettingsModule.constant('displayNameConstants', displayNameConstants);\n\nexport default displayNameConstants;\n","import accountSettingsModule from '../accountSettingsModule';\n\nconst itemTradeTwoStepResources = {\n  urls: {\n    support: '/info/account-safety'\n  },\n\n  actionTypes: {\n    itemTrade: 'ItemTrade'\n  },\n\n  codeLength: 6,\n\n  events: {\n    frictionEventType: 'buttonClick',\n    twoStepVerificationCtx: '2svItemTrade',\n    resendCodeBtn: 'resendCode',\n    verifyCodeBtn: 'verifyCode',\n    verifySecurityPageBtn: 'verifySecurityPage',\n    verificationWarningSecurityPageTriggered: 'verificationWarningSecurityPageTriggered',\n    codeInputModalTriggered: 'codeInputModalTriggered',\n    successfulVerification: 'successfulVerification',\n    invalidCodeInput: 'invalidCodeInput'\n  }\n};\n\naccountSettingsModule.constant('itemTradeTwoStepResources', itemTradeTwoStepResources);\nexport default itemTradeTwoStepResources;\n","import accountSettingsModule from '../accountSettingsModule';\n\nconst accountConstantsResources = {\n  controllers: {\n    modal: {\n      changeBirthdate: 'accountSettingsModalChangeBirthdateController',\n      emailSet: 'accountSettingsModalEmailSetController',\n      emailVerify: 'accountSettingsModalEmailVerifyController',\n      enableAuthenticator: 'enableAuthenticatorModalController',\n      enableTwoStepVerification: 'enableTwoStepVerificationModalController',\n      passwordSet: 'accountSettingsModalPasswordSetController',\n      phoneSet: 'accountSettingsModalPhoneSetController',\n      twoStepSet: 'accountSettingsModalTwoStepController',\n      pinCreate: 'accountSettingsModalPinCreateController',\n      pinUnlock: 'accountSettingsModalPinUnlockController',\n      recoveryCodes: 'recoveryCodesModalController',\n      usernameUpdate: 'accountSettingsModalUsernameUpdateController',\n      socialDisconnect: 'accountSettingsModalSocialDisconnectController',\n      robuxSpendVerifyChallenge: 'robuxSpendVerifyChallengeModalController',\n      koreanIDVerification: 'accountSettingsModalKoreanIdVerificationController'\n    }\n  },\n  templates: {\n    accountInfo: 'account-info',\n    accountBilling: 'account-billing',\n    accountNotifications: 'account-notifications',\n    accountParentalControls: 'account-parental-controls',\n    accountPrivacy: 'account-privacy',\n    accountSecurity: 'account-security',\n    accountSocial: 'account-social',\n    accountPinStatus: 'account-pin-status',\n    accountFastTrack: 'account-fasttrack',\n    modal: {\n      changeBirthdate: 'modal-birthdate-age-down',\n      emailSet: 'modal-email-set',\n      emailVerify: 'modal-email-verify',\n      enableAuthenticator: 'modal-authenticator-enable',\n      enableTwoStepVerification: 'modal-two-step-enable',\n      passwordSet: 'modal-password-set',\n      phoneSet: 'modal-phone-set',\n      twoStepSet: 'modal-two-step-disable',\n      pinCreate: 'modal-pin-create',\n      pinUnlock: 'modal-pin-unlock',\n      recoveryCodes: 'modal-recovery-codes',\n      usernameUpdate: 'modal-username-update',\n      socialDisconnect: 'modal-social-disconnect',\n      robuxSpendVerifyChallenge: 'modal-robux-spend-verify-challenge',\n      koreanIDVerification: 'modal-korean-id-verification'\n    },\n    userAccountBase: 'user-account-base'\n  },\n  paymentType: {\n    paypal: 'paypal'\n  },\n  paymentsPerPage: 10,\n  maxPaymentsLoaded: 25,\n  paymentProviderTypeToClass: {\n    Visa: 'visa',\n    Discover: 'discover',\n    MasterCard: 'masterCard',\n    AmericanExpress: 'americanExpress',\n    Paypal: 'paypal',\n    Credit: 'robloxCredit'\n  },\n  updateThemeEventContext: 'select',\n  defaultThemeType: 'Classic',\n  updateThemeEvent: 'Roblox.ThemeUpdate',\n  themeTypes: {\n    classic: 'Classic',\n    light: 'Light'\n  },\n  birthdayPicker: {\n    year: {\n      id: 'YearDropdown',\n      class: 'year',\n      name: 'birthYear',\n      type: 'year'\n    },\n    month: {\n      id: 'MonthDropdown',\n      class: 'month',\n      name: 'birthMonth',\n      type: 'month'\n    },\n    day: {\n      id: 'DayDropdown',\n      class: 'day',\n      name: 'birthDay',\n      type: 'day'\n    }\n  },\n  defaultDateParts: {\n    0: {\n      options: [\n        {\n          label: 'Month',\n          value: null\n        }\n      ],\n      id: 'MonthDropdown',\n      class: 'month',\n      name: 'birthdayMonth',\n      type: 'month'\n    },\n    1: {\n      options: [\n        {\n          label: 'Day',\n          value: null\n        }\n      ],\n      id: 'DayDropdown',\n      class: 'day',\n      name: 'birthdayDay',\n      type: 'day'\n    },\n    2: {\n      options: [\n        {\n          label: 'Year',\n          value: null\n        }\n      ],\n      id: 'YearDropdown',\n      class: 'year',\n      name: 'birthdayYear',\n      type: 'year'\n    }\n  },\n  accountSettingsPolicyDefault: {\n    displayTwoStepVerification: true,\n    displayAccountPIN: true,\n    displayPrivacyModeToolTip: true,\n    displayEmailAddress: true,\n    displayWeChat: false,\n    displayQQ: false,\n    displayConnectedAccounts: true,\n    displayNotificationStream: true,\n    displayDesktopPush: true,\n    displayMobilePush: true,\n    displayPhoneNumber: true,\n    displaySocialMedia: true,\n    displayDescription: true,\n    displayAccountRestrictions: true,\n    displayWhoCanMessageMe: true,\n    displayWhoCanInviteMeToVIPServers: true,\n    displayWhoCanTradeWithMe: true,\n    displayTradeQualityFilter: true,\n    displayCountryList: true,\n    displayLanguageList: true,\n    displayChangeUsername: true,\n    displayChangePassword: true,\n    displayBillingTab: true,\n    displayIdentityVerification: false,\n    displayVoiceChatSettings: false,\n    displayVisibilitySettings: true,\n    displayPasswordRow: true,\n    displayChatFilteringSetting: false\n  },\n  accountSettingsPolicyLeastPrivileged: {\n    displayTwoStepVerification: false,\n    displayAccountPIN: false,\n    displayPrivacyModeToolTip: false,\n    displayEmailAddress: false,\n    displayWeChat: false,\n    displayQQ: false,\n    displayConnectedAccounts: false,\n    displayNotificationStream: false,\n    displayDesktopPush: false,\n    displayMobilePush: false,\n    displayPhoneNumber: false,\n    displaySocialMedia: false,\n    displayDescription: false,\n    displayAccountRestrictions: false,\n    displayWhoCanMessageMe: false,\n    displayWhoCanInviteMeToVIPServers: false,\n    displayWhoCanTradeWithMe: false,\n    displayTradeQualityFilter: false,\n    displayCountryList: false,\n    displayLanguageList: false,\n    displayChangeUsername: false,\n    displayChangePassword: false,\n    displayBillingTab: false,\n    displayIdentityVerification: false,\n    displayVoiceChatSettings: false,\n    displayVisibilitySettings: false,\n    displayPasswordRow: false,\n    displayChatFilteringSetting: false\n  },\n  accountSettingsPolicyNotificationDestinations: {\n    NotificationStream: 'displayNotificationStream',\n    DesktopPush: 'displayDesktopPush',\n    MobilePush: 'displayMobilePush'\n  },\n  counters: {\n    accountSettingPolicyPrefix: 'WebsiteAccountSettingsPolicy_',\n    success: 'Success',\n    failure: 'Failure'\n  },\n  socialAuth: {\n    providers: {\n      facebook: 'facebook',\n      weChat: 'wechat',\n      qq: 'qq'\n    }\n  },\n  emailStatus: {\n    none: 'none',\n    unverified: 'unverified',\n    verified: 'verified'\n  },\n  socialErrorCode: {\n    11: 'Message.Error.InvalidFacebookUrl ',\n    12: 'Message.Error.InvalidTwitterUrl',\n    13: 'Message.Error.InvalidYouTubeUrl',\n    14: 'Message.Error.InvalidTwitchUrl'\n  },\n  events: {\n    formInteractionEventType: 'formInteraction',\n    settingsCtx: 'settings',\n    addEmailBtn: 'addEmail',\n    verifyEmailBtn: 'verifyEmail',\n    addPhoneBtn: 'addPhone',\n    changeEmailBtn: 'changeEmail',\n    changePhoneBtn: 'changePhone',\n    toggle2SVOn: 'turn2SVon',\n    toggle2SVOff: 'turn2SVoff'\n  },\n  accountTabsDefault: [\n    {\n      name: 'info',\n      label:'Account Info'\n    },\n    {\n      name: 'security',\n      label: 'Security',\n    },\n    {\n      name: 'privacy',\n      label: 'Privacy'\n    }\n  ],\n  accountTabsNames: {\n    parentalControlsCheckStatus: \"parental-controls-check-status\",\n  },\n  visibilityTypes: {\n    invalid: 0,\n    visible: 1,\n    invisible: 2\n  },\n  spendNotificationSettingTypes: {\n    allNotifications: 'NotificationsEveryAmountSpent',\n    notificationsOff: 'NotificationsOff',\n    defaultNotifications: 'NotificationsOnlyOnThresholdPassed'\n  }\n};\n\naccountSettingsModule.constant('accountConstantsResources', accountConstantsResources);\n\nexport default accountConstantsResources;\n","import accountSettingsModule from '../accountSettingsModule';\n\nconst robuxSpendTwoStepResources = {\n  urls: {\n    support: '/info/account-safety'\n  },\n\n  actionTypes: {\n    robuxSpend: 'RobuxSpend'\n  },\n\n  codeLength: 6,\n\n  events: {\n    frictionEventType: 'buttonClick',\n    twoStepVerificationCtx: '2svRobuxSpend',\n    resendCodeBtn: 'resendCode',\n    verifyCodeBtn: 'verifyCode',\n    verifySecurityPageBtn: 'verifySecurityPage',\n    verificationWarningSecurityPageTriggered: 'verificationWarningSecurityPageTriggered',\n    codeInputModalTriggered: 'codeInputModalTriggered',\n    successfulVerification: 'successfulVerification',\n    invalidCodeInput: 'invalidCodeInput'\n  }\n};\n\naccountSettingsModule.constant('robuxSpendTwoStepResources', robuxSpendTwoStepResources);\nexport default robuxSpendTwoStepResources;\n","const SETTINGS = 'Settings';\nconst BUTTON_CLICK = 'buttonClick';\n\nconst accountSettingsOrigin = 'AccountSettings';\n\nconst events = {\n  verifyAgeButtonClicked: {\n    name: 'verifyAgeButtonClicked',\n    type: BUTTON_CLICK,\n    context: SETTINGS,\n    params: {\n      btn: 'verifyMyAge'\n    }\n  }\n};\n\nexport { events, accountSettingsOrigin };\n","import { urlService } from 'core-utilities';\n\nconst errorCodes = {\n  alreadyEnabled: 'alreadyEnabled',\n  featureDisabled: 'featureDisabled',\n  invalidCode: 'invalidCode',\n  invalidEmail: 'invalidEmail',\n  invalidPassword: 'invalidPassword',\n  invalidMediaType: 'invalidMediaType',\n  invalidSetupToken: 'invalidSetupToken',\n  pinLocked: 'pinLocked',\n  tooManyRequests: 'tooManyRequests'\n};\n\nexport default {\n  digitRegex: /^[0-9]$/,\n  mediaTypes: {\n    Email: 'Email',\n    Authenticator: 'Authenticator',\n    RecoveryCode: 'RecoveryCode'\n  },\n  urls: {\n    // TODO: Page explaining external authenticator apps\n    authenticatorHelp: urlService.getAbsoluteUrl('/info/2sv')\n  },\n  errorCodes: {\n    internal: errorCodes,\n    api: {\n      3: errorCodes.invalidEmail,\n      4: errorCodes.invalidPassword,\n      5: errorCodes.tooManyRequests,\n      6: errorCodes.pinLocked,\n      7: errorCodes.featureDisabled,\n      10: errorCodes.invalidCode,\n      11: errorCodes.alreadyEnabled,\n      12: errorCodes.invalidSetupToken\n    }\n  }\n};\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalChangeBirthdateController(\n  $scope,\n  $uibModalInstance,\n  modalData\n) {\n  'ngInject';\n\n  $scope.layout = {\n    password: '',\n    errorMessage: '',\n    debounce: false\n  };\n\n  $scope.canSubmit = () => {\n    return $scope.layout.password && !$scope.layout.errorMessage && !$scope.layout.debounce;\n  };\n\n  $scope.clearErrorMessage = () => {\n    $scope.layout.errorMessage = '';\n  };\n\n  $scope.dismiss = () => {\n    $uibModalInstance.dismiss();\n  };\n\n  $scope.submit = form => {\n    if ($scope.layout.debounce) {\n      return;\n    }\n\n    if (form.$valid) {\n      form.$setPristine();\n\n      $scope.clearErrorMessage();\n      $scope.layout.debounce = true;\n\n      modalData.updateBirthdate($scope.layout.password).then(() => {\n        $uibModalInstance.close(true);\n      })\n      .catch(error => {\n        $scope.layout.errorMessage = modalData.getBirthdateErrorMessageFromCode(error);\n        $scope.layout.debounce = false;\n      });\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalChangeBirthdateController',\n  accountSettingsModalChangeBirthdateController\n);\nexport default accountSettingsModalChangeBirthdateController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalEmailSetController(\n  $scope,\n  $uibModalInstance,\n  accountsService,\n  regexService,\n  modalData,\n  modalConstantsService\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.userInfo = {};\n  $scope.emailSetSuccess = false;\n  $scope.regexData = {};\n  regexService.getEmailRegex().then(function(data) {\n    if (data) {\n      $scope.regexData.email = data.Regex;\n    }\n  });\n  // if user email is verified, require password, otherwise bypass it.\n  $scope.showPasswordField = modalData.isEmailVerified && modalData.doesPasswordExist;\n  $scope.modalConstants = modalConstantsService;\n\n  $scope.title = function() {\n    if ($scope.emailRequired) {\n      return modalConstantsService.emailSet.emailRequiredMessage;\n    }\n\n    if ($scope.emailSetSuccess) {\n      return modalConstantsService.emailSet.emailSetSuccessMessage;\n    }\n\n    return $scope.changeEmail\n      ? $scope.over13\n        ? modalConstantsService.emailSet.changeEmailO13Label\n        : modalConstantsService.emailSet.changeEmailU13Label\n      : $scope.over13\n      ? modalConstantsService.emailSet.addEmailO13Label\n      : modalConstantsService.emailSet.addEmailU13Label;\n  };\n\n  $scope.toggleEmailRequired = function(enabled) {\n    $scope.emailRequired = enabled;\n  };\n\n  $scope.submitButtonText = function() {\n    return $scope.changeEmail\n      ? modalConstantsService.emailSet.changeEmailLabel\n      : modalConstantsService.emailSet.addEmailLabel;\n  };\n\n  $scope.emailErrorMessage = function(form) {\n    if (form['userInfo.emailAddress'].$error.required) {\n      return null;\n    }\n    if (form['userInfo.emailAddress'].$invalid) {\n      return modalConstantsService.emailSet.invalidEmailAddressMessage;\n    }\n    if (form.$pristine && $scope.error) {\n      return $scope.error;\n    }\n    return null;\n  };\n\n  $scope.submit = function(form) {\n    form.$setPristine();\n    $scope.error = '';\n\n    $scope.isProcessing = true;\n\n    accountsService\n      .beginAccountAddEmailAddress($scope.userInfo)\n      .then(\n        function() {\n          $scope.emailSetSuccess = true;\n        },\n        function(error) {\n          $scope.error = accountsService.getEmailErrorMessageFromCode(error);\n        }\n      )\n      .finally(function() {\n        $scope.isProcessing = false;\n      });\n  };\n\n  $scope.dismiss = function() {\n    if ($scope.passwordSet) {\n      $uibModalInstance.close(true);\n    } else {\n      $uibModalInstance.dismiss();\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalEmailSetController',\n  accountSettingsModalEmailSetController\n);\n\nexport default accountSettingsModalEmailSetController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalEmailVerifyController($scope, accountsService, modalData) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.verificationEmailSent = false;\n  $scope.verificationEmailError = false;\n\n  $scope.beginAccountVerifyEmailAddress = function() {\n    accountsService.beginAccountVerifyEmailAddress().then(\n      function() {\n        $scope.verificationEmailSent = true;\n      },\n      function(error) {\n        $scope.verificationEmailError = true;\n        $scope.error = accountsService.getEmailErrorMessageFromCode(error);\n      }\n    );\n  };\n\n  $scope.sendVerificationEmail = function() {\n    $scope.verifiedEmailRequired = false;\n    $scope.beginAccountVerifyEmailAddress();\n  };\n\n  function init() {\n    if (!$scope.verifiedEmailRequired) {\n      $scope.beginAccountVerifyEmailAddress();\n    }\n  }\n\n  init();\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalEmailVerifyController',\n  accountSettingsModalEmailVerifyController\n);\n\nexport default accountSettingsModalEmailVerifyController;\n","import angular from 'angular';\nimport { localStorageService } from 'core-roblox-utilities';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalKoreanIdVerificationController (\n  $scope,\n  $log,\n  modalService,\n  modalData,\n  koreaIdVerificationService,\n  screentimeConstantsService,\n  modalConstantsService\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  \n  $scope.verificationOptions = screentimeConstantsService.verificationOptions;\n\n  $scope.verificationHandler = function(method) {\n    const { MDL_TOKEN, METHOD, PARENTAL_RESTRICTED_HOURS, PARENTAL_TIME_ZONE, UPDATED_TIME_ZONE } = screentimeConstantsService.localStorageConstants;\n    localStorageService.setLocalStorage(PARENTAL_RESTRICTED_HOURS, angular.toJson($scope.parentalRestrictedHours));\n    localStorageService.setLocalStorage(PARENTAL_TIME_ZONE, $scope.parentalTimezone);\n    localStorageService.setLocalStorage(UPDATED_TIME_ZONE, $scope.updatedTimezone);\n\n    koreaIdVerificationService.beginStartKoreaIdVerification(method).then(\n      response => {\n        const { url, parameters } = response.data;\n        const mdlTkn = method === 'phone' ? parameters.mdl_tkn : parameters.mdlTkn;\n        localStorageService.setLocalStorage(MDL_TOKEN, mdlTkn);\n        localStorageService.setLocalStorage(METHOD, method);\n\n        // KCB can only accept request as a Form POST\n        const hiddenForm = koreaIdVerificationService.formPostHelper(url, parameters);\n        document.body.appendChild(hiddenForm);\n        hiddenForm.submit();\n      },\n      error => {\n        console.debug(\"Error starting korea id verification from identity verification service\", angular.toJson(error));\n        modalService.open({\n          titleText: modalConstantsService.default.error.title,\n          bodyText: modalConstantsService.default.error.body\n        });\n      }\n    );\n  }\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalKoreanIdVerificationController',\n  accountSettingsModalKoreanIdVerificationController\n);\n\nexport default accountSettingsModalKoreanIdVerificationController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalPasswordSetController(\n  $scope,\n  $uibModalInstance,\n  accountsService,\n  modalData,\n  modalConstantsService\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.passwordInfo = {};\n  $scope.passwordSetSuccess = false;\n\n  $scope.passwordSetSuccessTitle = modalConstantsService.passwordSet.changePasswordSuccess;\n  $scope.doesPasswordExist = modalData.doesPasswordExist && $scope.changePassword;\n\n  if ($scope.changePassword) {\n    $scope.title = modalConstantsService.passwordSet.changePasswordMessage;\n  } else {\n    $scope.title = modalConstantsService.passwordSet.addPasswordMessage;\n  }\n\n  $scope.passwordErrorMessage = function(form) {\n    if (\n      form['passwordInfo.newPassword'].$error.required ||\n      form['passwordInfo.confirmPassword'].$error.required\n    ) {\n      return null;\n    }\n    if (form['passwordInfo.confirmPassword'].$error.matchField) {\n      return modalConstantsService.passwordSet.matchErrorMessage;\n    }\n    if (form.$pristine && $scope.error) {\n      return $scope.error;\n    }\n    return null;\n  };\n\n  $scope.submit = function(form) {\n    form.$setPristine();\n    $scope.error = '';\n    if (!$scope.doesPasswordExist) {\n      $scope.passwordInfo.oldPassword = 'placeholder';\n    }\n\n    accountsService.beginAccountChangePassword($scope.passwordInfo).then(\n      function() {\n        $scope.title = modalConstantsService.default.success.title;\n        $scope.passwordSetSuccess = true;\n      },\n      function(error) {\n        let errorCode = error && error.errors && error.errors.length > 0 && error.errors[0].code;\n        if (!errorCode) {\n          errorCode = 0;\n        }\n        switch (errorCode) {\n          case 2:\n            $scope.error = modalConstantsService.passwordChange.tooManyRequests;\n            break;\n          case 7:\n            $scope.error = modalConstantsService.passwordChange.invalidPassword;\n            break;\n          case 8:\n            $scope.error = modalConstantsService.passwordChange.invalidCurrentPassword;\n            break;\n          case 9:\n            $scope.error = modalConstantsService.passwordChange.pinLocked;\n            break;\n          default:\n            $scope.error = modalConstantsService.default.error.body;\n        }\n      }\n    );\n  };\n\n  $scope.dismiss = function() {\n    if ($scope.passwordSetSuccess) {\n      $uibModalInstance.close(true);\n    } else {\n      $uibModalInstance.dismiss();\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalPasswordSetController',\n  accountSettingsModalPasswordSetController\n);\n\nexport default accountSettingsModalPasswordSetController;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalPhoneSetController(\n  $scope,\n  $log,\n  $uibModalInstance,\n  accountsService,\n  numericCodeService,\n  urlService,\n  phoneService,\n  phoneConstants,\n  modalConstantsService\n) {\n  'ngInject';\n\n  $scope.phoneInfo = {};\n  $scope.doesPasswordExist = $scope.accountContent.userInfo.data.HasValidPasswordSet;\n\n  $scope.layout = {\n    showEditModal: true,\n    isUpdatePhoneBusy: false,\n    isVerifyPhoneBusy: false\n  };\n\n  $scope.getPhonePrefix = function() {\n    if (!$scope.phoneInfo.phonePrefix) {\n      return '';\n    }\n\n    return phoneConstants.phonePrefixCharacter + $scope.phoneInfo.phonePrefix.prefix;\n  };\n\n  $scope.clearDeletePhoneError = function() {\n    $scope.layout.deletePhoneError = null;\n  };\n\n  $scope.clearUpdatePhoneError = function() {\n    $scope.layout.updatePhoneError = null;\n  };\n\n  $scope.clearCodeError = function() {\n    $scope.layout.codeError = null;\n  };\n\n  $scope.clearPhone = function() {\n    $scope.phoneInfo.phone = null;\n  };\n\n  $scope.updatePhone = function() {\n    $scope.layout.isUpdatePhoneBusy = true;\n    $scope.clearUpdatePhoneError();\n    if (!$scope.doesPasswordExist) {\n      $scope.phoneInfo.password = 'placeholder';\n    }\n    const updatedPhoneInfo = {\n      countryCode: $scope.phoneInfo.phonePrefix.code,\n      prefix: $scope.phoneInfo.phonePrefix.prefix,\n      phone: $scope.phoneInfo.phone,\n      password: $scope.phoneInfo.password\n    };\n\n    accountsService\n      .beginAccountUpdatePhone(updatedPhoneInfo)\n      .then(\n        function() {\n          $scope.layout.showEditModal = false;\n          $scope.layout.showVerifyModal = true;\n          $scope.layout.focusOnCodeInput = true;\n        },\n        function(error) {\n          $scope.layout.updatePhoneError = accountsService.getPhoneErrorMessageFromCode(error);\n        }\n      )\n      .finally(function() {\n        $scope.layout.isUpdatePhoneBusy = false;\n      });\n  };\n\n  $scope.initiateDeletePhone = function() {\n    $scope.layout.showEditModal = false;\n    $scope.layout.showDeleteModal = true;\n  };\n\n  $scope.deletePhone = function() {\n    $scope.layout.isDeletePhoneBusy = true;\n    $scope.clearDeletePhoneError();\n    const deleteInfo = {\n      password: $scope.phoneInfo.password\n    };\n\n    accountsService\n      .beginAccountDeletePhone(deleteInfo)\n      .then(\n        function() {\n          const successData = {\n            message: modalConstantsService.phoneSet.deleteSuccessMessage\n          };\n          $uibModalInstance.close(successData);\n        },\n        function(error) {\n          $scope.layout.deletePhoneError = accountsService.getPhoneErrorMessageFromCode(error);\n        }\n      )\n      .finally(function() {\n        $scope.layout.isDeletePhoneBusy = false;\n      });\n  };\n\n  $scope.submitCode = function() {\n    $scope.layout.isVerifyPhoneBusy = true;\n    $scope.clearCodeError();\n\n    if (numericCodeService.checkCode($scope.phoneInfo.code, $scope.phoneModalData.codeLength)) {\n      const codeInfo = {\n        code: $scope.phoneInfo.code\n      };\n\n      accountsService\n        .beginAccountVerifyPhone(codeInfo)\n        .then(\n          function success() {\n            const successData = {\n              message: modalConstantsService.phoneSet.updateSuccessMessage\n            };\n            $uibModalInstance.close(successData);\n          },\n          function(error) {\n            $scope.layout.codeError = accountsService.getPhoneErrorMessageFromCode(error);\n          }\n        )\n        .finally(function() {\n          $scope.layout.isVerifyPhoneBusy = false;\n        });\n    } else {\n      $scope.layout.isVerifyPhoneBusy = false;\n      $scope.layout.codeError = `Code must be ${$scope.phoneModalData.codeLength} digits`;\n    }\n  };\n\n  $scope.resendCode = function() {\n    $scope.layout.isVerifyPhoneBusy = true;\n    $scope.clearCodeError();\n\n    accountsService\n      .beginAccountResendPhoneCode()\n      .then(\n        function success(result) {\n          if (!result.isValid) {\n            $scope.layout.codeError = result.data;\n          }\n        },\n        function(error) {\n          $scope.layout.codeError = modalConstantsService.phoneSet.getMessageFromResendCodeError(error);\n        }\n      )\n      .finally(function() {\n        $scope.layout.isVerifyPhoneBusy = false;\n      });\n  };\n\n  $scope.selectPhonePrefix = function() {\n    // Find the selected phone prefix looking at BOTH country code and prefix\n    $scope.phoneInfo.phonePrefix = _.find($scope.accountInfoSettings.phonePrefixes, function(\n      phonePrefix\n    ) {\n      return (\n        phonePrefix.prefix === $scope.phoneModalData.prefix &&\n        phonePrefix.code === $scope.phoneModalData.countryCode\n      );\n    });\n\n    // Set to first selection as default\n    if (!$scope.phoneInfo.phonePrefix) {\n      $scope.phoneInfo.phonePrefix = $scope.accountInfoSettings.phonePrefixes[0];\n    }\n  };\n\n  $scope.init = function() {\n    if ($scope.phoneModalData.maskedNumber) {\n      const lastDigits = $scope.phoneModalData.maskedNumber\n        ? $scope.phoneModalData.maskedNumber.match(/\\d+$/)\n        : null;\n      $scope.phoneModalData.lastDigits = lastDigits ? lastDigits[0] : null;\n    }\n\n    if ($scope.accountInfoSettings.phonePrefixes) {\n      $scope.selectPhonePrefix();\n    } else {\n      phoneService.getPhonePrefixes($scope.accountContent.userInfo.data.ApiProxyDomain).then(\n        function success(data) {\n          $scope.accountInfoSettings.phonePrefixes = data;\n\n          if (!$scope.accountInfoSettings.phonePrefixes) {\n            $scope.layout.countryError = modalConstantsService.phoneSet.countryListErrorMessage;\n            return;\n          }\n\n          $scope.selectPhonePrefix();\n        },\n        function() {\n          $scope.layout.countryError = modalConstantsService.phoneSet.countryListErrorMessage;\n        }\n      );\n    }\n  };\n\n  $scope.init();\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalPhoneSetController',\n  accountSettingsModalPhoneSetController\n);\n\nexport default accountSettingsModalPhoneSetController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalPinCreateController(\n  $scope,\n  $uibModalInstance,\n  accountsService,\n  modalData,\n  modalConstantsService\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.pinInfo = {};\n  $scope.pinCreateSuccess = false;\n\n  $scope.pinErrorMessage = function(form) {\n    if (\n      form.newPin.$error.required ||\n      form.newPin.$error.minlength ||\n      form.newPinConfirm.$error.required ||\n      form.newPinConfirm.$error.minlength\n    ) {\n      return null;\n    }\n    if (form.$dirty && form.newPinConfirm.$error.matchField) {\n      return modalConstantsService.pinCreate.matchErrorMessage;\n    }\n    if (form.$pristine && $scope.error) {\n      return $scope.error;\n    }\n    return null;\n  };\n\n  $scope.submit = function(form) {\n    if (form.$valid) {\n      form.$setPristine();\n      $scope.error = '';\n      accountsService.beginCreateAccountPinSetting($scope.pinInfo.newPin).then(\n        function() {\n          $scope.pinCreateSuccess = true;\n        },\n        function(error) {\n          $scope.error = accountsService.getPinErrorMessageFromCode(error);\n        }\n      );\n    }\n  };\n\n  $scope.dismiss = function() {\n    if ($scope.pinCreated) {\n      $uibModalInstance.close(true);\n    } else {\n      $uibModalInstance.dismiss();\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalPinCreateController',\n  accountSettingsModalPinCreateController\n);\n\nexport default accountSettingsModalPinCreateController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalPinUnlockController(\n  $scope,\n  $log,\n  $uibModalInstance,\n  accountsService,\n  modalData\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.pinInfo = {};\n\n  $scope.pinErrorMessage = function(form) {\n    if (form.$pristine && $scope.error) {\n      return $scope.error;\n    }\n    return null;\n  };\n\n  $scope.submit = function(form) {\n    if (form.$valid) {\n      form.$setPristine();\n      $scope.error = '';\n      accountsService.beginUnlockAccountPinSetting($scope.pinInfo.pin).then(\n        function(result) {\n          $uibModalInstance.close(result);\n        },\n        function(error) {\n          $scope.error = accountsService.getPinErrorMessageFromCode(error);\n        }\n      );\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalPinUnlockController',\n  accountSettingsModalPinUnlockController\n);\n\nexport default accountSettingsModalPinUnlockController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalSocialDisconnectController(\n  $scope,\n  $uibModalInstance,\n  accountsService,\n  modalData,\n  modalConstantsService\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.data = {};\n  $scope.layout = {\n    isProcessing: false,\n    error: ''\n  };\n\n  $scope.getTitle = function() {\n    return modalConstantsService.socialDisconnect.unlinkTitle($scope.provider);\n  };\n\n  $scope.getPasswordErrorMessage = function(form) {\n    if (form.$pristine && $scope.layout.error) {\n      return $scope.layout.error;\n    }\n    return null;\n  };\n\n  $scope.hasPasswordError = function() {\n    return $scope.layout.error !== '';\n  };\n\n  $scope.clearPasswordError = function() {\n    $scope.layout.error = '';\n  };\n\n  $scope.submit = function(form) {\n    form.$setPristine();\n    $scope.clearPasswordError();\n\n    $scope.layout.isProcessing = true;\n\n    accountsService\n      .beginUpdateSocialDisconnect($scope.provider, $scope.data.password)\n      .then(\n        function() {\n          $uibModalInstance.close(true);\n        },\n        function(error) {\n          $scope.layout.error = modalConstantsService.socialDisconnect.getMessageFromError(error);\n        }\n      )\n      .finally(function() {\n        $scope.layout.isProcessing = false;\n      });\n  };\n\n  $scope.dismiss = function() {\n    $uibModalInstance.dismiss();\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalSocialDisconnectController',\n  accountSettingsModalSocialDisconnectController\n);\n\nexport default accountSettingsModalSocialDisconnectController;\n","import accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\n\nfunction accountSettingsModalTwoStepController(\n  $scope,\n  $uibModalInstance,\n  modalData,\n  twoStepVerificationService\n) {\n  'ngInject';\n\n  (function setTwoStepDisablingWarning() {\n    $scope.disableWarning = 'Response.Dialog.TwoStepDisableWarning';\n\n    if (modalData.enabledMediaTypes.length > 1) {\n      if (modalData.mediaType === twoStepVerificationConstants.mediaTypes.Email) {\n        $scope.disableWarning = 'Response.Dialog.TwoStepDisableWarningEmail';\n      } else if (modalData.mediaType === twoStepVerificationConstants.mediaTypes.Authenticator) {\n        $scope.disableWarning = 'Response.Dialog.TwoStepDisableWarningAuthenticator';\n      }\n    }\n  })();\n\n  $scope.layout = {\n    password: '',\n    errorMessage: '',\n    disableTwoStepWarningMessage: $scope.disableWarning,\n    debounce: false\n  };\n\n  $scope.canSubmit = () => {\n    return $scope.layout.password && !$scope.layout.errorMessage && !$scope.layout.debounce;\n  };\n\n  $scope.clearErrorMessage = () => {\n    $scope.layout.errorMessage = '';\n  };\n\n  $scope.dismiss = () => {\n    $uibModalInstance.dismiss();\n  };\n\n  $scope.submit = form => {\n    if ($scope.layout.debounce) {\n      return;\n    }\n\n    if (form.$valid) {\n      form.$setPristine();\n\n      $scope.clearErrorMessage();\n      $scope.layout.debounce = true;\n\n      twoStepVerificationService\n        .disableTwoStepVerification(modalData.mediaType, $scope.layout.password)\n        .then(() => {\n          $uibModalInstance.close(true);\n        })\n        .catch(error => {\n          $scope.layout.errorMessage = error.message;\n          $scope.layout.debounce = false;\n        });\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalTwoStepController',\n  accountSettingsModalTwoStepController\n);\nexport default accountSettingsModalTwoStepController;\n","import angular from 'angular';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountSettingsModalUsernameUpdateController(\n  $scope,\n  $uibModalInstance,\n  accountsService,\n  modalData,\n  modalConstantsService,\n  languageResource\n) {\n  'ngInject';\n\n  angular.extend($scope, modalData);\n  $scope.user = {};\n  $scope.usernameUpdateSuccess = false;\n  $scope.doesPasswordExist = modalData.doesPasswordExist;\n  $scope.isFreeUsernameChangeAllowed = modalData.isFreeUsernameChangeAllowed;\n  $scope.usernameErrorMessage = function(form) {\n    if (form.$pristine && $scope.error) {\n      return $scope.error;\n    }\n    return null;\n  };\n\n  $scope.getChangePriceText = function() {\n    if ($scope.isFreeUsernameChangeAllowed) {\n      return languageResource.get('Description.Dialog.ChangeUsernameForFree');\n    }\n\n    return languageResource.get('Description.Dialog.ChangeUsernamePageText', {\n      robuxIcon: '<span class=icon-robux-16x16></span>',\n      price: '1000'\n    });\n  };\n\n  $scope.changeUsernameV2 = function() {\n    accountsService.beginAccountChangeUsernameV2($scope.user).then(\n      function(result) {\n        $scope.usernameUpdateSuccess = true;\n      },\n      function(error) {\n        let errorMsg = modalConstantsService.default.error.body;\n        if (error && error.errors && error.errors[0] && error.errors[0].message) {\n          errorMsg = error.errors[0].message;\n        }\n        $scope.error = errorMsg;\n      }\n    );\n  };\n\n  $scope.submit = function(form) {\n    form.$setPristine();\n    $scope.error = '';\n    if (!$scope.doesPasswordExist) {\n      $scope.user.password = 'placeholder';\n    }\n\n    $scope.changeUsernameV2();\n  };\n\n  $scope.dismiss = function() {\n    if ($scope.usernameUpdateSuccess) {\n      $uibModalInstance.close(true);\n    } else {\n      $uibModalInstance.dismiss();\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'accountSettingsModalUsernameUpdateController',\n  accountSettingsModalUsernameUpdateController\n);\n\nexport default accountSettingsModalUsernameUpdateController;\n","import { localStorageService } from 'core-roblox-utilities';\nimport {\n  Intl,\n  PushNotificationRegistrar,\n  PushNotificationRegistrationUI,\n  PushNotificationEventPublishers,\n  NotificationSettingsAuthority,\n  BootstrapWidgets,\n  FormEvents,\n  IdentityVerificationService\n} from 'Roblox';\nimport accountSettingsModule from '../accountSettingsModule';\nimport { events, accountSettingsOrigin } from '../constants/settingsEventStreamConstants';\n\nfunction accountsContentController(\n  $scope,\n  $window,\n  $log,\n  $filter,\n  accountsService,\n  $timeout,\n  $interval,\n  $document,\n  $location,\n  $state,\n  $uibModal,\n  modalService,\n  notificationConstantsService,\n  modalConstantsService,\n  screentimeConstantsService,\n  koreaIdVerificationService,\n  accountConstantsResources,\n  commonConstantsService,\n  languageResource,\n  systemFeedbackService,\n  $q,\n  premiumService,\n  eventTrackerService\n) {\n  'ngInject';\n\n  const customText = 'Custom';\n  const defaultText = 'Default';\n  const offText = 'Off';\n  const allUsersText = 'AllUsers';\n  const friendsText = 'Friends';\n  const noOneText = 'NoOne';\n  const childText = 'Child';\n  let initialModalsLoaded = false;\n  const intl = Intl && new Intl();\n\n  const socialNetworkErrorMessage = commonConstantsService.validation.invalid.socialMedia;\n\n  const _desktopPushRegistration = (function () {\n    let isEnabledCachedResult = false;\n    let isEnabledLookupStarted = false;\n    let isEnabledLookupFinished = false;\n\n    const startIsEnabledLookup = function (callback) {\n      isEnabledLookupFinished = false;\n      isEnabledCachedResult = false;\n      isEnabledLookupStarted = true;\n      if (PushNotificationRegistrar) {\n        PushNotificationRegistrar.isPushEnabled(function (isEnabled) {\n          isEnabledLookupStarted = false;\n          isEnabledLookupFinished = true;\n          isEnabledCachedResult = isEnabled;\n          $timeout(function () {});\n          callback(true);\n        });\n      }\n    };\n\n    const clearIsEnabledCache = function () {\n      isEnabledLookupFinished = false;\n      isEnabledCachedResult = false;\n    };\n\n    const isAvailable = function () {\n      return (\n        PushNotificationRegistrar &&\n        PushNotificationRegistrar.isPushSupported() &&\n        PushNotificationRegistrationUI\n      );\n    };\n\n    const isEnabled = function (callback) {\n      if (!isAvailable()) {\n        return false;\n      }\n\n      if (isEnabledLookupFinished) {\n        return isEnabledCachedResult;\n      }\n      if (!isEnabledLookupStarted) {\n        startIsEnabledLookup(callback);\n      }\n      return false;\n    };\n\n    const enable = function (callback) {\n      if (!isAvailable()) {\n        return;\n      }\n      PushNotificationRegistrationUI.enable(function () {\n        PushNotificationRegistrar.getEventPublisher().Publish(\n          PushNotificationEventPublishers.RegistrationEventTypes.settingsPageEnabled\n        );\n        clearIsEnabledCache();\n        callback();\n      });\n    };\n\n    const disable = function (callback) {\n      if (!isAvailable()) {\n        return;\n      }\n      PushNotificationRegistrationUI.disable(function () {\n        PushNotificationRegistrar.getEventPublisher().Publish(\n          PushNotificationEventPublishers.RegistrationEventTypes.settingsPageDisabled\n        );\n        clearIsEnabledCache();\n        callback();\n      });\n    };\n\n    const isToggleable = function () {\n      return true;\n    };\n\n    return {\n      isAvailable,\n      isEnabled,\n      enable,\n      disable,\n      isToggleable\n    };\n  })();\n\n  const _mobilePushRegistration = (function () {\n    let isEnabledCachedResult = false;\n    let isEnabledLookupStarted = false;\n    let isEnabledLookupFinished = false;\n\n    const startIsEnabledLookup = function (callback) {\n      isEnabledLookupFinished = false;\n      isEnabledCachedResult = false;\n      isEnabledLookupStarted = true;\n      NotificationSettingsAuthority.isPushEnabled(function (isEnabled) {\n        isEnabledLookupStarted = false;\n        isEnabledLookupFinished = true;\n        isEnabledCachedResult = isEnabled;\n        $timeout(function () {});\n        callback(true);\n      });\n    };\n\n    const clearIsEnabledCache = function () {\n      isEnabledLookupFinished = false;\n      isEnabledCachedResult = false;\n    };\n\n    const isEnabled = function (callback) {\n      if (isEnabledLookupFinished) {\n        return isEnabledCachedResult;\n      }\n      if (!isEnabledLookupStarted) {\n        startIsEnabledLookup(callback);\n      }\n      return false;\n    };\n\n    const isAvailable = function () {\n      return true;\n    };\n\n    const isToggleable = function () {\n      return NotificationSettingsAuthority.canToggleMobilePushNotifications();\n    };\n\n    const enable = function (callback) {\n      $document.triggerHandler('Roblox.Settings.PushEnabledOnDevice');\n      isEnabledCachedResult = true;\n    };\n\n    const disable = function (callback) {\n      NotificationSettingsAuthority.deregisterCurrentDevice(function () {\n        clearIsEnabledCache();\n        callback(true);\n      });\n    };\n\n    return {\n      isAvailable,\n      isToggleable,\n      enable,\n      disable,\n      isEnabled\n    };\n  })();\n\n  function displayInitialModals() {\n    if (initialModalsLoaded) {\n      return;\n    }\n    initialModalsLoaded = true;\n\n    const search = $location.search();\n    if (search.changepassword) {\n      $scope.setPassword();\n    } else if (search.confirmemail) {\n      const message =\n        modalConstants.emailVerify[\n          search.confirmemail + modalConstants.emailVerify.messageSuffix\n        ] || modalConstants.emailVerify.unspecifiedMessage;\n      const action =\n        modalConstants.emailVerify[search.confirmemail + modalConstants.emailVerify.actionSuffix] ||\n        '';\n      $scope.confirmEmail(message, action);\n    }\n  }\n\n  // Limit here is for testing, user will most likely be hit by floodchecker before hitting this limit\n  const retryPinUnlockLimit = 100;\n  const _notificationSourceTypeMapping = notificationConstantsService.notificationSourceTypeMapping;\n  const _receiverDestinationTypeMapping =\n    notificationConstantsService.receiverDestinationTypeMapping;\n\n  _receiverDestinationTypeMapping.forEach(function (item) {\n    if (item.destinationType === 'DesktopPush') {\n      item.getUnavailableReason = function () {\n        const chromeMessage = `Google Chrome versions ${$scope.desktopPushSettings.minimumChromeVersion} and above`;\n        const firefoxMessage = $scope.desktopPushSettings.enabledOnFirefox\n          ? ', and Firefox versions 46 and above'\n          : '';\n        return `Desktop Push is currently only supported on ${chromeMessage}${firefoxMessage}.`;\n      };\n      item.areSourcesShown = true;\n      item.availabilityCheck = _desktopPushRegistration.isAvailable;\n      item.customEnablement = _desktopPushRegistration.enable;\n      item.customDisablement = _desktopPushRegistration.disable;\n      item.customEnabledCheck = _desktopPushRegistration.isEnabled;\n      item.isToggleable = _desktopPushRegistration.isToggleable;\n    }\n\n    if (item.destinationType === 'MobilePush') {\n      item.availabilityCheck = _mobilePushRegistration.isAvailable;\n      item.customEnablement = _mobilePushRegistration.enable;\n      item.customDisablement = _mobilePushRegistration.disable;\n      item.customEnabledCheck = _mobilePushRegistration.isEnabled;\n      item.isToggleable = _mobilePushRegistration.isToggleable;\n    }\n  });\n\n  function setUserSubscriptionInfo() {\n    if ($scope.accountContent.userInfo.data) {\n      const userInfoData = $scope.accountContent.userInfo.data;\n      userInfoData.isPremiumUser = $scope.accountContent.subscriptionInfo;\n      if (userInfoData.isPremiumUser) {\n        userInfoData.subscriptionTypeName = premiumService.getMembershipMapping(\n          $scope.accountContent.subscriptionInfo.subscriptionTypeName\n        );\n        userInfoData.subscriptionRenewal = $scope.accountContent.subscriptionInfo.renewal\n          ? languageResource.intl.d(\n              new Date($scope.accountContent.subscriptionInfo.renewal),\n              'short'\n            )\n          : null;\n        userInfoData.subscriptionExpiration = languageResource.intl.d(\n          new Date($scope.accountContent.subscriptionInfo.expiration),\n          'short'\n        );\n      }\n    }\n  }\n\n  // string constants\n  $scope.defaultHelpUrl = 'https://en.help.roblox.com/entries/22631829';\n  $scope.localizedHelpUrl = {\n    zh_cn: 'https://en.help.roblox.com/hc/zh-cn/articles/203313120',\n    zh_cjv: 'https://en.help.roblox.com/hc/zh-cn/articles/203313120' // we expect this to be automatically switched to zh_cn, but best to be careful\n  };\n\n  // setup\n  $scope.cancelRenewalUrl = angular\n    .element(document.getElementById('state-properties'))\n    .attr('data-cancelrenewalurl');\n\n  $scope.showBlockedUsers = false;\n\n  $scope.populateAccount = accountsService.populateAccount;\n  $scope.populateAccount.timeMappings = screentimeConstantsService.generateTimeMappings();\n  $scope.populateAccount.dayMappings = screentimeConstantsService.generateDayMappings(\n    intl.getWeekdaysList('long')\n  );\n\n  $scope.themeContent = {\n    newThemeType: accountConstantsResources.defaultThemeType,\n    oldThemeType: accountConstantsResources.defaultThemeType,\n    availableThemes: []\n  };\n\n  $scope.accountSettingsMetadata = {\n    isMonthlyLimitSettingVisible: false,\n    isNotificationSettingVisible: false,\n    maximumMonthlySpendLimitInUSD: 10000,\n    hasError: true\n  };\n\n  $scope.accountPinContent = {\n    isEnabled: false,\n    isUnlocked: false,\n    unlockedUntil: null,\n    pinLength: 4\n  };\n\n  $scope.parentContent = {\n    accountRestrictions: {\n      isFeatureEnabled: false\n    }\n  };\n\n  $scope.connectedAccounts = {\n    isConnectedAccountsBoxShown: false,\n    providerName: '',\n    userName: ''\n  };\n\n  $scope.processErrorMessage = function (error) {\n    let errorMsg = error;\n    if (error && error.errors && error.errors[0] && error.errors[0].message) {\n      errorMsg = error.errors[0].message;\n    }\n    return errorMsg;\n  };\n\n  $scope.gigyaUserInfo = function () {\n    gigya.socialize.getUserInfo({\n      callback(response) {\n        const username = response && response.user ? response.user.nickname : '';\n        $timeout(function () {\n          $scope.connectedAccounts.providers.forEach(function (provider) {\n            if (\n              provider.provider.toLowerCase() ===\n              accountConstantsResources.socialAuth.providers.facebook\n            ) {\n              provider.identifier = username;\n            }\n          });\n        });\n      }\n    });\n  };\n\n  $scope.xbox = {\n    isDisconnectXboxEnabled: false,\n    isDisconnectXboxBoxShown: false\n  };\n\n  // account content\n  $scope.accountContent = {\n    userInfo: {},\n    hasEmailButNotVerified: false,\n    hasVerfiedEmail: false,\n    emailStatus: accountConstantsResources.emailStatus.none,\n    email: ''\n  };\n\n  $scope.pinFields = {\n    pinOne: '',\n    pinTwo: '',\n    pinThree: '',\n    pinFour: ''\n  };\n\n  $scope.passwordInfo = {\n    newPassword: '',\n    currentPassword: ''\n  };\n\n  $scope.notificationSettings = {\n    notificationBandSettings: [],\n    optedOutNotificationSourceTypes: [],\n    optedOutReceiverDestinationTypes: [],\n    updatedDestinationTypeOptOuts: {}\n  };\n\n  $scope.notificationSourceTypeMapping = {};\n\n  $scope.receiverDestinationTypeMapping = [];\n\n  // V2\n  $scope.contactSettings = {};\n  $scope.ageRestrictedSettings = {};\n  $scope.visibilitySettings = {};\n  $scope.joinSettings = {};\n  $scope.parentalSettings = {\n    screentime: {\n      parentalRestrictedHours: null,\n      curfewRestrictedHours: null,\n      koreanIdVerified: false\n    }\n  };\n\n  $scope.accountRestrictions = {};\n  $scope.socialNetworks = {};\n  $scope.tradeSettings = {};\n  $scope.inventorySettings = {};\n  $scope.accountInfoSettings = {};\n\n  $scope.accountSettingsPolicy = accountConstantsResources.accountSettingsPolicyLeastPrivileged;\n\n  $scope.personal = {\n    description: '',\n    birthdate: {},\n    gender: {},\n    country: {},\n    birthdateVerified: false,\n    showIdentityVerification: false\n  };\n\n  $scope.isV2Enabled = {\n    socialNetworks: false\n  };\n  // V2\n\n  $scope.allActiveCountryList = {};\n  $scope.accountInformationMetadata = {\n    isAllowedNotificationsEndpointDisabled: false,\n    isAccountSettingsPolicyEnabled: false,\n    isPhoneNumberEnabled: false,\n    isIDVerificationEnabled: false\n  };\n\n  $scope.addOrChangePhone = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.addOrChangePhone, retryPinUnlockLimit);\n      return;\n    }\n\n    $scope.phoneModalData = angular.extend($scope.phoneModalData, {\n      codeLength: $scope.accountInfoSettings.verificationCodeLength\n    });\n\n    const modalParams = {\n      templateUrl: accountConstantsResources.templates.modal.phoneSet,\n      controller: accountConstantsResources.controllers.modal.phoneSet,\n      scope: $scope\n    };\n\n    $uibModal.open(modalParams).result.then(function (data) {\n      BootstrapWidgets.ToggleSystemMessage($('.alert-success'), 100, 3000, data.message);\n      $scope.getPhoneNumber();\n    });\n  };\n\n  $scope.showSuccess = function () {\n    const text = languageResource.get('Description.SuccessDialogMessage');\n    systemFeedbackService.success(text, 100, 1000);\n  };\n\n  $scope.setAccountInfo = function (data) {\n    $scope.accountContent.userInfo = {\n      data,\n      hasError: false\n    };\n\n    setUserSubscriptionInfo();\n\n    // Email\n    $scope.accountContent.hasVerifiedEmail =\n      $scope.accountContent.userInfo.data.IsEmailOnFile &&\n      $scope.accountContent.userInfo.data.IsEmailVerified;\n    $scope.accountContent.hasEmailButNotVerified =\n      $scope.accountContent.userInfo.data.IsEmailOnFile &&\n      !$scope.accountContent.userInfo.data.IsEmailVerified;\n    $scope.accountContent.emailStatus = $scope.getEmailStatus();\n    $scope.accountContent.email = $scope.accountContent.userInfo.data.UserEmail;\n\n    $scope.setXboxConnectionUrls($scope.accountContent.userInfo.data.AuthDomain);\n    $scope.setNotificationSettingsUrls(\n      $scope.accountContent.userInfo.data.NotificationSettingsDomain\n    );\n    angular.forEach(\n      $scope.accountContent.userInfo.data.AllowedNotificationSourceTypes,\n      function (item) {\n        $scope.notificationSourceTypeMapping[item] = _notificationSourceTypeMapping[item];\n      }\n    );\n    $scope.receiverDestinationTypeMapping = _receiverDestinationTypeMapping.filter(function (\n      value\n    ) {\n      const found =\n        $scope.accountContent.userInfo.data.AllowedReceiverDestinationTypes.indexOf(\n          value.destinationType\n        ) !== -1;\n      if (found) {\n        const notificationPolicyKey =\n          accountConstantsResources.accountSettingsPolicyNotificationDestinations[\n            value.destinationType\n          ];\n        if (notificationPolicyKey) {\n          return $scope.accountSettingsPolicy[notificationPolicyKey];\n        }\n      }\n      return false;\n    });\n    $scope.desktopPushSettings = {\n      minimumChromeVersion: data.MinimumChromeVersionForPushNotifications,\n      enabledOnFirefox: data.PushNotificationsEnabledOnFirefox\n    };\n    $scope.percentTranslator = function (aDouble) {\n      return aDouble == null ? '-' : languageResource.intl.n(aDouble, 'percent');\n    };\n    $scope.dateMonthTranslator = function (rawDateMs) {\n      return languageResource.intl.d(new Date(rawDateMs), { month: 'long' });\n    };\n    $scope.dateYearTranslator = function (rawDateMs) {\n      return languageResource.intl.d(new Date(rawDateMs), { year: 'numeric' });\n    };\n    $scope.getNotificationSettings();\n    $scope.setAccountSettingsApiUrl($scope.accountContent.userInfo.data.AccountSettingsApiDomain);\n    $scope.setAuthDomainUrl($scope.accountContent.userInfo.data.AuthDomain);\n    if ($scope.accountContent.userInfo.data.IsAccountPinEnabled) {\n      $scope.getAccountPinSetting();\n    }\n    $scope.setUpSocialDisconnect();\n    $scope.getXboxConnection();\n\n    $scope.getAccountRestrictions();\n    $scope.getCurrentTheme();\n    $scope.getAvailableThemes();\n    $scope.getAccountSettingsMetadata();\n    $scope.prepForV2(data);\n    displayInitialModals();\n  };\n\n  $scope.getAccountInfo = function () {\n    accountsService.beginGetAccountInfo().then(\n      function (result) {\n        $scope.setAccountInfo(result);\n      },\n      function (error) {\n        $scope.accountContent.userInfo = {\n          data: error,\n          hasError: true\n        };\n      }\n    );\n  };\n\n  $scope.getAccountSubscription = function () {\n    premiumService.getUserStatus().then(function (data) {\n      $scope.accountContent.subscriptionInfo = data ? data.subscriptionProductModel : null;\n      setUserSubscriptionInfo();\n    });\n  };\n\n  $scope.handleCancelBtnClicked = function () {\n    const premiumFeatureId = $scope.accountContent.userInfo.data.PremiumFeatureId;\n    if (FormEvents && premiumFeatureId) {\n      FormEvents.SendInteractionClick('cancelRenewal', { pid: premiumFeatureId });\n    }\n  };\n\n  $scope.isAnyMembership = function () {\n    if (\n      $scope.accountContent &&\n      $scope.accountContent.userInfo &&\n      $scope.accountContent.userInfo.data\n    ) {\n      return $scope.accountContent.userInfo.data.isPremiumUser;\n    }\n    return false;\n  };\n\n  $scope.isMembershipRenewal = function () {\n    if (\n      $scope.accountContent &&\n      $scope.accountContent.userInfo &&\n      $scope.accountContent.userInfo.data\n    ) {\n      return $scope.accountContent.userInfo.data.subscriptionRenewal;\n    }\n    return false;\n  };\n\n  // V2\n\n  $scope.prepForV2 = function (result) {\n    // For move to V2\n    $scope.isV2Enabled.socialNetworks = result.IsAccountSettingsSocialNetworksV2Enabled;\n\n    // For phone\n    $scope.accountContent.isPhoneFeatureEnabled = result.IsPhoneFeatureEnabled;\n\n    $scope.getAccountInfoSettings();\n    $scope.getPersonalSettings();\n    $scope.getJoinSettings();\n    $scope.getTradeSettings();\n    $scope.getInventorySettings();\n    $scope.getAgeRestrictedSettings();\n    $scope.getVisibilitySettings();\n    $scope.getContactSettings();\n    $scope.getParentalSettings();\n    $scope.getScreentimePolicy();\n    $scope.getScreentimeRestrictions();\n    $scope.getSocialNetworks();\n  };\n\n  $scope.getAccountInfoSettings = function () {\n    $scope.getPhoneNumber();\n  };\n\n  $scope.getPhoneNumber = function () {\n    accountsService.beginGetPhone().then(\n      function (result) {\n        if ($scope.accountContent.userInfo.data.UserAbove13) {\n          $scope.accountInfoSettings.isPhoneNumberVisible = true;\n          $scope.accountInfoSettings.countryCode = result.countryCode;\n          $scope.accountInfoSettings.prefix = result.prefix;\n          $scope.accountInfoSettings.phone = result.phone;\n          $scope.accountInfoSettings.isPhoneVerified = result.isVerified;\n          $scope.accountInfoSettings.verificationCodeLength = result.verificationCodeLength;\n        }\n      },\n      function (error) {\n        $log.debug('Error getting phone');\n      }\n    );\n  };\n\n  $scope.getBirthdate = function () {\n    accountsService.beginGetBirthdate().then(\n      function (result) {\n        const { birthdate } = $scope.personal;\n        birthdate.birthDay = result.birthDay;\n        birthdate.birthMonth = result.birthMonth;\n        birthdate.birthYear = result.birthYear;\n        $scope.personal.birthdate.fullBirthdate = function () {\n          const d = new Date(birthdate.birthYear, birthdate.birthMonth - 1, birthdate.birthDay);\n          return d;\n        };\n        $scope.populateDays();\n        $scope.populateMonths();\n        $scope.populateYears();\n        birthdate.originalBirthdate = birthdate.fullBirthdate();\n      },\n      function (error) {\n        $log.debug('Error getting personal birthdate');\n      }\n    );\n  }\n  $scope.getPersonalSettings = function () {\n    if ($scope.isDateTimeI18nPickerEnabled()) {\n      $scope.populateAccount.orderedBirthdayParts = {\n        parts: accountConstantsResources.defaultDateParts, // object containing keys 0, 1, and 2 for the ordered date options for dropdown date pickers\n        typeOrder: new Intl().getDateTimeFormatter().getOrderedDateParts() // array where position 0/1/2 represents ordering for year/month/day\n      };\n    }\n\n    accountsService.beginGetDescription().then(\n      function (result) {\n        $scope.personal.description = result.description;\n      },\n      function (error) {\n        $log.debug('Error getting personal description');\n      }\n    );\n\n    $scope.getBirthdate();\n\n    accountsService.beginGetCountry().then(\n      function (result) {\n        if (result.success) {\n          let countryId = 0;\n          if (result.countryId) {\n            countryId = result.countryId;\n          }\n          $scope.personal.country.countryId = countryId;\n        } else {\n          $log.debug(`Failed to get personal country. Message : ${result.errorMessage}`);\n        }\n      },\n      function (error) {\n        $log.debug('Error getting personal country');\n      }\n    );\n\n    accountsService.beginGetGender().then(\n      function (result) {\n        $scope.personal.gender = result.gender.toString();\n      },\n      function (error) {\n        $log.debug('Error getting personal gender');\n      }\n    );\n\n    if (\n      $scope.accountSettingsPolicy.displayIdentityVerification &&\n      $scope.accountInformationMetadata.isIDVerificationEnabled\n    ) {\n      IdentityVerificationService?.getVerifiedAge().then(\n        function (result) {\n          $scope.personal.birthdateVerified = result.isVerified;\n          $scope.personal.showIdentityVerification = true;\n          $scope.$apply();\n        },\n        function (error) {\n          $log.debug('Error getting birthdate verification status');\n        }\n      );\n    }\n  };\n\n  $scope.verifyAge = function () {\n    IdentityVerificationService.sendIdVerificationEvent(events.verifyAgeButtonClicked, {\n      origin: accountSettingsOrigin\n    });\n    IdentityVerificationService.getVerifiedAge().then(\n      async result => {\n        if (!result.isVerified) {\n          const [\n            isUserOldEnough,\n            didVerifyAge\n          ] = await IdentityVerificationService.startVerificationFlow();\n\n          if (didVerifyAge) {\n            $scope.personal.birthdateVerified = true;\n            $scope.personal.showIdentityVerification = true;\n            $scope.getBirthdate();\n            $scope.$apply();\n          }\n        }\n      },\n      err => {\n        displayInfoModal(\n          modalConstantsService.default.error.title,\n          modalConstantsService.default.error.body\n        );\n        $log.debug('Error checking identity verification status');\n      }\n    );\n  };\n\n  $scope.updateDescription = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateDescription, retryPinUnlockLimit);\n      return;\n    }\n\n    accountsService.beginUpdateDescription($scope.personal.description).then(\n      function (result) {\n        displayInfoModal(\n          modalConstantsService.default.success.title,\n          modalConstantsService.default.success.body\n        );\n      },\n      function (error) {\n        displayInfoModal(\n          modalConstantsService.default.error.title,\n          modalConstantsService.default.error.body\n        );\n        $log.debug('Error updating personal description');\n      }\n    );\n  };\n\n  $scope.updateBirthdate = function () {\n    const restoreOriginalBirthday = function () {\n      $scope.personal.birthdate.birthMonth =\n        $scope.personal.birthdate.originalBirthdate.getMonth() + 1;\n      $scope.personal.birthdate.birthDay = $scope.personal.birthdate.originalBirthdate.getDate();\n      $scope.personal.birthdate.birthYear = $scope.personal.birthdate.originalBirthdate.getFullYear();\n      $scope.populateDays();\n    };\n\n    /**\n     * clamp day to closest valid value if it exceeds the limit (ex Apr 31st -> Apr 30th)\n     * @function\n     * @param {number} year in YYYY format\n     * @param {number} month index 1-12\n     * @param {number} day index 1-31\n     * @returns {Object} Clamped Date object\n     */\n    const getClosestValidDay = function (year, month, day) {\n      let currentDay = day;\n      const currentMonth = month - 1;\n      let tempDate = new Date(year, currentMonth, day, 0, 0, 0, 0);\n      if (tempDate.getMonth() > currentMonth) {\n        while (tempDate.getMonth() !== currentMonth) {\n          currentDay--;\n          tempDate = new Date(year, currentMonth, currentDay, 0, 0, 0, 0);\n        }\n      }\n      return tempDate;\n    };\n    const clampedDate = getClosestValidDay(\n      $scope.personal.birthdate.birthYear,\n      $scope.personal.birthdate.birthMonth,\n      $scope.personal.birthdate.birthDay\n    );\n    $scope.personal.birthdate.birthMonth = clampedDate.getMonth() + 1;\n    $scope.personal.birthdate.birthDay = clampedDate.getDate();\n    $scope.personal.birthdate.birthYear = clampedDate.getFullYear();\n\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting(\n        $scope.updateBirthdate,\n        retryPinUnlockLimit,\n        restoreOriginalBirthday\n      );\n      return;\n    }\n\n    const updateBirthdateConfirm = function (isChangeOver13ToUnder13, password) {\n      const updateBirthdateResult = accountsService\n        .beginUpdateBirthdate($scope.personal.birthdate, password)\n        .then(function (result) {\n          if (isChangeOver13ToUnder13) {\n            $window.location.reload();\n          }\n\n          const { birthdate } = $scope.personal;\n          birthdate.fullBirthdate = function () {\n            const d = new Date(birthdate.birthYear, birthdate.birthMonth - 1, birthdate.birthDay);\n            return d;\n          };\n          birthdate.originalBirthdate = birthdate.fullBirthdate();\n          $scope.populateDays();\n          $scope.personal.birthdateVerified = false;\n        });\n\n      if (\n        !$scope.accountInformationMetadata.isPasswordRequiredForAgingDown ||\n        !isChangeOver13ToUnder13\n      ) {\n        updateBirthdateResult.catch(function (error) {\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            modalConstantsService.default.error.body\n          );\n          restoreOriginalBirthday();\n          $log.debug('Error updating personal birthdate');\n        });\n      }\n      return updateBirthdateResult;\n    };\n\n    if (\n      $scope.personal.birthdate.fullBirthdate().setHours(0, 0, 0, 0) >=\n      new Date().setHours(0, 0, 0, 0)\n    ) {\n      restoreOriginalBirthday();\n      displayInfoModal(\n        modalConstantsService.default.error.title,\n        languageResource.get('Response.InvalidBirthday')\n      );\n    }\n\n    const checkAgeBracketAndConfirmUpdate = () => {\n      const isChangeOver13ToUnder13 =\n        $scope.personal.birthdate.originalBirthdate &&\n        $scope.calculateAge($scope.personal.birthdate.originalBirthdate) >= 13 &&\n        $scope.calculateAge($scope.personal.birthdate.fullBirthdate()) < 13;\n\n      if (isChangeOver13ToUnder13) {\n        // prevent age down\n        if (!$scope.accountContent.userInfo.data.IsAgeDownEnabled) {\n          restoreOriginalBirthday();\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            languageResource.get('ResponseAgeDownError')\n          );\n        } else {\n          accountsService\n            .beginGetSocialConnected()\n            .then(function (result) {\n              let modal;\n              if (\n                result &&\n                result.providers &&\n                result.providers[0] &&\n                result.providers[0].provider.toLowerCase() ===\n                  accountConstantsResources.socialAuth.providers.facebook\n              ) {\n                // If the user is connected to Facebook login\n                if ($scope.accountContent.userInfo.data.IsSetPasswordNotificationEnabled) {\n                  modal = modalService.open({\n                    titleText: modalConstantsService.birthdayChange.needPassword.title,\n                    bodyText: modalConstantsService.birthdayChange.needPassword.body\n                  });\n                } else {\n                  modal = modalService.open({\n                    titleText: modalConstantsService.birthdayChange.default.title,\n                    bodyText: modalConstantsService.birthdayChange.withSocialSignOn.body,\n                    actionButtonShow: true,\n                    actionButtonText:\n                      modalConstantsService.birthdayChange.withSocialSignOn.positiveBtnText, // This is correct, we want \"Ok\" to be a negative action because it is bad\n                    neutralButtonText:\n                      modalConstantsService.birthdayChange.withSocialSignOn.negativeBtnText\n                  });\n                }\n              } else if ($scope.accountInformationMetadata.isPasswordRequiredForAgingDown) {\n                modal = $uibModal.open({\n                  templateUrl: accountConstantsResources.templates.modal.changeBirthdate,\n                  controller: accountConstantsResources.controllers.modal.changeBirthdate,\n                  resolve: {\n                    modalData: {\n                      updateBirthdate(password) {\n                        return updateBirthdateConfirm(isChangeOver13ToUnder13, password);\n                      },\n                      getBirthdateErrorMessageFromCode:\n                        accountsService.getBirthdateErrorMessageFromCode\n                    }\n                  }\n                });\n              } else {\n                modal = modalService.open({\n                  titleText: modalConstantsService.birthdayChange.default.title,\n                  bodyText: modalConstantsService.birthdayChange.default.body,\n                  actionButtonShow: true,\n                  actionButtonText: modalConstantsService.default.positiveBtnText, // This is correct, we want \"Yes\" to be a negative action because it is bad\n                  neutralButtonText: modalConstantsService.default.negativeBtnText\n                });\n              }\n              return modal.result;\n            })\n            .then(function () {\n              if (!$scope.accountInformationMetadata.isPasswordRequiredForAgingDown) {\n                updateBirthdateConfirm(isChangeOver13ToUnder13);\n              }\n            })\n            .catch(restoreOriginalBirthday);\n        }\n      } else {\n        updateBirthdateConfirm(isChangeOver13ToUnder13);\n      }\n    };\n\n    if (\n      $scope.personal.showIdentityVerification &&\n      $scope.personal.birthdateVerified &&\n      IdentityVerificationService?.showBirthdayChangeWarning\n    ) {\n      IdentityVerificationService.showBirthdayChangeWarning().then(allowChange => {\n        if (allowChange) {\n          checkAgeBracketAndConfirmUpdate();\n        } else {\n          restoreOriginalBirthday();\n        }\n        $scope.$apply();\n      });\n    } else {\n      checkAgeBracketAndConfirmUpdate();\n    }\n  };\n\n  $scope.updateGender = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateGender, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateGender($scope.personal.gender).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating gender');\n      }\n    );\n  };\n\n  $scope.updateCountry = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateCountry, retryPinUnlockLimit);\n      return;\n    }\n    if ($scope.personal.country.countryId <= 0) {\n      return;\n    }\n    accountsService.beginUpdateCountry($scope.personal).then(\n      function (result) {\n        if (!result.success) {\n          $log.debug(`Failed to update country. Message: ${result.errorMessage}`);\n        }\n      },\n      function (error) {\n        $log.debug('Error updating country');\n      }\n    );\n  };\n\n  $scope.getCurrentTheme = function () {\n    accountsService.beginGetConsumerThemes().then(\n      function (result) {\n        let themeTypeFromResult = result.themeType;\n        if (themeTypeFromResult === accountConstantsResources.themeTypes.classic) {\n          themeTypeFromResult = $scope.accountData.stateProperties.defaultThemeType;\n        }\n        $scope.themeContent.newThemeType = themeTypeFromResult;\n        $scope.themeContent.oldThemeType = themeTypeFromResult;\n      },\n      function () {\n        modalService.open({\n          titleText: modalConstantsService.default.error.title,\n          bodyText: modalConstantsService.default.error.body\n        });\n      }\n    );\n  };\n\n  $scope.getAvailableThemes = function () {\n    accountsService.beginGetAvailableThemeTypes().then(\n      function (result) {\n        const { themes } = $scope.populateAccount;\n        const filteredThemes = [];\n        themes.forEach(function (theme) {\n          if (result.data.indexOf(theme.value) !== -1) {\n            filteredThemes.push(theme);\n          }\n        });\n        $scope.themeContent.availableThemes = filteredThemes;\n      },\n      function () {\n        modalService.open({\n          titleText: modalConstantsService.default.error.title,\n          bodyText: modalConstantsService.default.error.body\n        });\n      }\n    );\n  };\n\n  $scope.getAgeRestrictedSettings = function () {\n    accountsService.beginGetAgeRestrictedSettings().then(\n      function (result) {\n        $scope.ageRestrictedSettings.isVoiceChatEnabled = result.isVoiceChatEnabled;\n        $scope.ageRestrictedSettings.isVerifiedForVoice = result.isVerifiedForVoice;\n        $scope.ageRestrictedSettings.isVoiceChatUserOptIn = result.isVoiceChatUserOptIn;\n        $scope.ageRestrictedSettings.isOptInDisabled = result.isOptInDisabled;\n      },\n      function (error) {\n        $log.debug('Error getting age restricted settings');\n      }\n    );\n  };\n\n  $scope.toggleVoiceChatEnabledSetting = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.toggleVoiceChatEnabledSetting, retryPinUnlockLimit);\n      return;\n    }\n    if (!$scope.ageRestrictedSettings.isOptInDisabled || $scope.ageRestrictedSettings.isVoiceChatUserOptIn) {\n      accountsService.toggleVoiceChatEnabledSetting(!$scope.ageRestrictedSettings.isVoiceChatUserOptIn)\n      .then(\n        function (result) {\n          $scope.ageRestrictedSettings.isVoiceChatUserOptIn = result.isUserOptIn;\n          $scope.getAgeRestrictedSettings(); \n        },\n        function (error) {\n          $log.debug('Error updating user voice chat opt in setting');\n        }\n      );\n    }\n  };\n\n  $scope.getVisibilitySettings = function () {\n    accountsService.beginGetVisibilityPrivacy().then(\n      function (result) {\n        $scope.visibilitySettings.isInvisible = result.isInvisible;\n      },\n      function () {\n        $log.debug('Error getting user visibility setting');\n      }\n    );\n  };\n\n  $scope.toggleVisibilityPrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.toggleVisibilityPrivacy, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.toggleVisibilityPrivacy(!$scope.visibilitySettings.isInvisible)\n      .then(\n        function (result) {\n          $scope.visibilitySettings.isInvisible = result;\n        },\n        function () {\n          $log.debug('Error updating user visibility setting');\n        }\n      );\n  };\n\n  $scope.getContactSettings = function () {\n    accountsService.beginGetContactSettings().then(\n      function (result) {\n        $scope.contactSettings.AppChatPrivacy = result.appChatPrivacy;\n        $scope.contactSettings.GameChatPrivacy = result.gameChatPrivacy;\n        $scope.contactSettings.PrivateMessagePrivacy = result.privateMessagePrivacy;\n        $scope.setContactSettingsMasterSetting();\n      },\n      function (error) {\n        $log.debug('Error getting contact settings');\n      }\n    );\n  };\n\n  $scope.getParentalSettings = function () {\n    accountsService.beginGetContentRatings().then(\n      function (result) {\n        $scope.parentalSettings.ContentRatings = result.contentRestrictionLevel;\n      },\n      function (error) {\n        $log.debug('Error getting parental settings');\n      }\n    );\n    accountsService.beginGetParentalSpendControls().then(\n      function (result) {\n        if (!result) {\n          $scope.parentalSettings.MonthlySpendLimitInUSD = null;\n          $scope.parentalSettings.MonthlyLimitEnabled = false;\n          $scope.parentalSettings.SpendNotificationSetting = accountConstantsResources.spendNotificationSettingTypes.defaultNotifications;\n          $scope.parentalSettings.NotificationSettingEnabled = true;\n        } else {\n          $scope.parentalSettings.MonthlySpendLimitInUSD = result.monthlySpendLimitInUSD;\n          if (\n            $scope.parentalSettings.MonthlySpendLimitInUSD == null ||\n            $scope.parentalSettings.MonthlySpendLimitInUSD === undefined\n          ) {\n            $scope.parentalSettings.MonthlyLimitEnabled = false;\n          } else {\n            $scope.parentalSettings.MonthlyLimitEnabled = true;\n          }\n\n          $scope.parentalSettings.SpendNotificationSetting = result.spendNotificationSetting;\n\n          if ($scope.parentalSettings.SpendNotificationSetting === accountConstantsResources.spendNotificationSettingTypes.notificationsOff) {\n            $scope.parentalSettings.NotificationSettingEnabled = false;\n          } else {\n            $scope.parentalSettings.NotificationSettingEnabled = true;\n          }\n        }\n        $scope.parentalSettings.currentMonthlyLimit =\n          $scope.parentalSettings.MonthlySpendLimitInUSD;\n      },\n      function (error) {\n        $log.debug('Error getting parental settings');\n      }\n    );\n  };\n\n  $scope.getScreentimeRestrictions = function () {\n    $scope.parentalSettings.screentime.deviceTimezone = intl.getDateTimeFormatter().getTimeZone();\n    const { screentime } = $scope.parentalSettings;\n    accountsService.beginGetScreentimeRestrictions().then(\n      function (result) {\n        screentime.curfewRestrictedHours = result.curfewRestrictedHours || [];\n        screentime.parentalTimezone = result.parentalTimezone || screentime.deviceTimezone;\n        screentime.parentalRestrictedHours = result.parentalRestrictedHours || [];\n\n        const { timeMappings } = $scope.populateAccount;\n        const {\n          generateRestrictionBeginTimes,\n          generateRestrictionEndTimes\n        } = screentimeConstantsService;\n        if (screentime.curfewRestrictedHours) {\n          $scope.populateAccount.restrictionBeginTimes = generateRestrictionBeginTimes(\n            timeMappings,\n            screentime.curfewRestrictedHours\n          );\n          $scope.populateAccount.restrictionEndTimes = generateRestrictionEndTimes(\n            timeMappings,\n            screentime.curfewRestrictedHours\n          );\n        } else {\n          $scope.populateAccount.restrictionBeginTimes = generateRestrictionBeginTimes(\n            timeMappings\n          );\n          $scope.populateAccount.restrictionEndTimes = generateRestrictionEndTimes(timeMappings);\n        }\n        $scope.populateDaysOfWeek();\n\n        // Check for saved hours from current session ID verification\n        $scope.getKoreaIdVerificationResult();\n      },\n      function (error) {\n        $log.debug(`Error getting screentime restrictions from restricted hours service: ${error}`);\n        screentime.parentalTimezone = screentime.deviceTimezone;\n      }\n    );\n  };\n\n  $scope.getKoreaIdVerificationResult = function () {\n    const {\n      MDL_TOKEN,\n      METHOD,\n      PARENTAL_RESTRICTED_HOURS,\n      PARENTAL_TIME_ZONE,\n      UPDATED_TIME_ZONE\n    } = screentimeConstantsService.localStorageConstants;\n    const mdlToken = localStorageService.getLocalStorage(MDL_TOKEN);\n\n    if (mdlToken) {\n      const method = localStorageService.getLocalStorage(METHOD);\n\n      koreaIdVerificationService.beginGetKoreaIdVerificationResult(mdlToken, method).then(\n        result => {\n          const { age } = result.data.information;\n          if (age >= 18) {\n            const { screentime } = $scope.parentalSettings;\n            screentime.koreanIdVerified = true;\n            screentime.parentalTimezone = localStorageService.getLocalStorage(PARENTAL_TIME_ZONE);\n            screentime.parentalRestrictedHours = JSON.parse(\n              localStorageService.getLocalStorage(PARENTAL_RESTRICTED_HOURS)\n            );\n\n            const updatedTimezone = JSON.parse(localStorageService.getLocalStorage(UPDATED_TIME_ZONE));\n            $scope.saveRestrictionsHandler(updatedTimezone);\n          } else {\n            displayInfoModal(\n              modalConstantsService.default.error.title,\n              modalConstantsService.screentime.saveRestrictions.error.under18IDVerified\n            );\n          }\n          screentimeConstantsService.localStorageCleanUp();\n        },\n        error => {\n          console.debug(\n            'Error getting korea id verification result from identity verification service',\n            angular.toJson(error)\n          );\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            modalConstantsService.default.error.body\n          );\n        }\n      );\n    }\n  };\n\n  $scope.getScreentimePolicy = function () {\n    accountsService.beginGetScreentimeAuthorizationPolicy().then(\n      function (result) {\n        $scope.parentalSettings.screentime.isKoreaScreentimeEnabled =\n          result.screentimeType == 'Korea';\n      },\n      function (error) {\n        $log.debug(\n          `Error getting screentime authorization policy from Universal App Configuration (GUAC): ${angular.toJson(\n            error\n          )}`\n        );\n      }\n    );\n    accountsService.beginGetScreentimeRolloutPolicy().then(\n      function (result) {\n        $scope.parentalSettings.screentime.enableParentalScreenTimeControls =\n          result.enableParentalScreenTimeControls;\n      },\n      function (error) {\n        $log.debug(\n          `Error getting screentime rollout policy from Universal App Configuration (GUAC): ${angular.toJson(\n            error\n          )}`\n        );\n      }\n    );\n  };\n\n  $scope.populateDaysOfWeek = function () {\n    $scope.populateAccount.dayMappings.forEach((dayName, dayValue) =>\n      $scope.populateAccount.daysOfWeek.push({\n        name: dayName,\n        value: dayValue\n      })\n    );\n  };\n\n  $scope.deleteRestriction = function (restriction) {\n    const index = $scope.parentalSettings.screentime.parentalRestrictedHours.indexOf(restriction);\n    $scope.parentalSettings.screentime.parentalRestrictedHours.splice(index, 1);\n  };\n\n  $scope.updateRestrictionBeginTime = function (restriction, timestamp) {\n    restriction.begin = timestamp;\n    // Automatically set end time to 1 hr later\n    // Limiting to 12AM if necessary\n    const { dateTimes, generateTimestamp } = screentimeConstantsService;\n    const oneHourLaterTimestamp = generateTimestamp(\n      new Date(dateTimes.arbitraryDate + timestamp).getTime() + dateTimes.oneHourInMs\n    );\n    const endTime =\n      timestamp == dateTimes.elevenPmTimestamp || timestamp == dateTimes.elevenThirtyPmTimestamp\n        ? dateTimes.twentyFourHourTimestamp\n        : oneHourLaterTimestamp;\n    $scope.updateRestrictionEndTime(restriction, endTime);\n  };\n\n  $scope.updateRestrictionEndTime = function (restriction, timestamp) {\n    restriction.end = timestamp;\n  };\n\n  $scope.toggleRestrictionDay = function (restriction, day) {\n    const index = restriction.days.indexOf(day);\n    if (index != -1) {\n      restriction.days.splice(index, 1);\n    } else {\n      restriction.days.push(day);\n      restriction.days.sort();\n    }\n  };\n\n  $scope.dayString = function (days) {\n    const { everyday, every } = screentimeConstantsService.dropdownText;\n    switch (days.length) {\n      case 0:\n        return '';\n      case 7:\n        return everyday;\n      default:\n        var dayString = every;\n        days.forEach((day, i) => {\n          dayString += $scope.populateAccount.dayMappings.get(day);\n          if (i != days.length - 1) {\n            dayString += ', ';\n          }\n        });\n        return dayString;\n    }\n  };\n\n  $scope.addRestriction = function () {\n    const { parentalRestrictedHours } = $scope.parentalSettings.screentime;\n    if (!parentalRestrictedHours) {\n      displayInfoModal(\n        modalConstantsService.default.error.title,\n        modalConstantsService.default.error.body\n      );\n    } else {\n      parentalRestrictedHours.push({\n        begin: screentimeConstantsService.defaultRestriction.begin,\n        end: screentimeConstantsService.defaultRestriction.end,\n        days: [...screentimeConstantsService.defaultRestriction.days]\n      });\n    }\n  };\n\n  $scope.launchKoreanIdVerificationModal = function (updatedTimezone) {\n    const { parentalRestrictedHours, parentalTimezone } = $scope.parentalSettings.screentime;\n    $uibModal.open({\n      templateUrl: accountConstantsResources.templates.modal.koreanIDVerification,\n      controller: accountConstantsResources.controllers.modal.koreanIDVerification,\n      resolve: {\n        modalData: {\n          parentalRestrictedHours,\n          parentalTimezone,\n          updatedTimezone\n        }\n      }\n    });\n  };\n\n  $scope.updateTimezoneAndSaveRestrictions = function () {\n    $scope.saveRestrictionsHandler(true);\n  };\n\n  $scope.saveRestrictionsHandler = function (updatedTimezone = false) {\n    if (!validateRestrictions()) {\n      return;\n    }\n\n    const {\n      isKoreaScreentimeEnabled,\n      deviceTimezone,\n      koreanIdVerified,\n      parentalTimezone: originalParentalTimezone\n    } = $scope.parentalSettings.screentime;\n\n    if (updatedTimezone) {\n      $scope.parentalSettings.screentime.parentalTimezone = deviceTimezone;\n    }\n\n    if ($scope.pinIsEnabledAndLocked()) {\n      // Reset timezone, it will be updated again once the pin modal callbacks this function.\n      $scope.parentalSettings.screentime.parentalTimezone = originalParentalTimezone;\n      if (updatedTimezone) {\n        $scope.unlockAccountPinSetting(\n          $scope.updateTimezoneAndSaveRestrictions,\n          retryPinUnlockLimit\n        );\n      } else {\n        $scope.unlockAccountPinSetting($scope.saveRestrictionsHandler, retryPinUnlockLimit);\n      }\n      return;\n    }\n\n    if (isKoreaScreentimeEnabled && !koreanIdVerified) {\n      // Reset timezone, it will be updated again once the ID verification completes.\n      $scope.parentalSettings.screentime.parentalTimezone = originalParentalTimezone;\n      $scope.launchKoreanIdVerificationModal(updatedTimezone);\n      return;\n    }\n\n    removeDuplicateRestrictions();\n    const { parentalRestrictedHours, parentalTimezone } = $scope.parentalSettings.screentime;\n    accountsService.beginSaveRestrictedHours(parentalTimezone, parentalRestrictedHours).then(\n      function (result) {\n        displayInfoModal(\n          modalConstantsService.default.success.title,\n          modalConstantsService.default.success.body\n        );\n        if (updatedTimezone) {\n          displayInfoModal(\n            modalConstantsService.default.success.title,\n            modalConstantsService.screentime.updatedTimezone.success.body\n          );\n        }\n      },\n      function (error) {\n        displayInfoModal(\n          modalConstantsService.default.error.title,\n          modalConstantsService.default.error.body\n        );\n        if (updatedTimezone) {\n          // Reset timezone to original timezone if restriction save failed\n          $scope.parentalSettings.screentime.parentalTimezone = originalParentalTimezone;\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            modalConstantsService.screentime.updatedTimezone.error.body\n          );\n        }\n      }\n    );\n  };\n\n  function removeDuplicateRestrictions() {\n    const set = new Set();\n    $scope.parentalSettings.screentime.parentalRestrictedHours.forEach(r => {\n      r.days.sort();\n      set.add(angular.toJson(r));\n    });\n    $scope.parentalSettings.screentime.parentalRestrictedHours = Array.from(set).map(r =>\n      JSON.parse(r)\n    );\n  }\n\n  function validateRestrictions() {\n    const { parentalRestrictedHours } = $scope.parentalSettings.screentime;\n    if (!parentalRestrictedHours) {\n      displayInfoModal(\n        modalConstantsService.default.error.title,\n        modalConstantsService.default.error.body\n      );\n      return false;\n    } else {\n      for (let i = 0; i < parentalRestrictedHours.length; i++) {\n        const restriction = parentalRestrictedHours[i];\n  \n        // Must select at least 1 day\n        if (restriction.days.length == 0) {\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            modalConstantsService.screentime.saveRestrictions.error.missingDaySelection\n          );\n          return false;\n        }\n  \n        // Blocked Until time is before Blocked From time\n        if (restriction.begin >= restriction.end) {\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            modalConstantsService.screentime.saveRestrictions.error.blockedTimesWrongOrder\n          );\n          return false;\n        }\n  \n        // Must have at least 1 hour playtime allowed\n        const { arbitraryDate, twentyThreeHoursInMs } = screentimeConstantsService.dateTimes;\n        const restrictionLengthInMs =\n          new Date(arbitraryDate + restriction.end) - new Date(arbitraryDate + restriction.begin);\n        if (restrictionLengthInMs > twentyThreeHoursInMs) {\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            modalConstantsService.screentime.saveRestrictions.error.atLeastOneHourAllowed\n          );\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  $scope.onContactSettingsMasterSettingChange = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting(\n        $scope.onContactSettingsMasterSettingChange,\n        retryPinUnlockLimit\n      );\n      return;\n    }\n\n    const value = $scope.contactSettings.MasterSetting;\n    if (value === defaultText) {\n      $scope.contactSettings.PrivateMessagePrivacy = friendsText;\n      $scope.contactSettings.AppChatPrivacy = friendsText;\n      $scope.contactSettings.GameChatPrivacy = allUsersText;\n    } else if (value === offText) {\n      $scope.contactSettings.PrivateMessagePrivacy = noOneText;\n      $scope.contactSettings.AppChatPrivacy = noOneText;\n      $scope.contactSettings.GameChatPrivacy = noOneText;\n    }\n    if (value !== customText) {\n      const appChatPrivacyUpdateRequest = accountsService.beginUpdateAppChatPrivacy(\n        $scope.contactSettings\n      );\n      appChatPrivacyUpdateRequest.then(\n        function (result) {},\n        function (error) {\n          $log.debug('Error updating app chat privacy');\n        }\n      );\n\n      const gameChatPrivacyRequest = accountsService.beginUpdateGameChatPrivacy(\n        $scope.contactSettings\n      );\n      gameChatPrivacyRequest.then(\n        function (result) {},\n        function (error) {\n          $log.debug('Error updating game chat privacy');\n        }\n      );\n\n      const privateMessagePrivacyRequest = accountsService.beginUpdatePrivateMessagePrivacy(\n        $scope.contactSettings\n      );\n      privateMessagePrivacyRequest.then(\n        function (result) {},\n        function (error) {\n          $log.debug('Error updating private message privacy');\n        }\n      );\n\n      const promises = $q.all([\n        appChatPrivacyUpdateRequest,\n        gameChatPrivacyRequest,\n        privateMessagePrivacyRequest\n      ]);\n      promises.then(\n        function () {\n          $scope.showSuccess();\n        },\n        function () {\n          $log.debug('Error switching master contact setting');\n          const unknownErrorText = languageResource.get('MessageUnknownError');\n          systemFeedbackService.warning(unknownErrorText, 100, 5000);\n        }\n      );\n      return promises;\n    }\n  };\n\n  $scope.updateAppChatPrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateAppChatPrivacy, retryPinUnlockLimit);\n      return;\n    }\n    $scope.contactSettings.MasterSetting = customText;\n    accountsService.beginUpdateAppChatPrivacy($scope.contactSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating app chat privacy');\n      }\n    );\n  };\n\n  $scope.updateGameChatPrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateGameChatPrivacy, retryPinUnlockLimit);\n      return;\n    }\n    $scope.contactSettings.MasterSetting = customText;\n    accountsService.beginUpdateGameChatPrivacy($scope.contactSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating game chat privacy');\n      }\n    );\n  };\n\n  $scope.updatePrivateMessagePrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updatePrivateMessagePrivacy, retryPinUnlockLimit);\n      return;\n    }\n    $scope.contactSettings.MasterSetting = customText;\n    accountsService.beginUpdatePrivateMessagePrivacy($scope.contactSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating private message privacy');\n      }\n    );\n  };\n\n  $scope.getJoinSettings = function () {\n    accountsService.beginGetPrivateServerInvitePrivacy().then(\n      function (result) {\n        $scope.joinSettings.privateServerInvitePrivacy = result.PrivateServerInvitePrivacy;\n      },\n      function (error) {\n        $log.debug('Error getting private server invite privacy');\n      }\n    );\n    accountsService.beginGetFollowMePrivacy().then(\n      function (result) {\n        $scope.joinSettings.followMePrivacy = result.FollowMePrivacy;\n      },\n      function (error) {\n        $log.debug('Error getting follow me privacy');\n      }\n    );\n  };\n\n  $scope.updatePrivateServerInvitePrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updatePrivateServerInvitePrivacy, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdatePrivateServerInvitePrivacy($scope.joinSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating private server invite privacy');\n      }\n    );\n  };\n\n  $scope.updateFollowMePrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateFollowMePrivacy, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateFollowMePrivacy($scope.joinSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating follow me privacy');\n      }\n    );\n  };\n\n  $scope.getTradeSettings = function () {\n    accountsService.beginGetTradePrivacy().then(\n      function (result) {\n        $scope.tradeSettings.tradePrivacy = result.tradePrivacy;\n      },\n      function (error) {\n        $log.debug('Error getting trade privacy');\n      }\n    );\n    accountsService.beginGetTradeValue().then(\n      function (result) {\n        $scope.tradeSettings.tradeValue = result.tradeValue;\n      },\n      function (error) {\n        $log.debug('Error getting trade value');\n      }\n    );\n  };\n\n  $scope.updateTradePrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateTradePrivacy, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateTradePrivacy($scope.tradeSettings).then(\n      function (result) {\n        if (result.privacySettingResponse === 'Conflict') {\n          $scope.inventorySettings.inventoryPrivacy = result.inventoryPrivacy;\n          const popupMessage = accountsService.getUpdateInventoryPrivacyMessageWhenConflict();\n          systemFeedbackService.success(popupMessage, 300, 5000);\n        } else {\n          $scope.showSuccess();\n        }\n      },\n      function (error) {\n        $log.debug('Error updating trade privacy');\n      }\n    );\n  };\n\n  $scope.updateTradeValue = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateTradeValue, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateTradeValue($scope.tradeSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating trade value');\n      }\n    );\n  };\n\n  $scope.updateContentRatings = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateContentRatings, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateContentRatings($scope.parentalSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating content ratings');\n      }\n    );\n  };\n  \n  $scope.updateParentalSpendControls = function () {\n    if (!$scope.accountPinSetupAndEnable()) {\n      return;\n    }\n\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateParentalSpendControls, retryPinUnlockLimit);\n      return;\n    }\n    $scope.parentalSettings.currentMonthlyLimit = $scope.parentalSettings.MonthlySpendLimitInUSD;\n    // user updates notification settings while monthly limit is invalid - sets monthly limit as null\n    accountsService.beginUpdateParentalSpendControls($scope.parentalSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating notification settings');\n      }\n    );\n  };\n\n  $scope.updateNotificationFrequency = function () {\n    if (!$scope.accountPinSetupAndEnable()) {\n      return;\n    }\n\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateNotificationFrequency, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateNotificationFrequency($scope.parentalSettings).then(\n      function (result) {\n        $scope.showSuccess();\n      },\n      function (error) {\n        $log.debug('Error updating notification settings');\n      }\n    );\n  };\n\n  $scope.isContentRatingsSettingVisible = function () {\n    return (\n      $scope.accountContent.userInfo.data &&\n      $scope.accountContent.userInfo.data.IsContentRatingsSettingEnabled\n    );\n  };\n  \n  $scope.isMonthlyLimitBelowZero = function () {\n    return $scope.parentalSettings.MonthlySpendLimitInUSD < 0;\n  };\n\n  $scope.isMonthlyLimitAboveMax = function () {\n    return (\n      $scope.parentalSettings.MonthlySpendLimitInUSD >\n      $scope.accountSettingsMetadata.maximumMonthlySpendLimitInUSD\n    );\n  };\n\n  $scope.isSaveButtonVisible = function () {\n    return !$scope.isMonthlyLimitAboveMax() && !$scope.isMonthlyLimitBelowZero();\n  };\n\n  $scope.setAccountSettingsMetadata = function (data) {\n    $scope.accountSettingsMetadata = {\n      isMonthlyLimitSettingVisible: data.IsParentalMonthlyLimitInUIEnabled,\n      isNotificationSettingVisible: data.IsParentalNotificationSettingsInUIEnabled,\n      maximumMonthlySpendLimitInUSD: data.MaximumParentalControlsMonthlySpendLimitInUSD || 10000,\n      hasError: false\n    };\n  };\n\n  $scope.getAccountSettingsMetadata = function () {\n    accountsService.beginGetAccountSettingsMetadata().then(\n      function (result) {\n        $scope.setAccountSettingsMetadata(result);\n      },\n      function (error) {\n        $log.debug('Error getting AccountSettingsMetadata');\n      }\n    );\n  };\n\n  $scope.getSocialNetworks = function () {\n    accountsService.beginGetPromotionChannels().then(\n      function (result) {\n        $scope.socialNetworks.SocialNetworksVisibilityPrivacy =\n          result.promotionChannelsVisibilityPrivacy;\n        $scope.socialNetworks.FacebookUrl = result.facebook;\n        $scope.socialNetworks.TwitterUrl = result.twitter;\n        $scope.socialNetworks.YouTubeUrl = result.youtube;\n        $scope.socialNetworks.TwitchUrl = result.twitch;\n      },\n      function (error) {\n        $log.debug('Error getting social networks');\n      }\n    );\n  };\n\n  $scope.getInventorySettings = function () {\n    accountsService.beginGetInventoryPrivacy().then(\n      function (result) {\n        $scope.inventorySettings.inventoryPrivacy = result.inventoryPrivacy;\n      },\n      function (error) {\n        $log.debug('Error getting inventory privacy');\n      }\n    );\n  };\n\n  $scope.updateInventoryPrivacy = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateInventoryPrivacy, retryPinUnlockLimit);\n      return;\n    }\n    accountsService.beginUpdateInventoryPrivacy($scope.inventorySettings).then(\n      function (result) {\n        if (result.privacySettingResponse === 'Conflict') {\n          $scope.tradeSettings.tradePrivacy = result.tradePrivacy;\n          const popupMessage = accountsService.getUpdateTradePrivacyMessageWhenConflict();\n          systemFeedbackService.success(popupMessage, 300, 5000);\n        } else {\n          $scope.showSuccess();\n        }\n      },\n      function (error) {\n        $log.debug('Error updating inventory privacy');\n      }\n    );\n  };\n\n  $scope.updateSocialNetworks = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateSocialNetworks, retryPinUnlockLimit);\n      return;\n    }\n\n    accountsService.beginUpdatePromotionChannels($scope.socialNetworks).then(\n      function () {\n        displayInfoModal(\n          modalConstantsService.default.success.title,\n          modalConstantsService.default.success.body\n        );\n      },\n      function (error) {\n        let errorMsg = error || socialNetworkErrorMessage;\n        if (error && error.errors && error.errors[0] && error.errors[0].message) {\n          const errorCode = error.errors[0].code;\n\n          const errorMsgLangKey = accountConstantsResources.socialErrorCode[errorCode];\n          errorMsg = errorMsgLangKey\n            ? languageResource.get(errorMsgLangKey)\n            : languageResource.get('MessageUnknownError');\n        }\n        displayInfoModal(modalConstantsService.default.error.title, errorMsg);\n      }\n    );\n  };\n\n  $scope.convertDate = function (dateString) {\n    const parsedInt = parseInt(dateString.replace(/(^.*\\()|([+-].*$)/g, ''));\n    const value = new Date(parsedInt);\n    const utcValue = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate());\n    return $filter('datetime')(utcValue); // datetime filter gets the i18n date\n  };\n\n  $scope.currentDate = new Date();\n\n  $scope.calculateAge = function (birthday) {\n    // birthday is a date\n    // http://stackoverflow.com/a/24883386\n    const ageDifMs = Date.now() - birthday.getTime();\n    const ageDate = new Date(ageDifMs); // miliseconds from epoch\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\n  };\n\n  $scope.isAsianBirthdayPickerEnabled = function () {\n    return intl && intl.isAsianLanguage();\n  };\n\n  $scope.isDateTimeI18nPickerEnabled = function () {\n    return (\n      $scope.accountContent.userInfo.data &&\n      $scope.accountContent.userInfo.data.IsDateTimeI18nPickerEnabled\n    );\n  };\n\n  $scope.populateYears = function () {\n    const date = parseInt($filter('date')(new Date(), 'yyyy'));\n    for (let i = 0; i < 100; i++) {\n      $scope.populateAccount.years[i] = {\n        name: $scope.isAsianBirthdayPickerEnabled()\n          ? intl.getFormattedDateString(date - i, languageResource.get('Label.Year'))\n          : date - i,\n        value: date - i\n      };\n    }\n    if ($scope.isDateTimeI18nPickerEnabled()) {\n      $scope.setOrderedBirthdayPart('year', $scope.populateAccount.years);\n    }\n  };\n\n  $scope.populateDays = function () {\n    const year = $scope.personal.birthdate.birthYear;\n    const month = $scope.personal.birthdate.birthMonth - 1;\n    const date = new Date(year, month + 1, 0);\n    if ($scope.personal.birthdate.birthDay > date.getDate()) {\n      $scope.personal.birthdate.birthDay = date.getDate();\n    }\n    $scope.populateAccount.days = [];\n    for (let i = 0; i < date.getDate(); i++) {\n      $scope.populateAccount.days[i] = {\n        name: $scope.isAsianBirthdayPickerEnabled()\n          ? intl.getFormattedDateString(i + 1, languageResource.get('Label.Day'))\n          : i + 1,\n        value: i + 1\n      };\n    }\n\n    if ($scope.isDateTimeI18nPickerEnabled()) {\n      $scope.setOrderedBirthdayPart('day', $scope.populateAccount.days);\n    }\n  };\n\n  $scope.populateMonths = function () {\n    if ($scope.isDateTimeI18nPickerEnabled()) {\n      const intl = Intl && new Intl();\n      const months = intl\n        ? intl.getMonthsI18n('short', languageResource.get('Label.Month'))\n        : languageResource.intl.getMonthsList();\n\n      $scope.setOrderedBirthdayPart('month', months);\n    }\n  };\n\n  $scope.setOrderedBirthdayPart = function (partName, value) {\n    // use type order position to determine which position {partName} dropdown options {value} will be placed (0/1/2)\n    const partIndex = $scope.populateAccount.orderedBirthdayParts.typeOrder[partName];\n\n    $scope.populateAccount.orderedBirthdayParts.parts[partIndex] = {\n      options: value,\n      idName: accountConstantsResources.birthdayPicker[partName].id,\n      className: accountConstantsResources.birthdayPicker[partName].class,\n      birthdayName: accountConstantsResources.birthdayPicker[partName].name\n    };\n  };\n\n  $scope.signOutFromSessions = function () {\n    accountsService.beginAccountSignOut().then(\n      function (result) {\n        displayInfoModal(\n          modalConstantsService.default.success.title,\n          modalConstantsService.secureSignOut.success.body\n        );\n      },\n      function (error) {\n        displayInfoModal(\n          modalConstantsService.default.error.title,\n          modalConstantsService.secureSignOut.error.body\n        );\n      }\n    );\n  };\n\n  $scope.disconnectFromFb = function () {\n    accountsService\n      .beginUpdateSocialDisconnect(accountConstantsResources.socialAuth.providers.facebook)\n      .then(\n        function (result) {\n          $scope.refreshPage();\n        },\n        function (error) {\n          console.info(error);\n          displayInfoModal(\n            modalConstantsService.default.error.title,\n            $scope.processErrorMessage(error)\n          );\n        }\n      );\n  };\n\n  $scope.initiateFbDisconnect = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.initiateFbDisconnect, retryPinUnlockLimit);\n      return;\n    }\n\n    // If the user doesn't have a password set yet, we need to ask them to create password\n    // before disconnecting from FB so they can access account.\n    if ($scope.accountContent.userInfo.data.IsSetPasswordNotificationEnabled) {\n      const modal = $uibModal.open({\n        templateUrl: accountConstantsResources.templates.modal.passwordSet,\n        controller: accountConstantsResources.controllers.modal.passwordSet,\n        resolve: {\n          modalData: {\n            facebookDisconnect: true,\n            changePassword: !$scope.accountContent.userInfo.data.IsSetPasswordNotificationEnabled,\n            doesPasswordExist: $scope.accountContent.userInfo.data.HasValidPasswordSet\n          }\n        }\n      });\n      modal.result.finally(function () {\n        accountsService.beginGetAccountInfo().then(\n          function (result) {\n            $scope.setAccountInfo(result);\n            if (!$scope.accountContent.userInfo.data.IsSetPasswordNotificationEnabled) {\n              $scope.disconnectFromFb();\n            }\n          },\n          function (error) {\n            $scope.accountContent.userInfo = {\n              data: error,\n              hasError: true\n            };\n          }\n        );\n      });\n    } else {\n      $scope.disconnectFromFb();\n    }\n  };\n\n  $scope.disconnectFromProvider = function (provider) {\n    if (provider.toLowerCase() === accountConstantsResources.socialAuth.providers.facebook) {\n      // Facebook disconnect does not require the user to enter their current password to disconnect\n      $scope.initiateFbDisconnect();\n    } else {\n      // Other providers require that the user to enter their current password\n      const modal = $uibModal.open({\n        templateUrl: accountConstantsResources.templates.modal.socialDisconnect,\n        controller: accountConstantsResources.controllers.modal.socialDisconnect,\n        resolve: {\n          modalData: {\n            provider\n          }\n        }\n      });\n      modal.result.then(function () {\n        $window.location.reload();\n      }, angular.noop);\n    }\n  };\n\n  $scope.disconnectFromXbox = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.disconnectFromXbox, retryPinUnlockLimit);\n      return;\n    }\n\n    accountsService.beginDisconnectXbox().then(function (result) {\n      if (result.success) {\n        $scope.refreshPage();\n      } else {\n        displayInfoModal(\n          modalConstantsService.default.success.title,\n          modalConstantsService.disconnectXbox.error.body\n        );\n      }\n    });\n  };\n\n  $scope.chooseGender = function (gender) {\n    $scope.personal.gender =\n      $scope.personal.gender === gender ? $scope.populateAccount.gender.UNKNOWN : gender;\n    $scope.updateGender();\n  };\n\n  $scope.privacyModeInfo = function () {\n    const localizedHelpUrl = $scope.localizedHelpUrl[intl.getRobloxLocale()];\n    if (localizedHelpUrl) {\n      $window.open(localizedHelpUrl, '_blank');\n      return;\n    }\n\n    $window.open($scope.defaultHelpUrl, '_blank');\n  };\n\n  $scope.buyRobux = function (url) {\n    $window.location.href = url;\n  };\n\n  $scope.refreshPage = function () {\n    $scope.getAccountSubscription();\n    $scope.getAccountInfo();\n  };\n\n  $scope.setPassword = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.setPassword, retryPinUnlockLimit);\n      return;\n    }\n\n    const modal = $uibModal.open({\n      templateUrl: accountConstantsResources.templates.modal.passwordSet,\n      controller: accountConstantsResources.controllers.modal.passwordSet,\n      resolve: {\n        modalData: {\n          facebookDisconnect: false,\n          changePassword: !$scope.accountContent.userInfo.data.IsSetPasswordNotificationEnabled,\n          doesPasswordExist: $scope.accountContent.userInfo.data.HasValidPasswordSet\n        }\n      }\n    });\n\n    modal.result.finally(function () {\n      // TODO: Instead of refreshing page, just retrieve new password and update info that facebook disconnect needs\n      $scope.refreshPage();\n    });\n  };\n\n  $scope.changeUsername = function () {\n    // Email doesn't exist\n    if (\n      !$scope.accountContent.userInfo.data.IsEmailOnFile &&\n      $scope.accountContent.userInfo.data.HasFreeNameChange === false\n    ) {\n      $scope.setEmailAddress(modalConstantsService.changeUsername.missingEmail);\n\n      // Email not verified\n    } else if (\n      !$scope.accountContent.userInfo.data.IsEmailVerified &&\n      $scope.accountContent.userInfo.data.HasFreeNameChange === false\n    ) {\n      $scope.verifyEmailAddress(true, modalConstantsService.changeUsername.unverifiedEmail);\n\n      // Currency Operation Error\n    } else if (\n      $scope.accountContent.userInfo.data.HasCurrencyOperationError &&\n      $scope.accountContent.userInfo.data.HasFreeNameChange === false\n    ) {\n      const message = $scope.accountContent.userInfo.data.CurrencyOperationErrorMessage;\n      displayInfoModal(\n        'Currency Service Error',\n        message || 'There was an error with the currency service. Try again later.'\n      );\n\n      // Users Service Issue\n    } else if ($scope.accountContent.userInfo.data.HasFreeNameChange === null) {\n      displayInfoModal(\n        modalConstantsService.default.error.title,\n        modalConstantsService.default.error.body\n      );\n\n      // Insufficient Robux\n    } else if (\n      $scope.accountContent.userInfo.data.RobuxRemainingForUsernameChange > 0 &&\n      $scope.accountContent.userInfo.data.HasFreeNameChange === false\n    ) {\n      const robuxClass = 'icon-robux-16x16';\n      const robuxToBuy = `<span class=\"${robuxClass}\"></span><span>${$scope.accountContent.userInfo.data.RobuxRemainingForUsernameChange}</span>`;\n      var modal = modalService.open({\n        titleText: modalConstantsService.changeUsername.changeUsernameTitle,\n        bodyHtmlUnsafe: modalConstantsService.changeUsername.changeUsernameMessage({\n          robuxToBuy\n        }),\n        actionButtonText: modalConstantsService.changeUsername.changeUsernameBuy,\n        actionButtonShow: true,\n        actionButtonClass: 'btn-primary-md',\n        neutralButtonShow: false,\n        cssClass: 'modal-insufficient-funds'\n      });\n      modal.result.then(function () {\n        $scope.buyRobux($scope.accountData.stateProperties.buyRobuxUrl);\n      });\n\n      // Change Username Modal\n    } else {\n      if ($scope.pinIsEnabledAndLocked()) {\n        $scope.unlockAccountPinSetting($scope.changeUsername, retryPinUnlockLimit);\n        return;\n      }\n\n      var modal = $uibModal.open({\n        templateUrl: accountConstantsResources.templates.modal.usernameUpdate,\n        controller: accountConstantsResources.controllers.modal.usernameUpdate,\n        resolve: {\n          modalData: {\n            userEmail: $scope.accountContent.userInfo.data.UserEmail,\n            accountPinLength: $scope.accountPinContent.pinLength,\n            doesPasswordExist: $scope.accountContent.userInfo.data.HasValidPasswordSet,\n            isFreeUsernameChangeAllowed: $scope.accountContent.userInfo.data.HasFreeNameChange\n          }\n        }\n      });\n\n      modal.result.finally(function () {\n        $scope.refreshPage();\n        // TODO: Instead of refreshing page, just retrieve current username and previous usernames\n      });\n    }\n  };\n\n  $scope.getEmailStatus = () => {\n    if ($scope.accountContent.hasVerifiedEmail) {\n      return accountConstantsResources.emailStatus.verified;\n    }\n\n    if (!$scope.accountContent.userInfo.data?.IsEmailOnFile) {\n      return accountConstantsResources.emailStatus.none;\n    }\n\n    return accountConstantsResources.emailStatus.unverified;\n  };\n\n  $scope.verifyEmailAddress = function (verifiedEmailRequired, contextForVerification) {\n    sendButtonClickEvent(accountConstantsResources.events.verifyEmailBtn);\n\n    $uibModal.open({\n      templateUrl: accountConstantsResources.templates.modal.emailVerify,\n      controller: accountConstantsResources.controllers.modal.emailVerify,\n      resolve: {\n        modalData: {\n          contextForVerification,\n          verifiedEmailRequired\n        }\n      }\n    });\n  };\n\n  $scope.setEmailAddress = function (action) {\n    if ($scope.accountContent.userInfo.data.IsEmailOnFile) {\n      sendButtonClickEvent(accountConstantsResources.events.changeEmailBtn);\n    } else {\n      sendButtonClickEvent(accountConstantsResources.events.addEmailBtn);\n    }\n\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.setEmailAddress, retryPinUnlockLimit);\n      return;\n    }\n\n    const modal = $uibModal.open({\n      templateUrl: accountConstantsResources.templates.modal.emailSet,\n      controller: accountConstantsResources.controllers.modal.emailSet,\n      resolve: {\n        modalData: {\n          isEmailVerified: $scope.accountContent.userInfo.data.IsEmailVerified,\n          emailRequired: !$scope.accountContent.userInfo.data.IsEmailOnFile && action,\n          action,\n          changeEmail: $scope.accountContent.userInfo.data.IsEmailOnFile,\n          over13: $scope.accountContent.userInfo.data.UserAbove13,\n          doesPasswordExist: $scope.accountContent.userInfo.data.HasValidPasswordSet\n        }\n      }\n    });\n\n    modal.result.finally(function () {\n      $scope.refreshPage();\n      // TODO: Instead of refreshing page, update accounts controller so that we can do:\n      // if (!$scope.accountContent.userInfo.data.UserEmail) {\n      //    $scope.accountContent.userInfo.data.UserEmail = updatedEmailInfo.emailAddress;\n      //    $scope.accountContent.userInfo.data.IsEmailOnFile = true;\n      //    $scope.accountContent.hasVerifiedEmail = false; // for the change email case\n      //    $scope.accountContent.hasEmailButNotVerified = true;\n      // }\n    });\n  };\n\n  $scope.confirmEmail = function (message, action) {\n    if ($scope.accountContent.hasEmailButNotVerified) {\n      const modal = modalService.open({\n        titleText: modalConstants.emailVerify.verifiedEmailRequiredTitle,\n        bodyText: message,\n        actionButtonShow: true,\n        actionButtonText: modalConstants.emailVerify.unverifiedEmailButtonText,\n        neutralButtonShow: false\n      });\n\n      modal.result.then(\n        function () {\n          $scope.verifyEmailAddress(false);\n        },\n        function () {\n          // do nothing, they closed the modal\n        }\n      );\n    } else {\n      $scope.setEmailAddress(action);\n    }\n  };\n\n  // Phone Numbers\n\n  $scope.addPhone = function () {\n    sendButtonClickEvent(accountConstantsResources.events.addPhoneBtn);\n    $scope.phoneModalData = {\n      action: modalConstantsService.phoneSet.addActionLabel,\n      isAttemptToChangePhone: false\n    };\n\n    $scope.addOrChangePhone();\n  };\n\n  $scope.changePhone = function () {\n    sendButtonClickEvent(accountConstantsResources.events.changePhoneBtn);\n\n    $scope.phoneModalData = {\n      action: modalConstantsService.phoneSet.editActionLabel,\n      isAttemptToChangePhone: true,\n      countryCode: $scope.accountInfoSettings.countryCode,\n      prefix: $scope.accountInfoSettings.prefix,\n      maskedNumber: $scope.accountInfoSettings.phone\n    };\n\n    $scope.addOrChangePhone();\n  };\n\n  // Blocked Users\n\n  $scope.toggleBlockedUsers = function () {\n    $scope.showBlockedUsers = !$scope.showBlockedUsers;\n  };\n\n  $scope.unBlock = function (user) {\n    accountsService.beginAccountUnblockUser(user.uid).then(\n      function () {\n        // successfully unblocked user\n\n        if ($scope.accountContent.userInfo.data) {\n          $scope.accountContent.userInfo.data.BlockedUsersModel.Total -= 1;\n        }\n        user.hidden = true;\n      },\n      function (error) {\n        $log.error('Failed to unblock user.', error);\n        let userFacingMessage = error?.errors?.length > 0 && error.errors[0].userFacingMessage;\n        const errorText = userFacingMessage || languageResource.get('Response.Dialog.DefaultErrorMessage');\n        systemFeedbackService.warning(errorText, 100, 5000);\n      }\n    );\n  };\n\n  // Notifications\n  $scope.getNotificationSettings = function () {\n    if (\n      $scope.receiverDestinationTypeMapping.length < 1 ||\n      angular.equals($scope.notificationSourceTypeMapping, {})\n    ) {\n      return; // don't make the hcttp request if there are no rdt/nst allowed\n    }\n    accountsService.beginGetNotificationSettings().then(\n      function (result) {\n        $scope.notificationSettings = result;\n        $scope.notificationSettings.updatedDestinationTypeOptOuts = {};\n      },\n      function (error) {\n        $log.debug(error);\n      }\n    );\n  };\n  $scope.destinationNotificationBands = function (destinationType) {\n    return $scope.notificationSettings.notificationBandSettings.filter(function (item) {\n      return item.receiverDestinationType === destinationType;\n    });\n  };\n\n  $scope.isNotificationBandBlacklisted = function (\n    notificationSourceType,\n    notificationDestinationType\n  ) {\n    if (notificationDestinationType === 'MobilePush') {\n      const blacklist =\n        $scope.accountContent.userInfo.data.BlacklistedNotificationSourceTypesForMobilePush;\n      return blacklist.indexOf(notificationSourceType) >= 0;\n    }\n    return false;\n  };\n\n  $scope.setNotificationSettingsUrls = function (notificationsDomain) {\n    accountsService.setNotificationSettingsUrls(notificationsDomain);\n  };\n\n  $scope.setXboxConnectionUrls = function (authDomain) {\n    accountsService.setXboxConnectionUrls(authDomain);\n  };\n\n  $scope.setAuthDomainUrl = function (authDomain) {\n    accountsService.setAuthDomainUrl(authDomain);\n  };\n\n  $scope.setAccountSettingsApiUrl = function (accountSettingsApiDomain) {\n    accountsService.setAccountSettingsApiUrl(accountSettingsApiDomain);\n  };\n\n  $scope.isAvailable = function (receiverDestinationTypeMapping) {\n    if (receiverDestinationTypeMapping.availabilityCheck) {\n      return receiverDestinationTypeMapping.availabilityCheck();\n    }\n    return true;\n  };\n  $scope.isToggleable = function (receiverDestinationTypeMapping) {\n    if (typeof receiverDestinationTypeMapping.isToggleable !== 'undefined') {\n      return receiverDestinationTypeMapping.isToggleable();\n    }\n    return true;\n  };\n  $scope.isDestinationTypeOptedOut = function (receiverDestinationTypeMapping) {\n    if (receiverDestinationTypeMapping.customEnabledCheck) {\n      const value = receiverDestinationTypeMapping.customEnabledCheck(function (isSuccess) {\n        $scope.$apply();\n      });\n      return !value;\n    }\n\n    const { destinationType } = receiverDestinationTypeMapping;\n    return (\n      $scope.notificationSettings.optedOutReceiverDestinationTypes.filter(function (item) {\n        return item === destinationType;\n      }).length > 0\n    );\n  };\n  $scope.toggleDestinationTypeOptOut = function (receiverDestinationTypeMapping) {\n    const { destinationType } = receiverDestinationTypeMapping;\n\n    if ($scope.isDestinationTypeOptedOut(receiverDestinationTypeMapping)) {\n      if (receiverDestinationTypeMapping.customEnablement) {\n        receiverDestinationTypeMapping.customEnablement(function (isSuccess) {\n          $scope.$apply();\n        });\n        return;\n      }\n\n      $scope.notificationSettings.updatedDestinationTypeOptOuts[\n        destinationType\n      ] = receiverDestinationTypeMapping;\n      for (\n        let i = 0;\n        i < $scope.notificationSettings.optedOutReceiverDestinationTypes.length;\n        i++\n      ) {\n        if ($scope.notificationSettings.optedOutReceiverDestinationTypes[i] === destinationType) {\n          $scope.notificationSettings.optedOutReceiverDestinationTypes.splice(i, 1);\n          return;\n        }\n      }\n    } else {\n      if (receiverDestinationTypeMapping.customDisablement) {\n        receiverDestinationTypeMapping.customDisablement(function (isSuccess) {\n          $scope.$apply();\n        });\n        return;\n      }\n\n      $scope.notificationSettings.updatedDestinationTypeOptOuts[\n        destinationType\n      ] = receiverDestinationTypeMapping;\n      $scope.notificationSettings.optedOutReceiverDestinationTypes.push(destinationType);\n    }\n  };\n  $scope.toggleNotificationBand = function (notificationBand) {\n    if (notificationBand.isOverridable) {\n      notificationBand.isSetByReceiver = true;\n      notificationBand.isEnabled = !notificationBand.isEnabled;\n    }\n  };\n\n  $scope.updateNotificationSettings = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.updateNotificationSettings, retryPinUnlockLimit);\n      return;\n    }\n\n    const updatedNotificationBandSettings = $scope.notificationSettings.notificationBandSettings.filter(\n      function (value) {\n        return value.isSetByReceiver;\n      }\n    );\n    const newlyAllowedDestinationTypes = [];\n    const newlyOptedOutDestinationTypes = [];\n    for (const key in $scope.notificationSettings.updatedDestinationTypeOptOuts) {\n      if (\n        $scope.isDestinationTypeOptedOut(\n          $scope.notificationSettings.updatedDestinationTypeOptOuts[key]\n        )\n      ) {\n        newlyOptedOutDestinationTypes.push(key);\n      } else {\n        newlyAllowedDestinationTypes.push(key);\n      }\n    }\n\n    accountsService\n      .beginUpdateNotificationSettings(\n        updatedNotificationBandSettings,\n        newlyOptedOutDestinationTypes,\n        newlyAllowedDestinationTypes\n      )\n      .then(\n        function () {\n          $scope.refreshPage();\n          displayInfoModal(\n            notificationConstantsService.modalText.success.title,\n            notificationConstantsService.modalText.success.body\n          );\n        },\n        function () {\n          // failure\n          displayInfoModal(\n            notificationConstantsService.modalText.error.title,\n            notificationConstantsService.modalText.error.body\n          );\n        }\n      );\n  };\n\n  $scope.setAccountPinSetting = function (result) {\n    $scope.accountPinContent.isEnabled = result.isEnabled;\n    $scope.accountPinContent.unlockedUntil = result.unlockedUntil;\n    $scope.accountPinContent.isUnlocked = false;\n    if (result.isEnabled && result.unlockedUntil) {\n      $scope.accountPinContent.isUnlocked = true;\n      $scope.startTimer(result.unlockedUntil);\n    }\n  };\n\n  $scope.pinIsEnabledAndLocked = function () {\n    return (\n      $scope.accountPinContent.isEnabled &&\n      !$scope.accountPinContent.isUnlocked &&\n      $scope.accountContent.userInfo.data.IsAccountPinEnabled\n    );\n  };\n\n  // GET STATUS OF PIN (ENABLED? UNLOCKED?)\n  $scope.getAccountPinSetting = function () {\n    accountsService.beginGetAccountPinSetting().then(\n      function (result) {\n        if (result) {\n          $scope.setAccountPinSetting(result);\n        }\n      },\n      function (error) {\n        $log.debug(error);\n      }\n    );\n  };\n\n  // LOCK THE PIN - WHEN WE WANT TO LOCK THE PAGE\n  $scope.lockAccountPinSetting = function () {\n    accountsService.beginLockAccountPinSetting().then(\n      function (result) {\n        if (result) {\n          $scope.accountPinContent.isUnlocked = false;\n          $scope.accountPinContent.unlockedUntil = null;\n          $scope.clearTimer();\n        }\n      },\n      function (error) {\n        $log.debug(error);\n      }\n    );\n  };\n\n  // UNLOCK THE PIN - WHEN WE WANT TO UNLOCK THE PAGE\n  $scope.unlockAccountPinSetting = function (callback, retry, errorCallback) {\n    $uibModal\n      .open({\n        templateUrl: accountConstantsResources.templates.modal.pinUnlock,\n        controller: accountConstantsResources.controllers.modal.pinUnlock,\n        resolve: {\n          modalData: {\n            accountPinLength: $scope.accountPinContent.pinLength\n          }\n        }\n      })\n      .result.then(\n        function (result) {\n          if (result.unlockedUntil != null) {\n            $scope.accountPinContent.isEnabled = true;\n            $scope.accountPinContent.isUnlocked = true;\n            $scope.accountPinContent.unlockedUntil = result.unlockedUntil;\n            $scope.startTimer(Math.floor(result.unlockedUntil));\n\n            if (callback) {\n              callback.apply();\n            }\n          }\n        },\n        function (error) {\n          if (errorCallback) {\n            errorCallback.apply();\n          }\n        }\n      );\n  };\n\n  let interval;\n  $scope.startTimer = function (secondsRemaining) {\n    $scope.clearTimer();\n    $scope.accountPinContent.timeRemaining = secondsRemaining;\n    $scope.accountPinContent.timeRemainingMin = '--';\n    $scope.accountPinContent.timeRemainingSec = '--';\n    interval = $interval(function () {\n      $scope.accountPinContent.timeRemaining = $scope.accountPinContent.timeRemaining - 1;\n      $scope.accountPinContent.timeRemainingMin = Math.floor(\n        $scope.accountPinContent.timeRemaining / 60\n      );\n      $scope.accountPinContent.timeRemainingSec = Math.floor(\n        $scope.accountPinContent.timeRemaining - $scope.accountPinContent.timeRemainingMin * 60\n      );\n\n      if ($scope.accountPinContent.timeRemaining <= 0) {\n        $scope.accountPinContent.isUnlocked = false;\n        $scope.accountPinContent.unlockedUntil = null;\n        $scope.clearTimer();\n      }\n    }, 1000);\n  };\n\n  $scope.clearTimer = function () {\n    $interval.cancel(interval);\n  };\n\n  $scope.toggleAccountPinLockSetting = function () {\n    if ($scope.accountPinContent.isUnlocked) {\n      $scope.lockAccountPinSetting();\n    } else {\n      $scope.unlockAccountPinSetting();\n    }\n  };\n  \n  $scope.promptForCreateAccountPin = function () {\n    $uibModal\n      .open({\n        templateUrl: accountConstantsResources.templates.modal.pinCreate,\n        controller: accountConstantsResources.controllers.modal.pinCreate,\n        resolve: {\n          modalData: {\n            userEmail: $scope.accountContent.userInfo.data.UserEmail,\n            accountPinLength: $scope.accountPinContent.pinLength\n          }\n        }\n      })\n      .result.then(\n        function () {\n          $scope.getAccountPinSetting();\n        },\n        function () {}\n      )\n      .finally(function () {\n        $scope.getAccountPinSetting();\n      });\n  }\n  \n  $scope.accountPinSetupAndEnable = function () {\n    // Email doesn't exist\n    if (!$scope.accountContent.userInfo.data.IsEmailOnFile) {\n      $scope.setEmailAddress(modalConstantsService.pinCreate.missingEmail);\n      return false;\n      // Email not verified\n    } else if (!$scope.accountContent.hasVerifiedEmail) {\n      $scope.verifyEmailAddress(true, modalConstantsService.pinCreate.unverifiedEmail);\n      return false;\n      // Toggle Account Pin\n    } else if (!$scope.accountPinContent.isEnabled) {\n      $scope.promptForCreateAccountPin();\n      return false;\n    }\n    return true;\n  }\n  \n  $scope.restoreDefaultParentalSpendControls = function () {\n    if ($scope.parentalSettings.MonthlySpendLimitInUSD !== null || $scope.parentalSettings.SpendNotificationSetting !== accountConstantsResources.spendNotificationSettingTypes.defaultNotifications) {\n      $scope.parentalSettings.MonthlySpendLimitInUSD = null;\n      $scope.parentalSettings.currentMonthlyLimit = null;\n      $scope.parentalSettings.SpendNotificationSetting = accountConstantsResources.spendNotificationSettingTypes.defaultNotifications;\n      $scope.parentalSettings.MonthlyLimitEnabled = false;\n      $scope.parentalSettings.NotificationSettingEnabled = true;\n      return accountsService.beginUpdateParentalSpendControls($scope.parentalSettings);\n    }\n    \n    return Promise.resolve(); // only do restore when there was actual changes\n  }\n\n  $scope.toggleAccountPinEnabledSetting = function () {\n    // Email doesn't exist\n    if (!$scope.accountContent.userInfo.data.IsEmailOnFile) {\n      $scope.setEmailAddress(modalConstantsService.pinCreate.missingEmail);\n\n      // Email not verified\n    } else if (!$scope.accountContent.hasVerifiedEmail) {\n      $scope.verifyEmailAddress(true, modalConstantsService.pinCreate.unverifiedEmail);\n\n      // Toggle Account Pin\n    } else {\n      if ($scope.pinIsEnabledAndLocked()) {\n        $scope.unlockAccountPinSetting($scope.toggleAccountPinEnabledSetting, retryPinUnlockLimit);\n        return;\n      }\n\n      // Delete Account PIN\n      if ($scope.accountPinContent.isEnabled) {\n        $scope.restoreDefaultParentalSpendControls().then(\n          function (result) {\n            accountsService.beginDeleteAccountPinSetting().then(\n              function (result) {\n                if (result) {\n                  $scope.accountPinContent.isEnabled = false;\n                  $scope.accountPinContent.isUnlocked = true;\n                  $scope.accountPinContent.unlockedUntil = null;\n                }\n              },\n              function (error) {\n                displayInfoModal('Error', $scope.processErrorMessage(error));\n                $log.debug(error);\n              }\n            );\n          },\n          function (error) {\n            displayInfoModal('Error', $scope.processErrorMessage(error));\n            $log.debug(error);\n          }\n        );\n\n        // Create Account PIN\n      } else {\n        $scope.promptForCreateAccountPin();\n      }\n    }\n  };\n\n  $scope.getAccountRestrictions = function () {\n    $scope.parentContent.accountRestrictions.isFeatureEnabled =\n      $scope.accountContent.userInfo.data.IsAccountRestrictionsFeatureEnabled;\n    accountsService.beginGetAccountRestrictions().then(\n      function (result) {\n        $scope.accountRestrictions = result;\n      },\n      function (error) {\n        $log.debug('Error getting account restrictions settings');\n      }\n    );\n  };\n\n  $scope.toggleAccountRestrictionsSetting = function () {\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.toggleAccountRestrictionsSetting, retryPinUnlockLimit);\n      return;\n    }\n\n    if ($scope.parentContent.accountRestrictions.isFeatureEnabled) {\n      if (!$scope.accountRestrictions.IsEnabled) {\n        $scope.parentalSettings.ContentRatings = childText;\n        accountsService.beginUpdateContentRatings($scope.parentalSettings).then(\n          function (result) {},\n          function (error) {\n            displayInfoModal(\n              modalConstantsService.default.error.title,\n              accountsService.beginProcessErrorMessage(error)\n            );\n          }\n        );\n        $scope.contactSettings.MasterSetting = offText;\n        $scope.onContactSettingsMasterSettingChange().then(\n          accountsService\n            .beginUpdateAccountRestrictions(!$scope.accountRestrictions.IsEnabled)\n            .then(\n              function () {\n                $scope.accountRestrictions.IsEnabled = !$scope.accountRestrictions.IsEnabled;\n                $scope.showSuccess();\n              },\n              function (error) {\n                displayInfoModal(\n                  modalConstantsService.default.error.title,\n                  accountsService.beginProcessErrorMessage(error)\n                );\n              }\n            )\n        );\n      } else {\n        accountsService.beginUpdateAccountRestrictions(!$scope.accountRestrictions.IsEnabled).then(\n          function () {\n            $scope.accountRestrictions.IsEnabled = !$scope.accountRestrictions.IsEnabled;\n            $scope.showSuccess();\n          },\n          function (error) {\n            displayInfoModal(\n              modalConstantsService.default.error.title,\n              accountsService.beginProcessErrorMessage(error)\n            );\n          }\n        );\n      }\n    }\n  };\n  \n  $scope.toggleMonthlyLimitSetting = function () {\n    if (!$scope.accountPinSetupAndEnable()) {\n      return;\n    }\n    \n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.toggleMonthlyLimitSetting, retryPinUnlockLimit);\n      return;\n    }\n    \n    if ($scope.parentalSettings.MonthlyLimitEnabled == null) {\n      $scope.parentalSettings.MonthlyLimitEnabled = true;\n      $scope.parentalSettings.MonthlySpendLimitInUSD = 0;\n    } else {\n      $scope.parentalSettings.MonthlyLimitEnabled = !$scope.parentalSettings.MonthlyLimitEnabled;\n      if (!$scope.parentalSettings.MonthlyLimitEnabled) {\n        $scope.parentalSettings.MonthlySpendLimitInUSD = null;\n      } else {\n        $scope.parentalSettings.MonthlySpendLimitInUSD = 0;\n      }  \n    }\n    $scope.updateParentalSpendControls();\n  };\n\n  $scope.toggleNotificationSettingEnabled = function () {\n    if (!$scope.accountPinSetupAndEnable()) {\n      return;\n    }\n\n    if ($scope.pinIsEnabledAndLocked()) {\n      $scope.unlockAccountPinSetting($scope.toggleNotificationSettingEnabled, retryPinUnlockLimit);\n      return;\n    }\n\n    if ($scope.parentalSettings.NotificationSettingEnabled == null) {\n      $scope.parentalSettings.NotificationSettingEnabled = true;\n      $scope.parentalSettings.SpendNotificationSetting = accountConstantsResources.spendNotificationSettingTypes.defaultNotifications;\n    } else {\n      $scope.parentalSettings.NotificationSettingEnabled = !$scope.parentalSettings\n        .NotificationSettingEnabled;\n      if (!$scope.parentalSettings.NotificationSettingEnabled) {\n        $scope.parentalSettings.SpendNotificationSetting = accountConstantsResources.spendNotificationSettingTypes.notificationsOff;\n      } else {\n        $scope.parentalSettings.SpendNotificationSetting = accountConstantsResources.spendNotificationSettingTypes.defaultNotifications;\n      }\n    }\n    $scope.updateNotificationFrequency();\n  };\n\n  $scope.setUpSocialDisconnect = function () {\n    accountsService.beginGetSocialConnected().then(\n      function (result) {\n        if (result) {\n          $scope.connectedAccounts.providers = result.providers;\n          if (result.providers && result.providers[0]) {\n            $scope.connectedAccounts.isConnectedAccountsBoxShown = true;\n            result.providers.forEach(function (provider) {\n              if (\n                provider.provider.toLowerCase() ===\n                accountConstantsResources.socialAuth.providers.facebook\n              ) {\n                $scope.hideConnectedAccountsDescription = true;\n                $scope.gigyaUserInfo();\n              }\n            });\n          } else {\n            $scope.connectedAccounts.isConnectedAccountsBoxShown = false;\n          }\n        }\n      },\n      function (error) {\n        displayInfoModal(\n          modalConstantsService.default.error.title,\n          accountsService.beginProcessErrorMessage(error)\n        );\n      }\n    );\n  };\n\n  $scope.getXboxConnection = function () {\n    $scope.xbox.isDisconnectXboxEnabled =\n      $scope.accountContent.userInfo.data.IsDisconnectXboxEnabled;\n    if ($scope.xbox.isDisconnectXboxEnabled) {\n      accountsService.beginGetXboxConnection().then(function (result) {\n        if (result && result.hasConnectedXboxAccount) {\n          $scope.xbox.isDisconnectXboxBoxShown = true;\n        } else {\n          $scope.xbox.isDisconnectXboxBoxShown = false;\n        }\n      });\n    }\n  };\n\n  $scope.setContactSettingsMasterSetting = function () {\n    let result = customText;\n\n    if ($scope.accountContent.userInfo.data.UserAbove13) {\n      if (\n        $scope.contactSettings.PrivateMessagePrivacy === friendsText &&\n        $scope.contactSettings.AppChatPrivacy === friendsText &&\n        $scope.contactSettings.GameChatPrivacy === allUsersText\n      ) {\n        result = defaultText;\n      } else if (\n        $scope.contactSettings.PrivateMessagePrivacy === noOneText &&\n        $scope.contactSettings.AppChatPrivacy === noOneText &&\n        $scope.contactSettings.GameChatPrivacy === noOneText\n      ) {\n        result = offText;\n      }\n    } else if (\n      $scope.contactSettings.PrivateMessagePrivacy === friendsText &&\n      $scope.contactSettings.AppChatPrivacy === friendsText &&\n      $scope.contactSettings.GameChatPrivacy === allUsersText\n    ) {\n      result = defaultText;\n    } else if (\n      $scope.contactSettings.PrivateMessagePrivacy === noOneText &&\n      $scope.contactSettings.AppChatPrivacy === noOneText &&\n      $scope.contactSettings.GameChatPrivacy === noOneText\n    ) {\n      result = offText;\n    }\n\n    $scope.contactSettings.MasterSetting = result;\n  };\n\n  function displayInfoModal(title, body) {\n    return modalService.open({\n      titleText: title,\n      bodyText: body\n    });\n  }\n\n  $scope.getCountryList = function () {\n    accountsService.beginGetCountryList().then(\n      function (result) {\n        if (result.success) {\n          $scope.allActiveCountryList = result.countryList;\n          const defaultOption = {\n            countryId: 0,\n            countryName: commonConstantsService.label.country,\n            localizedName: commonConstantsService.label.country,\n            disabled: true\n          };\n          $scope.allActiveCountryList.unshift(defaultOption);\n        } else {\n          $log.debug('Failed to get list of countries.');\n        }\n      },\n      function (error) {\n        $log.debug(error);\n      }\n    );\n  };\n\n  // success: if request AccountInformationMetadata successfully\n  $scope.getAccountSettingsPolicy = function (success) {\n    if (!success) {\n      $scope.accountSettingsPolicy = accountConstantsResources.accountSettingsPolicyLeastPrivileged;\n      $scope.initializeController();\n      return;\n    }\n    if ($scope.accountInformationMetadata.isAccountSettingsPolicyEnabled) {\n      let success = true;\n      accountsService\n        .beginGetAccountSettingsPolicy()\n        .then(\n          function (result) {\n            $scope.accountSettingsPolicy = result;\n          },\n          function (error) {\n            success = false;\n          }\n        )\n        .finally(function () {\n          $scope.incrementAccountSettingsPolicyCounter(success);\n          $scope.initializeController();\n        });\n    } else {\n      $scope.accountSettingsPolicy = accountConstantsResources.accountSettingsPolicyDefault;\n      $scope.initializeController();\n    }\n  };\n\n  $scope.incrementAccountSettingsPolicyCounter = function (success) {\n    const counterValues = accountConstantsResources.counters;\n    const result = success ? counterValues.success : counterValues.failure;\n    eventTrackerService.fireEvent(counterValues.accountSettingPolicyPrefix + result);\n  };\n\n  $scope.initializeController = function () {\n    if ($scope.accountSettingsPolicy.displayCountryList) {\n      $scope.getCountryList();\n    }\n    $scope.getAccountSubscription();\n    $scope.getAccountInfo();\n  };\n\n  $scope.getAccountInformationMetadataAndInitializeController = function () {\n    let success = true;\n    accountsService\n      .beginGetAccountInformationMetadata()\n      .then(\n        function (result) {\n          $scope.accountInformationMetadata = result;\n        },\n        function (error) {\n          // fallback to default values\n          success = false;\n        }\n      )\n      .finally(function () {\n        $scope.getAccountSettingsPolicy(success);\n      });\n  };\n\n  // go\n  $scope.getAccountInformationMetadataAndInitializeController();\n\n  function sendButtonClickEvent(buttonName) {\n    accountsService.sendButtonClickEvent(buttonName);\n  }\n}\n\naccountSettingsModule.controller('accountsContentController', accountsContentController);\n\nexport default accountsContentController;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction accountsController(\n  $scope,\n  $state,\n  $log,\n  notificationConstantsService,\n  accountsService,\n  commonConstantsService,\n  accountConstantsResources,\n  screentimeConstantsService\n) {\n  'ngInject';\n\n  $scope.accountsTabs = [];\n\n  $scope.currentData = {\n    activeTab: '',\n    stateLabel: ''\n  };\n\n  $scope.initTabs = function () {\n    $scope.accountsTabs = accountConstantsResources.accountTabsDefault;\n    accountsService.getGroupsAndPolicy().then(\n      function (result) {\n        $scope.accountsTabs = [];\n        for (let i = 0; i < result.tabsListing.length; i++) {\n          if (result.getPolicy.displayBillingTab || result.tabsListing[i].suffix !== 'billing') {\n            $scope.accountsTabs.push({\n              name: result.tabsListing[i].suffix,\n              label: result.tabsListing[i].title\n            });\n          }\n        }\n      },\n      function (err) {\n        $log.debug('Error getting account info.');\n      }\n    );\n  };\n\n  // Check if this user has any configurable notification types\n  $scope.mappedDestinationTypes = [];\n  $scope.destinationTypes = notificationConstantsService.destinationTypes;\n\n  const getAllowedNotificationDestinationTypes = function () {\n    accountsService.beginGetAllowedNotificationDestinationTypes().then(\n      function (allowedDestinationTypes) {\n        if (allowedDestinationTypes && allowedDestinationTypes.length > 0) {\n          $scope.mappedDestinationTypes = $scope.destinationTypes.filter(function (\n            destinationType\n          ) {\n            return allowedDestinationTypes.indexOf(destinationType) !== -1;\n          });\n        }\n      },\n      function (err) {\n        $log.debug('Error getting account info');\n      }\n    );\n  };\n\n  accountsService.beginGetAccountInformationMetadata().then(\n    function (result) {\n      if (!result.isAllowedNotificationsEndpointDisabled) {\n        this.getAllowedNotificationDestinationTypes();\n      }\n    },\n    function (err) {\n      this.getAllowedNotificationDestinationTypes();\n    }\n  );\n\n  $scope.accountData = !$scope.accountData\n    ? {\n        stateProperties: {}\n      }\n    : $scope.accountData;\n\n  $scope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n    $scope.currentData.activeTab = toState.name;\n    $scope.currentData.stateLabel = commonConstantsService.tabs[toState.name];\n    if (toState.name === accountConstantsResources.accountTabsNames.parentalControlsCheckStatus) {\n      $scope.currentData.activeTab = \"parental-controls\"\n    } else {\n      screentimeConstantsService.localStorageCleanUp();\n    }\n  });\n\n  $scope.$watch('accountData', function (newValue, oldValue) {\n    $scope.hideMobileTabList = $scope.accountData.stateProperties.hideMobileTabList;\n  });\n\n  $scope.initTabs();\n}\n\naccountSettingsModule.controller('accountsController', accountsController);\n\nexport default accountsController;\n","import angular from 'angular';\nimport { authenticatedUser } from 'header-scripts';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction changeDisplayNameController(\n  $scope,\n  usersService,\n  $uibModalInstance,\n  injectedData,\n  eventStreamService,\n  displayNameLayout,\n  displayNameConstants,\n  $timeout\n) {\n  'ngInject';\n\n  const rawPageData = injectedData.pageData;\n  $scope.modalData = {\n    originalDisplayName: angular.copy(rawPageData.DisplayName),\n    newDisplayName: '',\n    currentDisplayName: angular.copy(rawPageData.DisplayName),\n    displayNameNeedsValidating: '',\n    maxRetryOnMissingValidation: 5,\n    countOnMissingValidationRetry: 0\n  };\n  $scope.modalLayout = angular.copy(displayNameLayout.changeDisplayNameLayout);\n\n  const {\n    eventstreamParams: { changeDisplayNameEvent, successCtx, cancelCtx }\n  } = displayNameConstants;\n\n  $scope.handleResponseFailure = failureResponse => {\n    if (failureResponse?.errors && failureResponse?.errors.length > 0) {\n      const error = failureResponse?.errors[0];\n      const { code } = error;\n      const { errorMessages, errorCodeMapMsg } = displayNameLayout.changeDisplayNameResponse;\n      const nameOfErrorMsg = errorCodeMapMsg[code];\n      $scope.modalLayout.displayErrorMsg = errorMessages[nameOfErrorMsg];\n    }\n  };\n\n  $scope.saveDisplayName = () => {\n    const { originalDisplayName, currentDisplayName } = $scope.modalData;\n    usersService.updateDisplayName(authenticatedUser?.id, currentDisplayName).then(\n      () => {\n        $scope.modalLayout.isRequestFailed = false;\n        rawPageData.DisplayName = currentDisplayName;\n        eventStreamService.sendEventWithTarget(changeDisplayNameEvent, successCtx, {\n          currentDisplayName,\n          originalDisplayName\n        });\n        $uibModalInstance.dismiss();\n      },\n      failureResponse => {\n        $scope.modalLayout.isRequestFailed = true;\n        $scope.modalData.currentDisplayName = originalDisplayName;\n        $scope.handleResponseFailure(failureResponse);\n      }\n    );\n  };\n\n  $scope.close = () => {\n    const { originalDisplayName } = $scope.modalData;\n    eventStreamService.sendEventWithTarget(changeDisplayNameEvent, cancelCtx, {\n      newDisplayName: null,\n      originalDisplayName\n    });\n    $scope.modalData.currentDisplayName = originalDisplayName;\n    $timeout.cancel($scope.timeoutValidateDisplayName);\n    $scope.modalData.displayNameNeedsValidating = '';\n    $uibModalInstance.dismiss();\n  };\n\n  $scope.sendingDNValidation = currentDisplayName => {\n    $scope.modalLayout.isValidating = true;\n    $scope.timeoutValidateDisplayName = $timeout(() => {\n      usersService\n        .validateDisplayName(authenticatedUser?.id, currentDisplayName)\n        .then(\n          () => {\n            $scope.modalLayout.isValidated = true;\n          },\n          failureResponse => {\n            $scope.modalLayout.isValidated = false;\n            $scope.handleResponseFailure(failureResponse);\n          }\n        )\n        .finally(() => {\n          $scope.modalLayout.isValidating = false;\n          $timeout.cancel($scope.timeoutValidateDisplayName);\n          const {\n            displayNameNeedsValidating,\n            maxRetryOnMissingValidation,\n            countOnMissingValidationRetry\n          } = $scope.modalData;\n          console.debug(`displayNameNeedsValidating -- ${displayNameNeedsValidating}`);\n          if (displayNameNeedsValidating) {\n            if (countOnMissingValidationRetry < maxRetryOnMissingValidation) {\n              $scope.modalData.countOnMissingValidationRetry = countOnMissingValidationRetry + 1;\n              $scope.sendingDNValidation(displayNameNeedsValidating);\n            } else {\n              $scope.modalData.countOnMissingValidationRetry = 0;\n            }\n            $scope.modalData.displayNameNeedsValidating = '';\n          }\n        });\n    }, 0);\n  };\n\n  $scope.validateInputChange = () => {\n    $scope.modalLayout.isRequestFailed = false;\n    console.debug(\n      `making change - ${$scope.modalData.currentDisplayName} - isValidating - ${$scope.modalLayout.isValidating} `\n    );\n\n    const { currentDisplayName } = $scope.modalData;\n    if (currentDisplayName.length < $scope.modalLayout.minCharactersForDisplayName) {\n      $scope.modalLayout.isValidated = false;\n      const { errorMessages } = displayNameLayout.changeDisplayNameResponse;\n      $scope.modalLayout.displayErrorMsg = errorMessages.nameTooShort;\n    } else if ($scope.modalLayout.isValidating) {\n      $scope.modalData.displayNameNeedsValidating = currentDisplayName;\n    } else {\n      $scope.sendingDNValidation(currentDisplayName);\n    }\n  };\n\n  $scope.isInputFormInvalidated = () => {\n    return $scope.modalLayout.isRequestFailed || !$scope.modalLayout.isValidated;\n  };\n}\naccountSettingsModule.controller('changeDisplayNameController', changeDisplayNameController);\n\nexport default changeDisplayNameController;\n","import accountSettingsModule from '../accountSettingsModule';\nimport displayNameConstants from '../constants/displayNameConstants';\n\nfunction displayNameController($scope, $uibModal) {\n  'ngInject';\n\n  $scope.changeDisplayName = () => {\n    const modalUrl = displayNameConstants.changeDisplayNameModal.templateUrl;\n    const injectedData = {\n      pageData: $scope.accountContent.userInfo.data\n    };\n    const modalParams = {\n      animation: false,\n      templateUrl: modalUrl,\n      controller: displayNameConstants.changeDisplayNameModal.controllerName,\n      resolve: {\n        injectedData\n      }\n    };\n    $uibModal.open(modalParams).result.then(\n      () => {},\n      () => {}\n    );\n  };\n}\naccountSettingsModule.controller('displayNameController', displayNameController);\n\nexport default displayNameController;\n","import accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\n\nfunction enableAuthenticatorModalController(\n  $scope,\n  $uibModalInstance,\n  modalData,\n  twoStepVerificationService\n) {\n  'ngInject';\n\n  $scope.layout = {\n    code: '',\n    setupToken: modalData.setupToken || '',\n    qrCodeImage: modalData.qrCodeImage || '',\n    manualEntryKey: modalData.manualEntryKey || '',\n    errorMessage: '',\n    passwordErrorMessage: '',\n    password: modalData.password || '',\n    debounce: false,\n    viewQrCode: true,\n    authenticatorCodeLength: modalData.metadata.authenticatorCodeLength,\n    helpLink: modalData.metadata.authenticatorHelpSiteAddress,\n    passwordRequired: modalData.metadata.isPasswordRequiredForEnablingAuthenticator && !modalData.password\n  };\n\n  $scope.canVerify = () => {\n    return (\n      !$scope.layout.errorMessage &&\n      !$scope.layout.debounce &&\n      $scope.layout.code &&\n      $scope.layout.code.length === modalData.metadata.authenticatorCodeLength &&\n      (!$scope.layout.passwordRequired || $scope.layout.password)\n    );\n  };\n\n  $scope.clearErrorMessage = () => {\n    $scope.layout.errorMessage = '';\n  };\n\n  $scope.clearPasswordErrorMessage = () => {\n    $scope.layout.passwordErrorMessage = '';\n  };\n\n  $scope.dismiss = () => {\n    $uibModalInstance.dismiss();\n  };\n\n  $scope.onKeyDown = $event => {\n    if (!twoStepVerificationConstants.digitRegex.test($event.key)) {\n      $event.originalEvent.preventDefault();\n    }\n  };\n\n  $scope.toggleQrCode = () => {\n    $scope.layout.viewQrCode = !$scope.layout.viewQrCode;\n  };\n\n  $scope.openHelpLink = () => {\n    window.open($scope.layout.helpLink);\n  };\n\n  $scope.submit = form => {\n    if ($scope.layout.debounce) {\n      return;\n    }\n\n    if (form.$valid) {\n      form.$setPristine();\n\n      $scope.clearErrorMessage();\n      $scope.layout.debounce = true;\n\n      twoStepVerificationService\n        .enableVerifyAuthenticator($scope.layout.setupToken, $scope.layout.code, $scope.layout.password)\n        .then(() => {\n          modalData.output.password = $scope.layout.password;\n          $uibModalInstance.close(true);\n        })\n        .catch(error => {\n          if (error.code == twoStepVerificationConstants.errorCodes.internal.invalidPassword){\n            $scope.layout.passwordRequired = true;\n            $scope.layout.passwordErrorMessage = error.message;\n          } else {\n            $scope.layout.errorMessage = error.message;\n          }\n          $scope.layout.debounce = false;\n        });\n    }\n  };\n\n  if (!modalData.metadata.isPasswordRequiredForEnablingAuthenticator){\n    twoStepVerificationService\n      .enableAuthenticator($scope.layout.password)\n      .then(data => {\n        $scope.layout.setupToken = data.setupToken;\n        $scope.layout.manualEntryKey = data.manualEntryKey;\n        $scope.layout.qrCodeImage = data.qrCodeImageUrl;\n      })\n      .catch(err => {\n        $scope.layout.errorMessage = err.message;\n      });\n  }\n}\n\naccountSettingsModule.controller(\n  'enableAuthenticatorModalController',\n  enableAuthenticatorModalController\n);\nexport default enableAuthenticatorModalController;\n","import accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\n\nfunction enableTwoStepVerificationModalController(\n  $scope,\n  $uibModalInstance,\n  modalData,\n  twoStepVerificationService\n) {\n  'ngInject';\n\n  $scope.layout = {\n    password: '',\n    errorMessage: '',\n    debounce: false\n  };\n\n  $scope.canSubmit = () => {\n    return $scope.layout.password && !$scope.layout.errorMessage && !$scope.layout.debounce;\n  };\n\n  $scope.clearErrorMessage = () => {\n    $scope.layout.errorMessage = '';\n  };\n\n  $scope.dismiss = () => {\n    $uibModalInstance.dismiss();\n  };\n\n  $scope.submit = form => {\n    if ($scope.layout.debounce) {\n      return;\n    }\n\n    if (form.$valid) {\n      form.$setPristine();\n\n      $scope.clearErrorMessage();\n      $scope.layout.debounce = true;\n      \n      if (modalData.mediaType === twoStepVerificationConstants.mediaTypes.Email) {\n        twoStepVerificationService\n        .enableEmailTwoStepVerification($scope.layout.password)\n          .then(() => {\n            $uibModalInstance.close(true);\n          })\n          .catch(error => {\n            $scope.layout.errorMessage = error.message;\n            $scope.layout.debounce = false;\n          });\n      } else if (modalData.mediaType === twoStepVerificationConstants.mediaTypes.Authenticator) {\n        twoStepVerificationService\n          .enableAuthenticator($scope.layout.password)\n          .then(data => {\n            if (modalData.output) {\n              modalData.output.password = $scope.layout.password;\n              modalData.output.setupToken = data.setupToken;\n              modalData.output.manualEntryKey = data.manualEntryKey;\n              modalData.output.qrCodeImage = data.qrCodeImageUrl;\n            }\n            $uibModalInstance.close(true);\n          })\n          .catch(error => {\n            $scope.layout.errorMessage = error.message;\n            $scope.layout.debounce = false;\n          });\n      }\n    }\n  };\n}\n\naccountSettingsModule.controller(\n  'enableTwoStepVerificationModalController',\n  enableTwoStepVerificationModalController\n);\nexport default enableTwoStepVerificationModalController;\n","import { authenticatedUser } from 'header-scripts';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction personalController(\n  $scope,\n  $window,\n  $log,\n  $document,\n  accountsService,\n  eventStreamService,\n  accountConstantsResources,\n  realtimeService,\n  modalService,\n  modalConstantsService\n) {\n  'ngInject';\n\n  $scope.chooseThemes = function () {\n    accountsService.beginSetConsumerThemes($scope.themeContent.newThemeType).then(\n      function () {\n        // trigger theme update event, in case realtime connection is not ready\n        $document.triggerHandler(accountConstantsResources.updateThemeEvent);\n      },\n      function () {\n        modalService.open({\n          titleText: modalConstantsService.default.error.title,\n          bodyText: modalConstantsService.default.error.body\n        });\n      }\n    );\n  };\n\n  $scope.sendThemeUpdateEvent = function (newThemeType, oldThemeType) {\n    eventStreamService.sendEventWithTarget(\n      eventStreamService.eventNames.account.updateTheme,\n      accountConstantsResources.updateThemeEventContext,\n      {\n        newThemeType,\n        oldThemeType\n      }\n    );\n  };\n\n  function themeUpdateCallback() {\n    // realtime update theme event triggered by another browser for the same account\n    if ($scope.themeContent.oldThemeType === $scope.themeContent.newThemeType) {\n      $scope.getCurrentTheme();\n      return;\n    }\n\n    $scope.sendThemeUpdateEvent($scope.themeContent.newThemeType, $scope.themeContent.oldThemeType);\n    $scope.themeContent.oldThemeType = $scope.themeContent.newThemeType;\n  }\n\n  const themeUpdateCallbacks = {};\n  themeUpdateCallbacks[\n    realtimeService.notificationTypes.userThemeTypeChangeNotification.themeUpdate\n  ] = themeUpdateCallback;\n  realtimeService.listenToNotification(\n    realtimeService.realTimeTypes.userThemeTypeChangeNotification,\n    themeUpdateCallbacks\n  );\n}\naccountSettingsModule.controller('personalController', personalController);\n\nexport default personalController;\n","import accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\n\nfunction recoveryCodesModalController($scope, $uibModalInstance, modalData, twoStepVerificationService) {\n  'ngInject';\n\n  $scope.layout = {\n    password: modalData.password || '',\n    recoveryCodes: null,\n    recoveryCodesLeft: [],\n    recoveryCodesRight: [],\n    activeRecoveryCodeCount: 0,\n    errorMessage: '',\n    loadErrorMessage: '',\n    loading: true,\n    debounce: false,\n    confirmSavedCodes: false,\n    passwordRequired: !modalData.password\n  };\n\n  $scope.canContinue = () => {\n    return $scope.layout.password && !$scope.layout.errorMessage && !$scope.layout.debounce;\n  };\n\n  $scope.clearErrorMessage = () => {\n    $scope.layout.errorMessage = '';\n  };\n\n  $scope.dismiss = () => {\n    // Close without finishing\n    $uibModalInstance.dismiss();\n  };\n\n  $scope.close = () => {\n    // Close after recovery codes have been saved\n    $uibModalInstance.close(true);\n  };\n\n  $scope.formatRecoveryCodes = recoveryCodes => {\n    return recoveryCodes.join('\\n');\n  };\n\n  $scope.submit = form => {\n    if ($scope.layout.debounce) {\n      return;\n    }\n\n    if (form.$valid) {\n      form.$setPristine();\n\n      $scope.clearErrorMessage();\n      $scope.layout.debounce = true;\n\n      twoStepVerificationService\n        .generateRecoveryCodes($scope.layout.password)\n        .then(recoveryCodes => {\n          $scope.layout.recoveryCodes = recoveryCodes;\n          $scope.layout.recoveryCodesLeft = recoveryCodes.slice(0, recoveryCodes.length / 2);\n          $scope.layout.recoveryCodesRight = recoveryCodes.slice(recoveryCodes.length / 2);\n        })\n        .catch(error => {\n          if (error.code == twoStepVerificationConstants.errorCodes.internal.invalidPassword){\n            $scope.layout.passwordRequired = true;\n          }\n          $scope.layout.errorMessage = error.message;\n          $scope.layout.debounce = false;\n        });\n    }\n  };\n\n  twoStepVerificationService\n    .getRecoveryCodesStatus()\n    .then(data => {\n      $scope.layout.activeRecoveryCodeCount = data.activeCount;\n      if (!$scope.layout.passwordRequired && !$scope.layout.activeRecoveryCodeCount) {\n        twoStepVerificationService\n          .generateRecoveryCodes($scope.layout.password)\n          .then(recoveryCodes => {\n            $scope.layout.recoveryCodes = recoveryCodes;\n            $scope.layout.recoveryCodesLeft = recoveryCodes.slice(0, recoveryCodes.length / 2);\n            $scope.layout.recoveryCodesRight = recoveryCodes.slice(recoveryCodes.length / 2);\n          })\n          .catch(error => {\n            if (error.code == twoStepVerificationConstants.errorCodes.internal.invalidPassword){\n              $scope.layout.passwordRequired = true;\n            }\n            $scope.layout.errorMessage = error.message;\n            $scope.layout.debounce = false;\n          })\n          .finally(() => {\n            $scope.layout.loading = false;\n          });\n      } else {\n        $scope.layout.loading = false;\n      }\n    })\n    .catch(err => {\n      $scope.layout.loadErrorMessage = err.message;\n      $scope.layout.loading = false;\n    });\n}\n\naccountSettingsModule.controller('recoveryCodesModalController', recoveryCodesModalController);\nexport default recoveryCodesModalController;\n","import accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\n\nfunction robuxSpendVerifyChallengeModalController(\n  $scope,\n  $uibModalInstance,\n  twoStepVerificationService,\n  urlService,\n  robuxSpendTwoStepResources,\n  languageResource,\n  systemFeedbackService\n) {\n  'ngInject';\n\n  $scope.layout = {\n    codeSent: false,\n    isPendingVerification: false,\n    invalidCodeError: false,\n    invalidCodeErrorMessage: '',\n    supportPageUrl: urlService.getAbsoluteUrl(robuxSpendTwoStepResources.urls.support),\n    supportPageLinkPhrase: '',\n    codeInputPlaceholder: languageResource.get('Label.CodeInputPlaceholderText', {\n      codeLength: robuxSpendTwoStepResources.codeLength\n    }),\n    codeLength: robuxSpendTwoStepResources.codeLength,\n    isChallengeVerified: false\n  };\n\n  $scope.properties = {\n    challengeToken: '',\n    code: ''\n  };\n\n  function getSupportLinkPhrase(supportUrl) {\n    const supportPageLink = `<a class='text-name text-footer contact' href='${supportUrl}' target='_blank'>${languageResource.get(\n      'Label.RobloxSupport'\n    )}</a>`;\n    return languageResource.get('Label.NeedHelpContactSupport', { supportLink: supportPageLink });\n  }\n\n  function showErrorBanner() {\n    $scope.dismiss();\n    const errorMessage = languageResource.get('Response.VerificationError');\n    systemFeedbackService.warning(errorMessage, 100, 6000);\n  }\n\n  function showModalError(code) {\n    let errorMessage = languageResource.get('Response.VerificationError');\n    if (code === twoStepVerificationConstants.errorCodes.internal.invalidCode) {\n      errorMessage = languageResource.get('Response.InvalidCodeTryAgain');\n    }\n    $scope.layout.invalidCodeError = true;\n    $scope.layout.invalidCodeErrorMessage = errorMessage;\n    twoStepVerificationService.sendFrictionEvent(\n      robuxSpendTwoStepResources.events.invalidCodeInput\n    );\n  }\n\n  $scope.dismiss = () => {\n    if ($scope.layout.isChallengeVerified) {\n      const successMessage = languageResource.get('Response.SuccessfulVerificationV2');\n      systemFeedbackService.success(successMessage, 100, 6000);\n      $uibModalInstance.close(true);\n    } else {\n      $uibModalInstance.dismiss();\n    }\n  };\n\n  $scope.resendCode = function () {\n    twoStepVerificationService.sendFrictionEvent(robuxSpendTwoStepResources.events.resendCodeBtn);\n\n    twoStepVerificationService\n      .resendEmailCode($scope.properties.challengeToken)\n      .then(() => {\n        $scope.layout.codeSent = true;\n      })\n      .catch(err => {\n        showModalError(err.code);\n      });\n  };\n\n  $scope.verifyChallengeCode = function () {\n    twoStepVerificationService.sendFrictionEvent(robuxSpendTwoStepResources.events.verifyCodeBtn);\n\n    $scope.layout.isPendingVerification = true;\n    twoStepVerificationService\n      .verifyChallengeCode($scope.properties.challengeToken, $scope.properties.code)\n      .then(verificationToken => {\n        twoStepVerificationService.sendFrictionEvent(\n          robuxSpendTwoStepResources.events.successfulVerification\n        );\n        $scope.layout.isChallengeVerified = true;\n        twoStepVerificationService\n          .redeemVerificationChallengeForSpend($scope.properties.challengeToken, verificationToken)\n          .then(success => {\n            if (success) {\n              $scope.dismiss();\n            } else {\n              // Redeem failed. Show generic error failed message.\n              showErrorBanner();\n            }\n          })\n          .catch(() => {\n            showErrorBanner();\n          });\n      })\n      .catch(err => {\n        showModalError(err.code);\n        $scope.layout.isPendingVerification = false;\n      });\n  };\n\n  $scope.generateChallengeCode = function () {\n    $scope.layout.supportPageLinkPhrase = getSupportLinkPhrase($scope.layout.supportPageUrl);\n\n    twoStepVerificationService\n      .generateChallengeForSpend()\n      .then(challengeToken => {\n        $scope.properties.challengeToken = challengeToken;\n      })\n      .catch(() => {\n        showErrorBanner();\n      });\n  };\n\n  $scope.generateChallengeCode();\n}\n\naccountSettingsModule.controller(\n  'robuxSpendVerifyChallengeModalController',\n  robuxSpendVerifyChallengeModalController\n);\nexport default robuxSpendVerifyChallengeModalController;","import { FormEvents, AccountIntegrityChallengeService } from 'Roblox';\nimport { authenticatedUser } from 'header-scripts';\nimport accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\nimport angular from 'angular';\n\nfunction twoStepVerificationController(\n  twoStepVerificationService,\n  modalService,\n  modalConstantsService,\n  accountsService,\n  accountConstantsResources,\n  languageResource,\n  $uibModal,\n  robuxSpendTwoStepResources,\n  itemTradeTwoStepResources,\n  systemFeedbackService\n) {\n  'ngInject';\n\n  const ctrl = this;\n  ctrl.numberOfFailedTwoStepVerificationChallengeAttempts = 0;\n  ctrl.layout = {\n    loading: false,\n    loadError: '',\n    showRobuxSpendTwoStepVerificationContainer: false,\n    showItemTradeTwoStepVerificationContainer: false\n  };\n\n  ctrl.authenticatorDisabledHelp = {\n    aTagStart: `<a href=\"${twoStepVerificationConstants.urls.authenticatorHelp}\" target=\"_blank\">`,\n    aTagEnd: '</a>'\n  };\n\n  ctrl.metadata = {};\n  ctrl.mediaTypes = twoStepVerificationConstants.mediaTypes;\n  ctrl.enabledMediaTypes = [];\n\n  ctrl.showVerifyButtonForSpend = () => {\n    twoStepVerificationService\n      .getStatusSpendFriction()\n      .then(showFriction => {\n        if (showFriction) {\n          twoStepVerificationService.sendFrictionEvent(\n            robuxSpendTwoStepResources.events.verificationWarningSecurityPageTriggered\n          );\n        }\n        if (!ctrl.layout.showItemTradeTwoStepVerificationContainer) {\n          ctrl.layout.showRobuxSpendTwoStepVerificationContainer = showFriction;\n        }\n      })\n      .catch(() => {\n        // If the GET Status endpoint fails, swallow the error and proceed as normal\n      });\n  }\n\n  ctrl.showVerifyButtonForTrade = () => {\n    twoStepVerificationService\n      .getStatusTradeFriction()\n      .then(showFriction => {\n        if (!ctrl.layout.showRobuxSpendTwoStepVerificationContainer) {\n          ctrl.layout.showItemTradeTwoStepVerificationContainer = showFriction;\n        }\n      })\n      .catch(() => {\n        // If the GET Status endpoint fails, swallow the error and proceed as normal\n      });\n  }\n\n  ctrl.shouldShowRecoveryCodesSection = () => {\n    return ctrl.metadata.authenticatorEnabled && ctrl.enabledMediaTypes.length > 0;\n  };\n\n  ctrl.isMediaTypeEnabled = mediaType => {\n    return ctrl.enabledMediaTypes.includes(mediaType);\n  };\n\n  // TODO: change this to true when we're ready with full Authenticator rollout.\n  ctrl.showEmailWarning = false;\n  ctrl.areBothEmailAndAuthenticatorEnabled = () => {\n    return (\n      ctrl.enabledMediaTypes.includes(twoStepVerificationConstants.mediaTypes.Email) &&\n      ctrl.enabledMediaTypes.includes(twoStepVerificationConstants.mediaTypes.Authenticator)\n    );\n  };\n\n  ctrl.enableEmailTwoStepVerification = () => {\n    let twoStepResult;\n\n    if (ctrl.metadata.isPasswordRequiredForEnablingEmailTwoStepVerification){\n      const modal = $uibModal.open({\n        templateUrl:accountConstantsResources.templates.modal.enableTwoStepVerification,\n        controller:accountConstantsResources.controllers.modal.enableTwoStepVerification,\n        resolve: {\n          modalData: {\n            mediaType: ctrl.mediaTypes.Email,\n          }\n        }\n      });\n      twoStepResult = modal.result;\n    } else {\n      twoStepResult = twoStepVerificationService.enableEmailTwoStepVerification();\n    }\n\n    twoStepResult\n      .then(() => {\n        if (!ctrl.isMediaTypeEnabled(twoStepVerificationConstants.mediaTypes.Email)) {\n          ctrl.enabledMediaTypes.push(twoStepVerificationConstants.mediaTypes.Email);\n        }\n\n      ctrl.showVerifyButtonForSpend();\n      ctrl.showVerifyButtonForTrade();\n      });\n      \n    if (ctrl.metadata.isPasswordRequiredForEnablingEmailTwoStepVerification){\n      twoStepResult\n        .catch(() => {\n          // Modal closed\n        });\n    } else {\n      twoStepResult\n        .catch(error => {\n          if (error.code === twoStepVerificationConstants.errorCodes.internal.invalidPassword){\n            // We haven't asked for their password yet, assume this means the flag\n            // is enabled in the backend and retry.\n            ctrl.metadata.isPasswordRequiredForEnablingEmailTwoStepVerification = true;\n            ctrl.enableEmailTwoStepVerification();\n          } else {\n            modalService.open({\n              titleText: modalConstantsService.default.error.title,\n              bodyText: error.message\n            });\n          }\n        });\n    }\n  };\n\n  ctrl.enableAuthenticator = () => {\n    const modalOutput = {\n      password: '',\n      setupToken: '',\n      qrCodeImage: '',\n      manualEntryKey: ''\n    };\n    const onAuthenticatorEnabled = () => {\n      if (!ctrl.isMediaTypeEnabled(twoStepVerificationConstants.mediaTypes.Authenticator)) {\n        ctrl.enabledMediaTypes.push(twoStepVerificationConstants.mediaTypes.Authenticator);\n        ctrl.generateRecoveryCodes(false, modalOutput.password);\n      }\n\n      ctrl.showVerifyButtonForSpend();\n      ctrl.showVerifyButtonForTrade();\n    };\n\n    if (ctrl.metadata.isPasswordRequiredForEnablingAuthenticator){\n      const enableModal = $uibModal.open({\n        templateUrl:accountConstantsResources.templates.modal.enableTwoStepVerification,\n        controller:accountConstantsResources.controllers.modal.enableTwoStepVerification,\n        resolve: {\n          modalData: {\n            mediaType: ctrl.mediaTypes.Authenticator,\n            output: modalOutput\n          }\n        }\n      });\n\n      enableModal.result.then(() =>{\n        const modal = $uibModal.open({\n          templateUrl: accountConstantsResources.templates.modal.enableAuthenticator,\n          controller: accountConstantsResources.controllers.modal.enableAuthenticator,\n          resolve: {\n            modalData: {\n              metadata: ctrl.metadata,\n              output: modalOutput,\n              password: modalOutput.password,\n              setupToken: modalOutput.setupToken,\n              qrCodeImage: modalOutput.qrCodeImage,\n              manualEntryKey: modalOutput.manualEntryKey\n            }\n          }\n        });\n\n        modal.result\n          .then(onAuthenticatorEnabled)\n          .catch(() => {\n            // Modal closed\n          });\n      })\n      .catch(() => {\n        // Modal closed\n      });\n    } else {\n      const modal = $uibModal.open({\n        templateUrl: accountConstantsResources.templates.modal.enableAuthenticator,\n        controller: accountConstantsResources.controllers.modal.enableAuthenticator,\n        resolve: {\n          modalData: {\n            metadata: ctrl.metadata,\n            output: modalOutput\n          }\n        }\n      });\n\n      modal.result\n        .then(onAuthenticatorEnabled)\n        .catch(() => {\n          // Modal closed\n        });\n    }\n  };\n\n  ctrl.toggleTwoStepVerification = (mediaType, pinUnlocked) => {\n    const currentlyEnabled = ctrl.isMediaTypeEnabled(mediaType);\n    if (FormEvents) {\n      if (currentlyEnabled) {\n        // Disabling\n        accountsService.sendButtonClickEvent(accountConstantsResources.events.toggle2SVOff);\n      } else {\n        // Enabling\n        accountsService.sendButtonClickEvent(accountConstantsResources.events.toggle2SVOn);\n      }\n    }\n\n    if (ctrl.pinLocked && !pinUnlocked) {\n      // The component binding won't update immediately, so we pass pinUnlocked = true to tell the method\n      // the pin has been unlocked, even if the ctrl.pinLocked hasn't been updated yet\n      ctrl.unlockPin(() => ctrl.toggleTwoStepVerification(mediaType, true));\n      return;\n    }\n\n    if (currentlyEnabled) {\n      // Disable two step verification\n      const modal = $uibModal.open({\n        templateUrl: accountConstantsResources.templates.modal.twoStepSet,\n        controller: accountConstantsResources.controllers.modal.twoStepSet,\n        resolve: {\n          modalData: {\n            mediaType,\n            enabledMediaTypes: ctrl.enabledMediaTypes\n          }\n        }\n      });\n\n      modal.result\n        .then(() => {\n          // Modal completed - media type was disabled.\n          const mediaTypeIndex = ctrl.enabledMediaTypes.indexOf(mediaType);\n          if (mediaTypeIndex >= 0) {\n            ctrl.enabledMediaTypes.splice(mediaTypeIndex, 1);\n          }\n        })\n        .catch(() => {\n          // Modal closed\n        });\n    } else if (ctrl.emailStatus === accountConstantsResources.emailStatus.verified) {\n      // Enable two step verification\n      switch (mediaType) {\n        case twoStepVerificationConstants.mediaTypes.Email:\n          ctrl.enableEmailTwoStepVerification();\n          break;\n        case twoStepVerificationConstants.mediaTypes.Authenticator:\n          ctrl.enableAuthenticator();\n          break;\n        default:\n        // Can't enable unknown media type.\n      }\n    } else {\n      modalService.open({\n        titleText: modalConstantsService.emailSet.emailRequiredMessage,\n        bodyText: modalConstantsService.twoStepVerification.missingEmail\n      });\n    }\n  };\n\n  ctrl.generateRecoveryCodes = (pinUnlocked, password) => {\n    if (ctrl.pinLocked && !pinUnlocked) {\n      // The component binding won't update immediately, so we pass pinUnlocked = true to tell the method\n      // the pin has been unlocked, even if the ctrl.pinLocked hasn't been updated yet\n      ctrl.unlockPin(() => ctrl.generateRecoveryCodes(true, password));\n      return;\n    }\n\n    const modal = $uibModal.open({\n      templateUrl: accountConstantsResources.templates.modal.recoveryCodes,\n      controller: accountConstantsResources.controllers.modal.recoveryCodes,\n      // The backdrop parameter prevents the modal from closing when its background is clicked.\n      backdrop: 'static',\n      // The keyboard parameter prevents the modal from closing when the escape key is pressed\n      keyboard: false,\n      resolve : {\n        modalData: {\n          password\n        }\n      }\n    });\n\n    modal.result\n      .then(() => {\n        // Modal closed, user confirmed codes saved\n      })\n      .catch(() => {\n        // Modal dismissed\n      })\n      .finally(() => {\n        twoStepVerificationService\n          .getRecoveryCodesStatus()\n          .then(data => {\n            ctrl.activeRecoveryCodeCount = data.activeCount;\n            ctrl.recoveryCodeCreated = data.created;\n          })\n          .catch(() => {\n            ctrl.activeRecoveryCodeCount = null;\n            ctrl.recoveryCodeCreated = null;\n          });\n      });\n  };\n\n  ctrl.showErrorBanner = () => {\n    const errorMessage = languageResource.get('Response.VerificationError');\n    systemFeedbackService.warning(errorMessage, 100, 6000);\n  };\n\n  ctrl.receiveTwoStepChallengeTokenForSpend = tokenData => {\n    twoStepVerificationService\n      .redeemVerificationChallengeForSpend(ctrl.challengeToken, tokenData.verificationToken)\n      .then(success => {\n        if (success) {\n          const successMessage = languageResource.get('Response.SuccessfulVerificationV2');\n          systemFeedbackService.success(successMessage, 100, 6000);\n          ctrl.layout.showRobuxSpendTwoStepVerificationContainer = false;\n          ctrl.layout.showItemTradeTwoStepVerificationContainer = false;\n        } else {\n          // Redeem failed. Show generic error failed message.\n          ctrl.showErrorBanner();\n        }\n      })\n      .catch(() => {\n        ctrl.showErrorBanner();\n      });\n  };\n\n  ctrl.receiveTwoStepChallengeTokenForTrade = tokenData => {\n    twoStepVerificationService\n      .redeemVerificationChallengeForTrade(ctrl.challengeToken, tokenData.verificationToken)\n      .then(success => {\n        if (success) {\n          const successMessage = languageResource.get('Response.SuccessfulVerificationV2');\n          systemFeedbackService.success(successMessage, 100, 6000);\n          ctrl.layout.showRobuxSpendTwoStepVerificationContainer = false;\n          ctrl.layout.showItemTradeTwoStepVerificationContainer = false;\n        } else {\n          // Redeem failed. Show generic error failed message.\n          ctrl.showErrorBanner();\n        }\n      })\n      .catch(() => {\n        ctrl.showErrorBanner();\n      });\n  };\n\n  ctrl.handleInvalidatedTwoStepVerificationChallengeForSpend = () => {\n    const MAX_RETRY_ATTEMPTS = 3;\n    // Allow the user to try again once if the session is invalidated. If this doesn't work don't show again.\n    if (ctrl.numberOfFailedTwoStepVerificationChallengeAttempts < MAX_RETRY_ATTEMPTS) {\n      ctrl.renderTwoStepVerificationChallengeForSpend();\n    }\n    else {\n      ctrl.showErrorBanner();\n    }\n    ctrl.numberOfFailedTwoStepVerificationChallengeAttempts += 1;\n  };\n\n  ctrl.handleInvalidatedTwoStepVerificationChallengeForTrade = () => {\n    const MAX_RETRY_ATTEMPTS = 3;\n    // Allow the user to try again once if the session is invalidated. If this doesn't work don't show again.\n    if (ctrl.numberOfFailedTwoStepVerificationChallengeAttempts < MAX_RETRY_ATTEMPTS) {\n      ctrl.renderTwoStepVerificationChallengeForTrade();\n    }\n    else {\n      ctrl.showErrorBanner();\n    }\n    ctrl.numberOfFailedTwoStepVerificationChallengeAttempts += 1;\n  };\n\n  ctrl.renderTwoStepVerificationChallengeForSpend = () => {\n    twoStepVerificationService\n      .generateChallengeForSpend()\n      .then(challengeToken => {\n        const { TwoStepVerification } = AccountIntegrityChallengeService;\n        ctrl.challengeToken = challengeToken;\n        TwoStepVerification.renderChallenge({\n          containerId: '2sv-popup-container',\n          userId: authenticatedUser.id,\n          challengeId: challengeToken,\n          actionType: TwoStepVerification.ActionType.RobuxSpend,\n          renderInline: false,\n          shouldShowRememberDeviceCheckbox: false,\n          shouldDynamicallyLoadTranslationResources: false,\n          onChallengeCompleted: ctrl.receiveTwoStepChallengeTokenForSpend,\n          onChallengeInvalidated: ctrl.handleInvalidatedTwoStepVerificationChallengeForSpend,\n          onModalChallengeAbandoned: angular.noop\n        });\n      })\n      .catch(() => {\n        ctrl.showErrorBanner();\n      });\n  };\n\n  ctrl.renderTwoStepVerificationChallengeForTrade = () => {\n    twoStepVerificationService\n      .generateChallengeForTrade()\n      .then(challengeToken => {\n        const { TwoStepVerification } = AccountIntegrityChallengeService;\n        ctrl.challengeToken = challengeToken;\n        TwoStepVerification.renderChallenge({\n          containerId: '2sv-popup-container',\n          userId: authenticatedUser.id,\n          challengeId: challengeToken,\n          actionType: TwoStepVerification.ActionType.ItemTrade,\n          renderInline: false,\n          shouldShowRememberDeviceCheckbox: false,\n          shouldDynamicallyLoadTranslationResources: false,\n          onChallengeCompleted: ctrl.receiveTwoStepChallengeTokenForTrade,\n          onChallengeInvalidated: ctrl.handleInvalidatedTwoStepVerificationChallengeForTrade,\n          onModalChallengeAbandoned: angular.noop\n        });\n      })\n      .catch(() => {\n        ctrl.showErrorBanner();\n      });\n  };\n\n  ctrl.robuxSpendVerifyChallenge = () => {\n    twoStepVerificationService.sendFrictionEvent(\n      robuxSpendTwoStepResources.events.codeInputModalTriggered\n    );\n    twoStepVerificationService.sendFrictionEvent(\n      robuxSpendTwoStepResources.events.verifySecurityPageBtn\n    );\n\n    if (ctrl.metadata.isUsingTwoStepWebviewComponent) {\n      ctrl.renderTwoStepVerificationChallengeForSpend();\n    } else {\n      const modal = $uibModal.open({\n        templateUrl: accountConstantsResources.templates.modal.robuxSpendVerifyChallenge,\n        controller: accountConstantsResources.controllers.modal.robuxSpendVerifyChallenge\n      });\n  \n      modal.result\n        .then(success => {\n          if (success) {\n            ctrl.layout.showRobuxSpendTwoStepVerificationContainer = false;\n            ctrl.layout.showItemTradeTwoStepVerificationContainer = false;\n          } else {\n            modalService.open({\n              titleText: modalConstantsService.default.error.title,\n              bodyText: modalConstantsService.default.error.body\n            });\n          }\n        })\n        .catch(() => {\n          // Modal closed\n        });\n    }\n  };\n\n  ctrl.itemTradeVerifyChallenge = () => {\n    twoStepVerificationService.sendFrictionEvent(\n      itemTradeTwoStepResources.events.codeInputModalTriggered\n    );\n    twoStepVerificationService.sendFrictionEvent(\n      itemTradeTwoStepResources.events.verifySecurityPageBtn\n    );\n\n    ctrl.renderTwoStepVerificationChallengeForTrade();\n  };\n\n  const loadError = () => {\n    ctrl.layout.loadError = languageResource.get('Response.GeneralError');\n    ctrl.layout.loading = false;\n  };\n\n  const init = () => {\n    ctrl.layout.loading = true;\n\n    twoStepVerificationService\n      .getMetadata()\n      .then(metadata => {\n        ctrl.metadata = metadata;\n\n        if (metadata.twoStepVerificationEnabled) {\n          twoStepVerificationService\n            .getTwoStepVerificationConfiguration()\n            .then(configuration => {\n              const enabledMediaTypes = [];\n\n              configuration.methods.forEach(method => {\n                if (method.enabled && twoStepVerificationConstants.mediaTypes[method.mediaType]) {\n                  enabledMediaTypes.push(method.mediaType);\n                }\n              });\n\n              ctrl.enabledMediaTypes = enabledMediaTypes;\n              ctrl.layout.loading = false;\n            })\n            .catch(loadError);\n\n          ctrl.showVerifyButtonForSpend();\n          ctrl.showVerifyButtonForTrade();\n        } else {\n          ctrl.layout.loadError = languageResource.get('Response.FeatureDisabled');\n          ctrl.layout.loading = false;\n        }\n\n        if (metadata.authenticatorEnabled) {\n          twoStepVerificationService\n            .getRecoveryCodesStatus()\n            .then(data => {\n              ctrl.activeRecoveryCodeCount = data.activeCount;\n              ctrl.recoveryCodeCreated = data.created;\n            })\n            .catch(() => {\n              ctrl.activeRecoveryCodeCount = null;\n              ctrl.recoveryCodeCreated = null;\n            });\n        }\n      })\n      .catch(loadError);\n  };\n\n  ctrl.$onInit = init;\n}\n\naccountSettingsModule.controller('twoStepVerificationController', twoStepVerificationController);\nexport default twoStepVerificationController;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction accountPinStatus(accountConstantsResources) {\n  'ngInject';\n\n  return {\n    restrict: 'A',\n    templateUrl: accountConstantsResources.templates.accountPinStatus\n  };\n}\n\naccountSettingsModule.directive('accountPinStatus', accountPinStatus);\n\nexport default accountPinStatus;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction accountStateProperties() {\n  'ngInject';\n\n  return {\n    restrict: 'A',\n    link(scope, element, attrs) {\n      scope.accountData = !scope.accountData\n        ? {\n            stateProperties: {}\n          }\n        : scope.accountData;\n      scope.accountData.stateProperties = {\n        cancelRenewalUrl: attrs.cancelrenewalurl,\n        upgradeMemberShipUrl: attrs.upgrademembershipurl,\n        isRobloxCreditEnabled: attrs.isRobloxCreditEnabled,\n        hideMobileTabList: attrs.hidemobiletablist === 'true',\n        buyRobuxUrl: attrs.buyrobuxurl,\n        isTwoStepToggleEnabled: attrs.isTwoStepToggleEnabled,\n        inApp: attrs.inApp === 'true',\n        isPersonalSettingRefactorEnabled: attrs.isCountryLocaleRefactorEnabled === 'true',\n        defaultThemeType: attrs.defaultThemeType,\n        isMyAccountSectionHeaderHidden: attrs.isMyAccountSectionHeaderHidden === 'true'\n      };\n    }\n  };\n}\n\naccountSettingsModule.directive('accountStateProperties', accountStateProperties);\n\nexport default accountStateProperties;\n","import accountSettingsModule from '../accountSettingsModule';\nimport { Resources } from 'Roblox';\n\nfunction accountValidUsername(httpService, modalConstantsService) {\n  'ngInject';\n\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link(scope, ele, attrs, ctrl) {\n      scope.usernameValidationRequestNum = 0;\n      scope.onChange = function() {\n        const requestNum = ++scope.usernameValidationRequestNum;\n        const localIsEmpty = scope.user.username === '' || angular.isUndefined(scope.user.username);\n        let localValidationMessage = '';\n        let hasLocalValidationFailure = false;\n\n        if (localIsEmpty) {\n          hasLocalValidationFailure = true;\n          localValidationMessage = Resources.AnimatedSignupFormValidator.usernameRequired;\n        } else {\n          localValidationMessage = Roblox.SignupFormValidatorGeneric.getInvalidUsernameMessage(\n            scope.user.username\n          );\n          if (localValidationMessage !== '') {\n            hasLocalValidationFailure = true;\n          }\n        }\n\n        ctrl.$setValidity('validusername', !hasLocalValidationFailure);\n        if (hasLocalValidationFailure) {\n          ctrl.$usernameMessage = localValidationMessage;\n        } else {\n          ctrl.$usernameMessage = ''; // clear old username message\n\n          const urlConfig = {\n            url: `${Roblox.EnvironmentUrls.authApi}/v1/usernames/validate`\n          };\n\n          const params = {\n            username: scope.user.username,\n            context: 'UsernameChange'\n          };\n\n          httpService.httpPost(urlConfig, params).then(function (result) {\n            if (requestNum !== scope.usernameValidationRequestNum) {\n              return;\n            }\n            let unique = true;\n            let valid = true;\n            let validationMessage = '';\n\n            if (result.code === 1) {\n              unique = false;\n              validationMessage = Resources.AnimatedSignupFormValidator.alreadyTaken;\n            }\n\n            if (result.code === 2) {\n              valid = false;\n              validationMessage = Resources.AnimatedSignupFormValidator.cantBeUsed;\n            }\n\n            if (result.code === 10) {\n              valid = false;\n              validationMessage = Resources.AnimatedSignupFormValidator.cantBeUsedPii;\n            }\n\n            ctrl.$setValidity('unique', unique);\n            ctrl.$setValidity('moderated', valid);\n            if (ctrl.$invalid) {\n              if (validationMessage !== '') {\n                ctrl.$usernameMessage = validationMessage;\n              }\n            } else {\n              ctrl.$usernameMessage = '';\n            }\n          });\n        }\n      };\n    }\n  };\n}\n\naccountSettingsModule.directive('accountValidUsername', accountValidUsername);\n\nexport default accountValidUsername;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction userAccountBase(accountConstantsResources) {\n  'ngInject';\n\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: accountConstantsResources.templates.userAccountBase\n  };\n}\n\naccountSettingsModule.directive('userAccountBase', userAccountBase);\n\nexport default userAccountBase;\n","import { EnvironmentUrls, EventStream } from 'Roblox';\nimport { authenticatedUser } from 'header-scripts';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction accountsService(\n  $q,\n  $log,\n  httpService,\n  accountConstantsResources,\n  formFieldsMappingService,\n  languageResource,\n  errorMessageService\n) {\n  'ngInject';\n\n  const formServiceUrls = {\n    getAccountInfoUrl: '/my/settings/json',\n    accountSignoutUrl: '/authentication/signoutfromallsessionsandreauthenticate',\n    accountAskParentToVerifyAge: '/my/account/AskParentVerifyAge',\n    getAllowedDestinationTypes: '/account/settings/allowed-notification-destinations',\n    getAccountSettingsGroups: '/account/settings/settings-groups',\n    getAccountSubscriptionUrl: `${EnvironmentUrls.premiumFeaturesApi}/v1/users/{userid}/subscriptions`,\n\n    // V2\n    accountAppChatPrivacy: '/account/settings/app-chat-privacy',\n    accountGameChatPrivacy: '/account/settings/game-chat-privacy',\n    accountPrivateMessagePrivacy: '/account/settings/private-message-privacy',\n    accountPrivateServerInvitePrivacy: '/account/settings/private-server-invite-privacy',\n    accountFollowMePrivacy: '/account/settings/follow-me-privacy',\n    accountAccountRestrictions: '/account/settings/account-restrictions',\n    accountCountry: '/account/settings/account-country',\n    accountPhone: `${EnvironmentUrls.accountInformationApi}/v1/phone`,\n    accountPhoneDelete: `${EnvironmentUrls.accountInformationApi}/v1/phone/delete`,\n    accountResendPhoneCode: `${EnvironmentUrls.accountInformationApi}/v1/phone/resend`,\n    accountVerifyPhone: `${EnvironmentUrls.accountInformationApi}/v1/phone/verify`,\n    getCountryListUrl: '/account/settings/countries',\n    accountDescription: `${EnvironmentUrls.accountInformationApi}/v1/description`,\n    accountBirthdate: `${EnvironmentUrls.accountInformationApi}/v1/birthdate`,\n    accountGender: `${EnvironmentUrls.accountInformationApi}/v1/gender`,\n    accountPromotionChannels: `${EnvironmentUrls.accountInformationApi}/v1/promotion-channels`,\n    accountInformationMetadata: `${EnvironmentUrls.accountInformationApi}/v1/metadata`,\n    accountChangeUsernameV2: `${EnvironmentUrls.accountInformationApi}/v1/username`,\n    authenticationMetadata: `${EnvironmentUrls.accountInformationApi}/v1/metadata`,\n    accountSettingsPolicy: `${EnvironmentUrls.universalAppConfigurationApi}/v1/behaviors/account-settings-ui/content`,\n    screentimeAuthorizationPolicy: `${EnvironmentUrls.universalAppConfigurationApi}/v1/behaviors/intl-auth-compliance/content`,\n    screentimeRolloutPolicy: `${EnvironmentUrls.universalAppConfigurationApi}/v1/behaviors/parent-screen-time-restrictions/content`,\n    restrictedHoursServiceUrl: `${EnvironmentUrls.restrictedHoursServiceApi}/v1/restrictions`,\n    accountVoiceChatPolicyUrl: `${EnvironmentUrls.voiceApi}/v1/settings`,\n    accountVoiceChatUserOptInUrl: `${EnvironmentUrls.voiceApi}/v1/settings/user-opt-in`,\n    getParentalSpendControlsUrl: `${EnvironmentUrls.billingApi}/v1/parental-controls/get-settings`,\n    updateParentalSpendControlsUrl: `${EnvironmentUrls.billingApi}/v1/parental-controls/update`\n  };\n\n  const pinErrorMapper = errorMessageService.createErrorMapper(\n    {\n      // error messages based on ErrorCode Enum from ApiSites\\Roblox.Api.Authentication\\Roblox.Api.Authentication\\Controllers\\V1\\AccountPinController.cs\n      0: languageResource.get('Message.Error.System'),\n      1: languageResource.get('Message.Error.NoPin'),\n      2: languageResource.get('Message.Error.AccountLocked'),\n      3: languageResource.get('Message.Error.TooManyRequests'),\n      4: languageResource.get('Message.Error.IncorrectPin'),\n      5: languageResource.get('Message.Error.AccountHasPin'),\n      6: languageResource.get('Message.Error.NoVerifiedEmail'),\n      7: languageResource.get('Message.Error.InvalidPinFormat')\n    },\n    languageResource.get('Message.Error.Default')\n  );\n\n  const phoneErrorMapper = errorMessageService.createErrorMapper(\n    {\n      // error messages based on ErrorCode Enum from ApiSites\\Roblox.AccountInformation.Api\\Roblox.AccountInformation.Api\\Controllers\\V1\\PhoneInformationController.cs\n      0: languageResource.get('Response.GeneralError'),\n      1: languageResource.get('Response.FeatureDisabled'),\n      2: languageResource.get('Response.InvalidPhoneTryAgain'),\n      3: languageResource.get('Response.NumberAlreadyAssociated'),\n      4: languageResource.get('Response.PinRequired'),\n      5: languageResource.get('Response.IncorrectPasswordTryAgain'),\n      6: languageResource.get('Response.IncorrectCodeTooManyTimes'),\n      7: languageResource.get('Response.FeatureDisabled'),\n      8: languageResource.get('Respones.InvalidCodePhone')\n    },\n    languageResource.get('Message.Error.Default')\n  );\n\n  const emailErrorMapper = errorMessageService.createErrorMapper(\n    {\n      // error messages based on EmailErrors Enum from ApiSites\\Roblox.AccountSettings.Api\\Roblox.AccountSettings.Api\\ResponseEnums\\EmailErrors.cs\n      0: languageResource.get('Message.Error.Email.Unknown'),\n      1: languageResource.get('Message.Error.Email.PinLocked'),\n      2: languageResource.get('Message.Error.Email.FeatureDisabled'),\n      3: languageResource.get('Message.Error.Email.TooManyAccounts'),\n      4: languageResource.get('Message.Error.Email.SameEmail'),\n      5: languageResource.get('Message.Error.Email.AlreadyVerified'),\n      6: languageResource.get('Message.Error.Email.TooManyUpdates'),\n      7: languageResource.get('Message.Error.Email.TooManyVerify'),\n      8: languageResource.get('Message.Error.Email.IncorrectPassword'),\n      9: languageResource.get('Message.Error.Email.InvalidEmail'),\n      10: languageResource.get('Message.Error.Email.NoEmailAssociated')\n    },\n    languageResource.get('Message.Error.Default')\n  );\n\n  const birthdateErrorMapper = errorMessageService.createErrorMapper(\n    {\n      // error messages based on ErrorCodes from ApiSites\\Roblox.AccountInformation.Api\\Roblox.AccountInformation.Api\\Controllers\\V1\\AccountInformationController.cs\n      0: languageResource.get('Response.GeneralError'),\n      2: languageResource.get('Response.PinRequired'),\n      3: languageResource.get('Response.FeatureDisabled'),\n      8: languageResource.get('Response.IncorrectPasswordTryAgain')\n    },\n    languageResource.get('Message.Error.Default')\n  );\n\n  const sendData = function (url, params, method, excludeCacheHeaders) {\n    const urlConfig = {\n      url,\n      withCredentials: true\n    };\n    let data;\n    switch (method) {\n      case httpService.methods.get:\n        urlConfig.noCache = !excludeCacheHeaders;\n        return httpService.httpGet(urlConfig, params);\n      case httpService.methods.post:\n        urlConfig.headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (params != null) {\n          data = $.param(params);\n        }\n        return httpService.httpPost(urlConfig, data);\n      case httpService.methods.patch:\n        urlConfig.headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (params != null) {\n          data = $.param(params);\n        }\n        return httpService.httpPatch(urlConfig, data);\n      case httpService.methods.delete:\n        return httpService.httpDelete(urlConfig, params);\n    }\n  };\n\n  const self = {\n    setNotificationSettingsUrls(notificationsDomain) {\n      formServiceUrls.getNotificationSettings = `${notificationsDomain}/v2/notifications/get-settings`;\n      formServiceUrls.updateNotificationBandSettings = `${notificationsDomain}/v2/notifications/update-notification-settings`;\n      formServiceUrls.removeDestinationTypeOptOut = `${notificationsDomain}/v2/notifications/receiver-destination-types/allow`;\n      formServiceUrls.addDestinationTypeOptOut = `${notificationsDomain}/v2/notifications/receiver-destination-types/opt-out`;\n    },\n\n    setXboxConnectionUrls(authDomain) {\n      formServiceUrls.xboxConnection = `${authDomain}/v1/xbox/connection`;\n      formServiceUrls.disconnectXbox = `${authDomain}/v1/xbox/disconnect`;\n    },\n\n    setAccountSettingsApiUrl(accountSettingsApiDomain) {\n      formServiceUrls.accountTradePrivacyUrl = `${accountSettingsApiDomain}/v1/trade-privacy`;\n      formServiceUrls.accountTradeValueUrl = `${accountSettingsApiDomain}/v1/trade-value`;\n      formServiceUrls.accountInventoryPrivacyUrl = `${accountSettingsApiDomain}/v1/inventory-privacy`;\n      formServiceUrls.contentRatingsUrl = `${accountSettingsApiDomain}/v1/content-restriction`;\n      formServiceUrls.getOrUpdateEmailUrl = `${accountSettingsApiDomain}/v1/email`;\n      formServiceUrls.sendVerifyEmailUrl = `${accountSettingsApiDomain}/v1/email/verify`;\n      formServiceUrls.accountSettingsApiDomain = accountSettingsApiDomain;\n      formServiceUrls.accountConsumerThemesUrl = `${accountSettingsApiDomain}/v1/themes/user`;\n      formServiceUrls.accountAvailableThemesUrl = `${accountSettingsApiDomain}/v1/themes/types`;\n      formServiceUrls.updatePromotionChannelsUrl = `${accountSettingsApiDomain}/v1/promotion-channels`;\n      formServiceUrls.accountVisibilityPrivacyUrl = `${accountSettingsApiDomain}/v1/visibility-privacy`;\n      formServiceUrls.accountSettingsMetadataUrl = `${accountSettingsApiDomain}/v1/account/settings/metadata`;\n    },\n\n    setAccountInformationUrl(accountInformationApiDomain) {\n      formServiceUrls.accountDescription = `${accountInformationApiDomain}/v1/description`;\n      formServiceUrls.accountBirthdate = `${accountInformationApiDomain}/v1/birthdate`;\n      formServiceUrls.accountGender = `${accountInformationApiDomain}/v1/gender`;\n      formServiceUrls.accountPromotionChannels = `${accountInformationApiDomain}/v1/promotion-channels`;\n      formServiceUrls.accountInformationMetadata = `${accountInformationApiDomain}/v1/metadata`;\n      formServiceUrls.accountPhone = `${accountInformationApiDomain}/v1/phone`;\n      formServiceUrls.accountPhoneDelete = `${accountInformationApiDomain}/v1/phone/delete`;\n      formServiceUrls.accountResendPhoneCode = `${accountInformationApiDomain}/v1/phone/resend`;\n      formServiceUrls.accountVerifyPhone = `${accountInformationApiDomain}/v1/phone/verify`;\n    },\n\n    setAuthDomainUrl(authDomain) {\n      formServiceUrls.accountPinUrl = `${authDomain}/v1/account/pin`;\n      formServiceUrls.accountPinLockUrl = `${authDomain}/v1/account/pin/lock`;\n      formServiceUrls.accountPinUnlockUrl = `${authDomain}/v1/account/pin/unlock`;\n      formServiceUrls.connectedSocialAuthUrl = `${authDomain}/v1/social/connected-providers`;\n      formServiceUrls.socialAuthDomainUrl = `${authDomain}/v1/social`;\n      formServiceUrls.accountChangePasswordUrl = `${authDomain}/v2/user/passwords/change`;\n      formServiceUrls.authenticationMetadata = `${authDomain}/v1/metadata`;\n      formServiceUrls.accountChangeUsernameV2 = `${authDomain}/v1/username`;\n    },\n\n    setUniversalAppConfigurationUrl(universalAppConfigurationDomain) {\n      formServiceUrls.accountSettingsPolicy = `${universalAppConfigurationDomain}/v1/behaviors/account-settings-ui/content`;\n      formServiceUrls.screentimeAuthorizationPolicy = `${universalAppConfigurationDomain}/v1/behaviors/intl-auth-compliance/content`;\n      formServiceUrls.screentimeRolloutPolicy = `${universalAppConfigurationDomain}/v1/behaviors/parent-screen-time-restrictions/content`;\n    },\n\n    templateUrls: {\n      passwordChangedUrl: 'user-account-password-changed.html',\n      passwordErrorUrl: 'user-account-password-error.html',\n      accountPhoneChangedUrl: 'user-account-phone-changed.html',\n      accountVerifySmsSentUrl: 'user-account-verify-sms-sent.html',\n      accountEmailChangedUrl: 'user-account-email-changed.html',\n      accountVerifySentUrl: 'user-account-verify-sent.html',\n      accountParentNeedNeedEmailUrl: 'user-account-parent-need-email.html',\n      accountAgeChangeConfirmationUrl: 'user-account-age-change-confirmation.html',\n      account2SvEnabledUrl: 'user-account-2sv-enabled.html',\n      account2SvDisableConfirmationUrl: 'user-account-2sv-disable-confirmation.html'\n    },\n\n    // form population\n    populateAccount: formFieldsMappingService,\n\n    beginGetCountryList() {\n      let params;\n      let url;\n      url = formServiceUrls.getCountryListUrl;\n      return sendData(url, params, 'GET');\n    },\n\n    beginGetAccountInfo() {\n      let url;\n      let params;\n      url = formServiceUrls.getAccountInfoUrl;\n      return sendData(url, params, 'GET');\n    },\n\n    beginGetAccountSubscription() {\n      let url;\n      let params;\n      url = formServiceUrls.getAccountSubscriptionUrl.replace('{userid}', authenticatedUser.id);\n      return sendData(url, params, 'GET');\n    },\n\n    beginGetAllowedNotificationDestinationTypes() {\n      let url;\n      let params;\n      url = formServiceUrls.getAllowedDestinationTypes;\n      return sendData(url, params, 'GET');\n    },\n\n    beginAccountSignOut() {\n      let url;\n      let params;\n      url = formServiceUrls.accountSignoutUrl;\n      params = {\n        __RequestVerificationToken: angular.element('[name=__RequestVerificationToken]').val()\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginAccountChangePassword(passwordInfo) {\n      let url;\n      let params;\n      url = formServiceUrls.accountChangePasswordUrl;\n      params = {\n        currentPassword: passwordInfo.currentPassword,\n        newPassword: passwordInfo.newPassword\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginAccountAddEmailAddress(emailInfo) {\n      const url = formServiceUrls.getOrUpdateEmailUrl;\n      const params = {\n        emailAddress: emailInfo.emailAddress,\n        password: emailInfo.password\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginAccountVerifyEmailAddress() {\n      const url = formServiceUrls.sendVerifyEmailUrl;\n      return sendData(url, null, 'POST');\n    },\n\n    beginGetEmail() {\n      const url = formServiceUrls.getOrUpdateEmailUrl;\n      return sendData(url, null, 'GET');\n    },\n\n    beginGetPhone() {\n      const url = formServiceUrls.accountPhone;\n\n      return sendData(url, null, 'GET');\n    },\n\n    beginAccountUpdatePhone(phoneInfo) {\n      const url = formServiceUrls.accountPhone;\n      const params = {\n        countryCode: phoneInfo.countryCode,\n        prefix: phoneInfo.prefix,\n        phone: phoneInfo.phone,\n        password: phoneInfo.password\n      };\n\n      return sendData(url, params, 'POST');\n    },\n\n    beginAccountDeletePhone(deleteInfo) {\n      const url = formServiceUrls.accountPhoneDelete;\n      const params = {\n        password: deleteInfo.password\n      };\n\n      return sendData(url, params, 'POST');\n    },\n\n    beginAccountResendPhoneCode() {\n      const url = formServiceUrls.accountResendPhoneCode;\n      return sendData(url, null, 'POST');\n    },\n\n    beginAccountVerifyPhone(codeInfo) {\n      const url = formServiceUrls.accountVerifyPhone;\n      const params = {\n        code: codeInfo.code\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginAccountUnblockUser(uid) {\n      const url = `${EnvironmentUrls.accountSettingsApi}/v1/users/${uid}/unblock`;\n      return sendData(url, null, 'POST');\n    },\n\n    beginAccountAskParentToVerifyAge() {\n      let url;\n      url = formServiceUrls.accountAskParentToVerifyAge;\n      return sendData(url, null, 'POST');\n    },\n\n    beginGetAuthenticationMetadata() {\n      const url = formServiceUrls.authenticationMetadata;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginAccountChangeUsernameV2(user) {\n      let url;\n      let params;\n      url = formServiceUrls.accountChangeUsernameV2;\n      params = {\n        username: user.username,\n        password: user.password\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginGetNotificationSettings() {\n      const url = formServiceUrls.getNotificationSettings;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateNotificationSettings(\n      updatedNotificationBandSettings,\n      receiverDestinationTypeOptOuts,\n      receiverDestinationTypeOptIns\n    ) {\n      const promises = [];\n      // new specific (notificationband) settings\n      const bandSettingsUrl = formServiceUrls.updateNotificationBandSettings;\n      if (updatedNotificationBandSettings.length > 0) {\n        promises.push(\n          sendData(\n            bandSettingsUrl,\n            { updatedSettings: updatedNotificationBandSettings },\n            'POST',\n            true\n          )\n        );\n      }\n\n      // any updated destinationtype opt outs\n      const allowDestinationUrl = formServiceUrls.removeDestinationTypeOptOut;\n      angular.forEach(receiverDestinationTypeOptIns, function (value) {\n        promises.push(sendData(allowDestinationUrl, { destinationType: value }, 'POST', true));\n      });\n\n      const optOutOfDestinationUrl = formServiceUrls.addDestinationTypeOptOut;\n      angular.forEach(receiverDestinationTypeOptOuts, function (value) {\n        promises.push(sendData(optOutOfDestinationUrl, { destinationType: value }, 'POST', true));\n      });\n\n      return $q.all(promises);\n    },\n\n    beginGetSocialConnected() {\n      const url = formServiceUrls.connectedSocialAuthUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateSocialDisconnect(provider, password) {\n      const url = `${formServiceUrls.socialAuthDomainUrl}/${provider}/disconnect`;\n\n      const params = {};\n      if (password) {\n        params.password = password;\n      }\n\n      return sendData(url, params, 'POST');\n    },\n\n    beginGetXboxConnection() {\n      const url = formServiceUrls.xboxConnection;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginDisconnectXbox() {\n      const url = formServiceUrls.disconnectXbox;\n      return sendData(url, null, 'POST');\n    },\n\n    // == V2 ==\n\n    beginProcessErrorMessage(error) {\n      let errorMsg = error || 'Something went wrong, please try again later.';\n      if (error && error.errors && error.errors[0] && error.errors[0].message) {\n        errorMsg = error.errors[0].message;\n      }\n      return errorMsg;\n    },\n\n    getPinErrorMessageFromCode(error) {\n      return pinErrorMapper.getErrorMessageFromResponse(error);\n    },\n\n    getEmailErrorMessageFromCode(error) {\n      return emailErrorMapper.getErrorMessageFromResponse(error);\n    },\n\n    getPhoneErrorMessageFromCode(error) {\n      return phoneErrorMapper.getErrorMessageFromResponse(error);\n    },\n\n    getBirthdateErrorMessageFromCode(error) {\n      return birthdateErrorMapper.getErrorMessageFromResponse(error);\n    },\n\n    // == Info ==\n\n    // Metadata\n    beginGetAccountInformationMetadata() {\n      const url = formServiceUrls.accountInformationMetadata;\n      return sendData(url, null, 'GET', true);\n    },\n\n    // Description\n    beginGetDescription() {\n      const url = formServiceUrls.accountDescription;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateDescription(description) {\n      const url = formServiceUrls.accountDescription;\n      const params = {\n        description\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Birthday\n    beginGetBirthdate() {\n      const url = formServiceUrls.accountBirthdate;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateBirthdate(birthdate, password) {\n      const url = formServiceUrls.accountBirthdate;\n      const params = {\n        birthDay: birthdate.birthDay,\n        birthMonth: birthdate.birthMonth,\n        birthYear: birthdate.birthYear,\n        password\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Gender\n    beginGetGender() {\n      const url = formServiceUrls.accountGender;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateGender(gender) {\n      const url = formServiceUrls.accountGender;\n      const params = {\n        gender\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginGetCountry() {\n      const url = formServiceUrls.accountCountry;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateCountry(personal) {\n      const url = formServiceUrls.accountCountry;\n      const params = {\n        countryId: personal.country.countryId\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Themes\n    beginGetConsumerThemes() {\n      const url = formServiceUrls.accountConsumerThemesUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginSetConsumerThemes(themeType) {\n      const url = formServiceUrls.accountConsumerThemesUrl;\n      const params = {\n        themeType\n      };\n      return sendData(url, params, 'PATCH');\n    },\n\n    beginGetAvailableThemeTypes() {\n      const url = formServiceUrls.accountAvailableThemesUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    // Promotion channels\n    beginGetPromotionChannels() {\n      const url = formServiceUrls.accountPromotionChannels;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdatePromotionChannels(updatedInfo) {\n      const url = formServiceUrls.accountPromotionChannels;\n      const params = {\n        facebook: updatedInfo.FacebookUrl,\n        twitter: updatedInfo.TwitterUrl,\n        youtube: updatedInfo.YouTubeUrl,\n        twitch: updatedInfo.TwitchUrl,\n        promotionChannelsVisibilityPrivacy: updatedInfo.SocialNetworksVisibilityPrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // == accountSecurity ==\n\n    // == accountPrivacy ==\n\n    beginGetAgeRestrictedSettings() {\n      const voiceChatPolicyUrl = formServiceUrls.accountVoiceChatPolicyUrl;\n      const promises = {\n        voiceChatPolicy: sendData(voiceChatPolicyUrl, null, 'GET')\n      };\n\n      return $q.all(promises).then(function (data) {\n        const ageRestrictedSettings = {};\n        ageRestrictedSettings.isVoiceChatEnabled = data.voiceChatPolicy.isVoiceChatEnabled;\n        ageRestrictedSettings.isVerifiedForVoice = data.voiceChatPolicy.isVerifiedForVoice;\n        ageRestrictedSettings.isVoiceChatUserOptIn = data.voiceChatPolicy.isUserOptIn;\n        ageRestrictedSettings.isOptInDisabled = data.voiceChatPolicy.isOptInDisabled;\n        return ageRestrictedSettings;\n      });\n    },\n\n    toggleVoiceChatEnabledSetting(userOptIn) {\n      const url = formServiceUrls.accountVoiceChatUserOptInUrl;\n      const params = {\n        isUserOptIn: userOptIn\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Visibility Privacy\n    beginGetVisibilityPrivacy() {\n      const url = formServiceUrls.accountVisibilityPrivacyUrl;\n      return sendData(url, null, 'GET').then(function (data) {\n        const visibilitySettings = {};\n        visibilitySettings.isInvisible =\n          data.visibilityPrivacy == accountConstantsResources.visibilityTypes.invisible;\n        return visibilitySettings;\n      });\n    },\n    toggleVisibilityPrivacy(isInvisible) {\n      const url = formServiceUrls.accountVisibilityPrivacyUrl;\n      const params = {\n        visibilityPrivacy: isInvisible\n          ? accountConstantsResources.visibilityTypes.invisible\n          : accountConstantsResources.visibilityTypes.visible\n      };\n      return sendData(url, params, 'POST').then(\n        function () {\n          return isInvisible;\n        },\n        function (error) {\n          return error;\n        }\n      );\n    },\n\n    beginGetContactSettings() {\n      const appChatPrivacyUrl = formServiceUrls.accountAppChatPrivacy;\n      const gameChatPrivacyUrl = formServiceUrls.accountGameChatPrivacy;\n      const priateMessagePrivacyUrl = formServiceUrls.accountPrivateMessagePrivacy;\n\n      const promises = {\n        appChatPrivacy: sendData(appChatPrivacyUrl, null, 'GET'),\n        gameChatPrivacy: sendData(gameChatPrivacyUrl, null, 'GET'),\n        privateMessagePrivacy: sendData(priateMessagePrivacyUrl, null, 'GET')\n      };\n\n      return $q.all(promises).then(function (data) {\n        const contactSettings = {};\n        contactSettings.appChatPrivacy = data.appChatPrivacy.AppChatPrivacy;\n        contactSettings.gameChatPrivacy = data.gameChatPrivacy.GameChatPrivacy;\n        contactSettings.privateMessagePrivacy = data.privateMessagePrivacy.PrivateMessagePrivacy;\n        return contactSettings;\n      });\n    },\n\n    // App Chat Privacy\n    beginGetAppChatPrivacy() {\n      const url = formServiceUrls.accountAppChatPrivacy;\n      return sendData(url, null, 'GET', true);\n    },\n    beginUpdateAppChatPrivacy(contactSettings) {\n      const url = formServiceUrls.accountAppChatPrivacy;\n      const params = {\n        AppChatPrivacy: contactSettings.AppChatPrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Game Chat Privacy\n    beginGetGameChatPrivacy() {\n      const url = formServiceUrls.accountGameChatPrivacy;\n      return sendData(url, null, 'GET', true);\n    },\n    beginUpdateGameChatPrivacy(contactSettings) {\n      const url = formServiceUrls.accountGameChatPrivacy;\n      const params = {\n        GameChatPrivacy: contactSettings.GameChatPrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Private Message Privacy\n    beginGetPrivateMessagePrivacy() {\n      const url = formServiceUrls.accountPrivateMessagePrivacy;\n      return sendData(url, null, 'GET', true);\n    },\n    beginUpdatePrivateMessagePrivacy(contactSettings) {\n      const url = formServiceUrls.accountPrivateMessagePrivacy;\n      const params = {\n        PrivateMessagePrivacy: contactSettings.PrivateMessagePrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Private Server Invite Privacy\n    beginGetPrivateServerInvitePrivacy() {\n      const url = formServiceUrls.accountPrivateServerInvitePrivacy;\n      return sendData(url, null, 'GET', true);\n    },\n    beginUpdatePrivateServerInvitePrivacy(joinSettings) {\n      const url = formServiceUrls.accountPrivateServerInvitePrivacy;\n      const params = {\n        PrivateServerInvitePrivacy: joinSettings.privateServerInvitePrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Follow Me Privacy\n    beginGetFollowMePrivacy() {\n      const url = formServiceUrls.accountFollowMePrivacy;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateFollowMePrivacy(joinSettings) {\n      const url = formServiceUrls.accountFollowMePrivacy;\n      const params = {\n        FollowMePrivacy: joinSettings.followMePrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Inventory Privacy\n    beginGetInventoryPrivacy() {\n      const url = formServiceUrls.accountInventoryPrivacyUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateInventoryPrivacy(inventorySettings) {\n      const url = formServiceUrls.accountInventoryPrivacyUrl;\n      const params = {\n        inventoryPrivacy: inventorySettings.inventoryPrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    getUpdateTradePrivacyMessageWhenConflict() {\n      return languageResource.get('Response.Dialog.UpdateTradeSetting');\n    },\n\n    // Trade Privacy\n    beginGetTradePrivacy() {\n      const url = formServiceUrls.accountTradePrivacyUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateTradePrivacy(tradeSettings) {\n      const url = formServiceUrls.accountTradePrivacyUrl;\n      const params = {\n        tradePrivacy: tradeSettings.tradePrivacy\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    getUpdateInventoryPrivacyMessageWhenConflict() {\n      return languageResource.get('Response.Dialog.UpdateInventorySetting');\n    },\n\n    // Trade Value\n    beginGetTradeValue() {\n      const url = formServiceUrls.accountTradeValueUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateTradeValue(tradeSettings) {\n      const url = formServiceUrls.accountTradeValueUrl;\n      const params = {\n        tradeValue: tradeSettings.tradeValue\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // == parentalControls ==\n\n    // Account PIN\n    beginGetAccountPinSetting() {\n      const url = formServiceUrls.accountPinUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginCreateAccountPinSetting(newPin) {\n      const url = formServiceUrls.accountPinUrl;\n      const params = {\n        pin: newPin\n      };\n      return sendData(url, params, 'POST', true);\n    },\n\n    beginDeleteAccountPinSetting() {\n      const url = formServiceUrls.accountPinUrl;\n      return sendData(url, null, 'DELETE', true);\n    },\n\n    beginUnlockAccountPinSetting(unlockPin) {\n      const url = formServiceUrls.accountPinUnlockUrl;\n      const params = {\n        pin: unlockPin\n      };\n      return sendData(url, params, 'POST', true);\n    },\n\n    beginLockAccountPinSetting(unlockPin) {\n      const url = formServiceUrls.accountPinLockUrl;\n      return sendData(url, null, 'POST', true);\n    },\n\n    // Account Restrictions\n    beginGetAccountRestrictions() {\n      const url = formServiceUrls.accountAccountRestrictions;\n      return sendData(url, null, 'GET', true);\n    },\n    beginUpdateAccountRestrictions(flag) {\n      const url = formServiceUrls.accountAccountRestrictions;\n      const params = {\n        isEnabled: flag\n      };\n      return sendData(url, params, 'POST', true);\n    },\n\n    // Content Ratings\n    beginGetContentRatings() {\n      const url = formServiceUrls.contentRatingsUrl;\n      return sendData(url, null, 'GET', true);\n    },\n    beginUpdateContentRatings(parentalSettings) {\n      const url = formServiceUrls.contentRatingsUrl;\n      const params = {\n        contentRestrictionLevel: parentalSettings.ContentRatings\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginGetAccountSettingsMetadata() {\n      const url = formServiceUrls.accountSettingsMetadataUrl;\n      return sendData(url, null, 'GET');\n    },\n\n    // Monthly Limit and Notification Settings\n    beginGetParentalSpendControls() {\n      const url = formServiceUrls.getParentalSpendControlsUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginUpdateParentalSpendControls(parentalSettings) {\n      const url = formServiceUrls.updateParentalSpendControlsUrl;\n      const params = {\n        monthlySpendLimitInUSD: parentalSettings.MonthlySpendLimitInUSD,\n        spendNotificationSetting: parentalSettings.SpendNotificationSetting\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    beginUpdateNotificationFrequency(parentalSettings) {\n      const url = formServiceUrls.updateParentalSpendControlsUrl;\n      const params = {\n        monthlySpendLimitInUSD: parentalSettings.currentMonthlyLimit,\n        spendNotificationSetting: parentalSettings.SpendNotificationSetting\n      };\n      return sendData(url, params, 'POST');\n    },\n\n    // Screentime Parental Controls\n    beginGetScreentimeRestrictions() {\n      const url = formServiceUrls.restrictedHoursServiceUrl;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginSaveRestrictedHours(timezone, restrictions) {\n      const urlConfig = {\n        url: formServiceUrls.restrictedHoursServiceUrl,\n        withCredentials: true\n      };\n      const data = {\n        timezone,\n        parentalRestrictedHours: restrictions,\n        deviceTypes: ['Computer']\n      };\n      return httpService.httpPost(urlConfig, data);\n    },\n\n    beginGetScreentimeAuthorizationPolicy() {\n      const url = formServiceUrls.screentimeAuthorizationPolicy;\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginGetScreentimeRolloutPolicy() {\n      const url = formServiceUrls.screentimeRolloutPolicy;\n      return sendData(url, null, 'GET', true);\n    },\n\n    // == billing ==\n\n    getPaymentRecords(url) {\n      return sendData(url, null, 'GET', true);\n    },\n\n    beginGetAccountSettingsPolicy() {\n      const url = formServiceUrls.accountSettingsPolicy;\n      return sendData(url, null, 'GET', true);\n    },\n\n    getGroupsAndPolicy() {\n      let params;\n      const promises = {\n        tabsListing: sendData(formServiceUrls.getAccountSettingsGroups, params, 'GET'),\n        getPolicy: sendData(formServiceUrls.accountSettingsPolicy, null, 'GET', true)\n      };\n      return $q.all(promises);\n    },\n\n    // == V2 ==\n\n    sendButtonClickEvent(buttonName) {\n      if (EventStream) {\n        EventStream.SendEvent(\n          accountConstantsResources.events.formInteractionEventType,\n          accountConstantsResources.events.settingsCtx,\n          { btn: buttonName }\n        );\n      }\n    }\n  };\n\n  return self;\n}\n\naccountSettingsModule.factory('accountsService', accountsService);\n\nexport default accountsService;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction commonConstantsService($log, languageResource) {\n  'ngInject';\n\n  const ls = languageResource;\n  return {\n    validation: {\n      invalid: {\n        socialMedia: ls.get('Response.SocialMedia.ValidationError')\n      }\n    },\n    label: {\n      country: ls.get('Label.Country'),\n      twoStepEmail: ls.get('Label.TwoStepEmail'),\n      changeUsername: ls.get('Label.ChangeYourUsername'),\n      useDeviceLanguage: ls.get('Label.UseDeviceLanguage')\n    },\n    tabs: {\n      info: ls.get('Heading.Tab.AccountInfo'),\n      security: ls.get('Heading.Tab.Security'),\n      privacy: ls.get('Heading.Tab.Privacy'),\n      'parental-controls': ls.get('Heading.Tab.ParentalControls'),\n      'parental-controls-check-status': ls.get('Heading.Tab.ParentalControls'),\n      billing: ls.get('Heading.Tab.Billing'),\n      notifications: ls.get('Heading.Tab.Notifications'),\n      fastTrack: ls.get('Heading.Tab.FastTrack')\n    }\n  };\n}\n\naccountSettingsModule.factory('commonConstantsService', commonConstantsService);\n\nexport default commonConstantsService;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction displayNameLayout($log, languageResource) {\n  'ngInject';\n\n  const lang = languageResource;\n\n  return {\n    changeDisplayNameLayout: {\n      isRequestFailed: false,\n      isValidated: true,\n      isValidating: false,\n      modalTitle: lang.get('Label.ConfigureDN'), // Change Display Name\n      modalCancel: lang.get('Action.CancelDN'), // \"Close\",\n      modalSave: lang.get('Action.SaveDN'), // \"Save\",\n      modalDescriptionWarning: lang.get('Description.WarningFrequencyOfChanges'),\n      displayErrorMsg: '',\n      maxCharactersForDisplayName: 20,\n      minCharactersForDisplayName: 3\n    },\n\n    changeDisplayNameResponse: {\n      errorMessages: {\n        nameContainPII: lang.get('ErrorMessage.NameContainPII'), // Displayname might contain private information\n        nameHasChanged: lang.get('ErrorMessage.NameHasChanged'), // Your Displayname has already been changed in the past 7 days\n        nameInappropriate: lang.get('ErrorMessage.NameInappropriate'), // Displayname not appropriate for Roblox\n        nameTooLong: lang.get('ErrorMessage.NameTooLong'), // Displayname should have 20 characters at the most\n        nameTooShort: lang.get('ErrorMessage.NameTooShort'), // Displayname should have 3 characters at least\n        nameUnsupportedChars: lang.get('ErrorMessage.NameUnsupportedChars') // Displayname contains unsupported characters\n      },\n      errorCodeMapMsg: {\n        1: 'nameTooShort',\n        2: 'nameTooLong',\n        3: 'nameUnsupportedChars',\n        4: 'nameInappropriate',\n        5: 'nameHasChanged'\n      }\n    }\n  };\n}\n\naccountSettingsModule.factory('displayNameLayout', displayNameLayout);\n\nexport default displayNameLayout;\n","import { Intl } from 'Roblox';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction formFieldsMappingService($log, languageResource) {\n  'ngInject';\n\n  const intl = Intl && new Intl();\n  const getLang = languageResource.get;\n  const labels = {\n    everyone: getLang('Label.DropDown.Everyone'),\n    followers: getLang('Label.DropDown.Followers'),\n    following: getLang('Label.DropDown.Following'),\n    friends: getLang('Label.DropDown.Friends'),\n    noOne: getLang('Label.DropDown.NoOne'),\n    default: getLang('Label.DropDown.Default'),\n    custom: getLang('Label.DropDown.Custom'),\n    off: getLang('Label.DropDown.Off'),\n    none: getLang('Label.DropDown.None'),\n    high: getLang('Label.DropDown.High'),\n    medium: getLang('Label.DropDown.Medium'),\n    low: getLang('Label.DropDown.Low'),\n    noRestrictions: getLang('Label.DropDown.NoRestrictions'),\n    teen: getLang('Label.DropDown.Teen'),\n    preTeen: getLang('Label.DropDown.PreTeen'),\n    child: getLang('Label.DropDown.Child'),\n    themes: {\n      dark: getLang('Label.DarkTheme'),\n      classic: getLang('Label.ClassicTheme'),\n      light: getLang('Label.LightTheme')\n    },\n    defaultNotifications: getLang('Label.DefaultNotifications'),\n    allNotifications: getLang('Label.AllNotifications'),\n    offNotifications: getLang('Label.NotificationsOff')\n  };\n\n  return {\n    years: [],\n    days: [],\n    months: languageResource.intl.getMonthsList(),\n    monthsI18n: intl\n      ? intl.getMonthsI18n('short', getLang('Label.Month'))\n      : languageResource.intl.getMonthsList(),\n    privacy: [\n      { name: labels.everyone, value: 'All' },\n      { name: labels.followers, value: 'Followers' },\n      { name: labels.following, value: 'Following' },\n      { name: labels.friends, value: 'Friends' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    visibility: [\n      { name: labels.everyone, value: 'AllUsers' },\n      { name: labels.followers, value: 'FriendsFollowingAndFollowers' },\n      { name: labels.following, value: 'FriendsAndFollowing' },\n      { name: labels.friends, value: 'Friends' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    under13Privacy: [\n      { name: labels.friends, value: 'Friends' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    under13JoinPrivacy: [\n      { name: labels.following, value: 'Following' },\n      { name: labels.friends, value: 'Friends' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    contactSettingsConfiguration: [\n      { name: labels.default, value: 'Default' },\n      { name: labels.custom, value: 'Custom' },\n      { name: labels.off, value: 'Off' }\n    ],\n    messaging: [\n      { name: labels.everyone, value: 'All' },\n      { name: labels.followers, value: 'Followers' },\n      { name: labels.following, value: 'Following' },\n      { name: labels.friends, value: 'Friends' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    appChat: [\n      { name: labels.friends, value: 'Friends' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    gameChat: [\n      { name: labels.everyone, value: 'AllUsers' },\n      { name: labels.noOne, value: 'NoOne' }\n    ],\n    tradeValue: [\n      { name: labels.none, value: 'None' },\n      { name: labels.low, value: 'Low' },\n      { name: labels.medium, value: 'Medium' },\n      { name: labels.high, value: 'High' }\n    ],\n    contentRatings: [\n      { name: labels.noRestrictions, value: 'NoRestrictions' },\n      { name: labels.teen, value: 'Teen' },\n      { name: labels.preTeen, value: 'PreTeen' },\n      { name: labels.child, value: 'Child' }\n    ],\n    notificationSettings: [\n      { name: labels.defaultNotifications, value: 'NotificationsOnlyOnThresholdPassed' },\n      { name: labels.allNotifications, value: 'NotificationsEveryAmountSpent' }\n    ],\n    themes: [\n      { name: labels.themes.dark, value: 'Dark' },\n      { name: labels.themes.light, value: 'Light' }\n    ],\n    gender: {\n      UNKNOWN: '1',\n      MALE: '2',\n      FEMALE: '3'\n    },\n    timeMappings: new Map(),\n    dayMappings: new Map(),\n    restrictionBeginTimes: [],\n    restrictionEndTimes: [],\n    daysOfWeek: []\n  };\n}\n\naccountSettingsModule.factory('formFieldsMappingService', formFieldsMappingService);\n\nexport default formFieldsMappingService;\n","import { EnvironmentUrls } from 'Roblox';\nimport { urlService, httpService } from 'core-utilities';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction koreaIdVerificationService($log, languageResource, screentimeConstantsService) {\n  'ngInject';\n  \n  const { websiteUrl, apiGatewayUrl } = EnvironmentUrls;\n  const accountSettingsPath = '/my/account#!/parental-controls/check-status';\n  const startKoreaIdVerificationUrl = `${apiGatewayUrl}/identity-verification-service/v1/korea/start-verification`;\n  const getKoreaIdVerificationResultUrl = `${apiGatewayUrl}/identity-verification-service/v1/korea/get-verification-result`;\n\n  const getCallBackUrl = () => {\n    return urlService.resolveUrl(websiteUrl, accountSettingsPath);\n  }\n\n  const self = {\n\n    formPostHelper(path, params, method = 'post') {\n      const form = document.createElement('form');\n      form.method = method;\n      form.action = path;\n    \n      Object.keys(params).forEach(key => {\n        if (Object.prototype.hasOwnProperty.call(params, key)) {\n          const hiddenField = document.createElement('input');\n          hiddenField.type = 'hidden';\n          hiddenField.name = key;\n          hiddenField.value = params[key];\n    \n          form.appendChild(hiddenField);\n        }\n      });\n      return form;\n    },\n\n    beginStartKoreaIdVerification(method) {\n      const urlConfig = {\n        withCredentials: true,\n        url: startKoreaIdVerificationUrl\n      };\n      const params = {\n        method,\n        callbackUrl: getCallBackUrl()\n      }\n      return httpService.post(urlConfig, params);\n    },\n    \n    beginGetKoreaIdVerificationResult(mdlToken, method) {\n      const urlConfig = {\n        withCredentials: true,\n        url: getKoreaIdVerificationResultUrl\n      };\n      const params = {\n        method: method,\n        mdlToken: mdlToken\n      };\n      return httpService.post(urlConfig, params);\n    }\n  }\n\n  return self;\n};\n\naccountSettingsModule.factory('koreaIdVerificationService', koreaIdVerificationService);\n\nexport default koreaIdVerificationService;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction modalConstantsService(languageResource, errorMessageService) {\n  'ngInject';\n\n  const ls = languageResource;\n  const socialDisconnectErrorMapper = errorMessageService.createErrorMapper(\n    {\n      // error messages based on SocialAuthenticationErrors Enum from Roblox.Authentication.Api\n      4: ls.get('Response.InvalidPassword')\n    },\n    ls.get('Message.Error.Default')\n  );\n  const verifyPhoneResendCodeErrorMapper = errorMessageService.createErrorMapper(\n    {\n      // Adding error message if floodchecker for Resend Code overflows.\n      6: ls.get('MessageTooManyAttemptsError')\n    },\n    ls.get('Response.Dialog.DefaultErrorTitle')\n  )\n\n  return {\n    default: {\n      positiveBtnText: ls.get('Action.Dialog.Yes'),\n      negativeBtnText: ls.get('Action.Dialog.No'),\n      submitButtonText: ls.get('Action.Dialog.Success'),\n      success: {\n        title: ls.get('Heading.Dialog.DefaultSuccess'),\n        body: ls.get('Response.Dialog.DefaultSuccessMessage')\n      },\n      error: {\n        title: ls.get('Heading.Dialog.DefaultError'),\n        body: ls.get('Response.Dialog.DefaultErrorMessage')\n      },\n      errorMessage: ls.get('Response.Dialog.DefaultErrorTitle')\n    },\n    secureSignOut: {\n      success: {\n        body: ls.get('Response.Dialog.SignoutSessionsConfirmation')\n      },\n      error: {\n        body: ls.get('Response.Dialog.SignoutSessionFailed')\n      }\n    },\n    disconnectXbox: {\n      error: {\n        body: ls.get('Response.Dialog.DisconnectXBoxError')\n      }\n    },\n    updateNotificationSettings: {\n      error: {\n        body: ls.get('Response.Dialog.UpdateNotificationSettingsError')\n      }\n    },\n    twoStepVerification: {\n      success: {\n        title: ls.get('Response.Dialog.TwoStepSuccessTitle'),\n        titleIcon: 'icon-like',\n        body: ls.get('Response.Dialog.TwoStepSucessBody')\n      },\n      disabling: {\n        title: ls.get('Response.Dialog.Warning'),\n        body: ls.get('Response.Dialog.TwoStepDisableWarning')\n      },\n      missingEmail: ls.get('Description.Dialog.MissingEmailTwoStepVerification'),\n      unverifiedEmail: ls.get('Description.Dialog.UnverifiedEmailTwoStepVerification')\n    },\n    birthdayChange: {\n      default: {\n        title: ls.get('Response.Dialog.Warning'),\n        body: ls.get('Response.Dialog.BirthdayChangeDefaultWarning')\n      },\n      withSocialSignOn: {\n        body: ls.get('Response.Dialog.BirthdayChangeSocialWarning'),\n        positiveBtnText: ls.get('Action.SuccessDialogButtonText'),\n        negativeBtnText: ls.get('Action.Dialog.Cancel')\n      },\n      needPassword: {\n        title: ls.get('Response.Dialog.BirthdayChangePasswordTitle'),\n        body: ls.get('Response.Dialog.BirthdayChangePasswordBody')\n      }\n    },\n    emailSet: {\n      emailRequiredMessage: ls.get('Label.Dialog.EmailRequired'),\n      emailSetSuccessMessage: ls.get('Label.Dialog.EmailAddressChanged'),\n      invalidEmailAddressMessage: ls.get('Response.Dialog.InvalidEmailAddress'),\n      addEmailU13Label: ls.get('Label.Dialog.AddEmailUnder13'),\n      addEmailO13Label: ls.get('Label.Dialog.AddEmailOver13'),\n      addEmailLabel: ls.get('Action.Dialog.AddEmail'),\n      changeEmailU13Label: ls.get('Label.Dialog.ChangeEmailUnder13'),\n      changeEmailO13Label: ls.get('Label.Dialog.ChangeEmailOver13'),\n      changeEmailLabel: ls.get('Action.Dialog.ChangeEmail')\n    },\n    phoneSet: {\n      addActionLabel: ls.get('Action.Dialog.AddPhone'),\n      editActionLabel: ls.get('Action.Dialog.EditPhonePrimary'),\n      updateSuccessMessage: ls.get('Response.NotificationBar.PhoneVerifyConfirmation'),\n      deleteSuccessMessage: ls.get('Response.NotificationBar.PhoneRemovedConfirmation'),\n      countryListErrorMessage: ls.get('Response.Dialog.CountryListError'),\n      getMessageFromResendCodeError: verifyPhoneResendCodeErrorMapper.getErrorMessageFromResponse\n    },\n    passwordSet: {\n      changePasswordMessage: ls.get('Heading.Dialog.ChangePassword'),\n      addPasswordMessage: ls.get('Heading.Dialog.AddPassword'),\n      matchErrorMessage: ls.get('Response.Dialog.ChangePasswordNoMatch'),\n      changePasswordSuccess: ls.get('Heading.Dialog.ChangePasswordSuccess')\n    },\n    passwordChange: {\n      tooManyRequests: ls.get('MessageTooManyAttemptsError'),\n      invalidPassword: ls.get('Response.Dialog.PasswordRulesError'),\n      invalidCurrentPassword: ls.get('Response.Dialog.ChangePasswordIncorrectPassword'),\n      pinLocked: ls.get('MessagePinLockedError')\n    },\n    pinCreate: {\n      matchErrorMessage: ls.get('Response.Dialog.PinCreateMismatch'),\n      missingEmail: ls.get('Description.Dialog.MissingEmailAccountPin'),\n      unverifiedEmail: ls.get('Description.Dialog.UnverifiedEmailAccountPin')\n    },\n    changeUsername: {\n      missingEmail: ls.get('Description.Dialog.MissingEmailUsername'),\n      unverifiedEmail: ls.get('Description.Dialog.UnverifiedEmailUsername'),\n      changeUsernameBuy: ls.get('Action.Dialog.ChangeUsernameBuy'),\n      changeUsernameMessage(robuxString) {\n        return ls.get('Description.Dialog.InsufficientFundsWarning', robuxString);\n      },\n      changeUsernameTitle: ls.get('Heading.Dialog.InsufficientFunds'),\n      error: {\n        notProvided: ls.get('Response.Dialog.ChangeUsernameNoInput'),\n        notAvailable: ls.get('Response.Dialog.ChangeUsernameNotAvailable'),\n        notAllowed: ls.get('Response.Dialog.ChangeUsernameNotAllowed')\n      }\n    },\n    socialDisconnect: {\n      unlinkTitle(provider) {\n        return ls.get('Heading.Unlink', { provider });\n      },\n      getMessageFromError: socialDisconnectErrorMapper.getErrorMessageFromResponse\n    },\n    screentime: {\n      saveRestrictions: {\n        error: {\n          blockedTimesWrongOrder: ls.get('Response.Dialog.BlockedTimesWrongOrder'),\n          missingDaySelection: ls.get('Response.Dialog.MissingDaySelection'),\n          atLeastOneHourAllowed: ls.get('Response.Dialog.AtLeastOneHourAllowed'),\n          under18IDVerified: ls.get('Response.Dialog.Under18IDVerified')\n        }\n      },\n      updatedTimezone: {\n        success: {\n          body: ls.get('Response.Dialog.TimezoneUpdateSuccess')\n        },\n        error: {\n          body: ls.get('Response.Dialog.TimezoneUpdateError')\n        }\n      }\n    }\n  };\n}\n\naccountSettingsModule.factory('modalConstantsService', modalConstantsService);\n\nexport default modalConstantsService;\n","import accountSettingsModule from '../accountSettingsModule';\n\nfunction notificationConstantsService($log, languageResource) {\n  'ngInject';\n\n  const ls = languageResource;\n  return {\n    notificationSourceTypeMapping: {\n      FriendRequestReceived: ls.get('Label.Notifications.FriendRequestReceived'),\n      FriendRequestAccepted: ls.get('Label.Notifications.FriendRequestAccepted'),\n      PartyInviteReceived: ls.get('Label.Notifications.PartyInvited'),\n      PartyMemberJoined: ls.get('Label.Notifications.PartyJoined'),\n      ChatNewMessage: ls.get('Label.Notifications.Chat'),\n      PrivateMessageReceived: ls.get('Label.Notifications.PrivateMessage'),\n      UserAddedToPrivateServerWhiteList: ls.get('Label.Notifications.AddedToServer'),\n      ConversationUniverseChanged: ls.get('Label.Notifications.ConversationUniverseChanged'),\n      TeamCreateInvite: ls.get('Label.Notifications.TeamCreateInvite'),\n      GameUpdate: ls.get('Label.Notifications.GameUpdate'),\n      DeveloperMetricsAvailable: ls.get('Label.Notifications.DeveloperMetricsAvailable'),\n      GroupJoinRequestAccepted: ls.get('Label.Notifications.GroupJoinRequestAccepted')\n    },\n    destinationTypes: ['NotificationStream', 'DesktopPush', 'MobilePush'],\n    modalText: {\n      success: {\n        title: ls.get('Heading.Dialog.DefaultSuccess'),\n        body: ls.get('Response.Dialog.DefaultSuccessMessage')\n      },\n      error: {\n        title: ls.get('Heading.Dialog.DefaultError'),\n        body: ls.get('Response.Dialog.UpdateNotificationSettingsError')\n      }\n    },\n    receiverDestinationTypeMapping: [\n      {\n        destinationType: 'NotificationStream',\n        friendlyTitle: ls.get('Heading.Notifications.Stream'),\n        blurbText: ls.get('Description.NotificationStream1'),\n        actionWhenText: ls.get('Heading.Notifications.ActionWhen'),\n        actionDescriptionText: ls.get('Description.NotificationStream2'),\n        areSourcesShown: true,\n        isToggleable() {\n          return false;\n        }\n      },\n      {\n        destinationType: 'DesktopPush',\n        friendlyTitle: ls.get('Heading.Notifications.DesktopPush'),\n        blurbText: ls.get('Description.DesktopPush1'),\n        secondaryBlurbText: ls.get('Description.DesktopPush2'),\n        actionWhenText: ls.get('Heading.Notifications.ActionWhen'),\n        actionDescriptionText: ls.get('Description.DesktopPush3')\n      },\n      {\n        destinationType: 'MobilePush',\n        friendlyTitle: ls.get('Heading.Notifications.MobilePush'),\n        blurbText: ls.get('Description.MobilePush1'),\n        actionWhenText: '',\n        areSourcesShown: true,\n        actionDescriptionText: ls.get('Description.MobilePush2')\n      }\n    ]\n  };\n}\n\naccountSettingsModule.factory('notificationConstantsService', notificationConstantsService);\n\nexport default notificationConstantsService;\n","import { localStorageService } from 'core-roblox-utilities';\nimport { Intl } from 'Roblox';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction screentimeConstantsService($log, languageResource) {\n  'ngInject';\n\n  const intl = Intl && new Intl();\n  const ls = languageResource;\n  const dateTimes = {\n    thirtyMinutesInMs: 1800000,\n    oneHourInMs: 3600000,\n    twentyThreeHoursInMs: 82800000,\n    arbitraryDate: '01/01/2000 ',\n    zeroHourTimestamp: '00:00:00',\n    twentyFourHourTimestamp: '24:00:00',\n    elevenThirtyPmTimestamp: '23:30:00',\n    elevenPmTimestamp: '23:00:00'\n  };\n\n  const localStorageConstants = {\n    MDL_TOKEN: 'mdlTkn',\n    METHOD: 'method',\n    PARENTAL_RESTRICTED_HOURS: 'parentalRestrictedHours',\n    PARENTAL_TIME_ZONE: 'parentalTimeZone',\n    UPDATED_TIME_ZONE: 'updatedTimeZone'\n  };\n\n  const generateTimestamp = time => {\n    const date = new Date(time);\n    const [hour, minutes] = [date.getHours(), date.getMinutes()];\n    const hourPaddedByZero = hour < 10 ? '0' + hour : hour;\n    const minutesPaddedByZero = minutes < 10 ? '0' + minutes : minutes;\n    return hourPaddedByZero + ':' + minutesPaddedByZero + ':00';\n  }\n\n  const generateTimestampsInBetween = (start, end) => {\n    var timestamps = [start];\n    var startTime = new Date(dateTimes.arbitraryDate + start).getTime();\n    var endTime = new Date(dateTimes.arbitraryDate + end).getTime();\n    for (let i = startTime + dateTimes.thirtyMinutesInMs; i < endTime; i += dateTimes.thirtyMinutesInMs) {\n      timestamps.push(generateTimestamp(i));\n    }\n    timestamps.push(end);\n    return timestamps;\n  };\n\n  const self = {\n    defaultRestriction: {\n      begin: '00:00:00',\n      end: '06:00:00',\n      days: [0, 1, 2 ,3, 4, 5, 6]\n    },\n\n    dropdownText: {\n      everyday: ls.get('Label.Everyday'),\n      every: ls.get('Label.Every')\n    },\n\n    verificationOptions: [\n      { label: ls.get('Action.BankAccount'), value: 'card' },\n      { label: ls.get('Action.Phone'), value: 'phone' },\n      { label: ls.get('Action.IPIN'), value: 'ipin' }\n    ],\n\n    dateTimes: dateTimes,\n    generateTimestamp: generateTimestamp,\n    localStorageConstants: localStorageConstants,\n\n    generateTimeMappings() {\n      const timeMappings = new Map();\n      var times = generateTimestampsInBetween(dateTimes.zeroHourTimestamp, dateTimes.twentyFourHourTimestamp);\n      for (let i = 0; i < times.length; i++) {\n        let timestamp = times[i];\n        const timeFormatted = intl.getDateTimeFormatter().getCustomDateTime(\n                                new Date(\n                                  dateTimes.arbitraryDate + timestamp), \n                                  { timeStyle: \"short\" }\n                                );\n        timeMappings.set(timestamp, timeFormatted);\n      }\n      //Map 24:00:00 to 12:00 AM\n      timeMappings.set(dateTimes.twentyFourHourTimestamp, timeMappings.get(dateTimes.zeroHourTimestamp));\n      return timeMappings;\n    },\n\n    generateDayMappings(weekdaysList) {\n      const dayMappings = new Map();\n      //Add Sunday first since getWeekdaysList() returns Sunday==7, but we want Sunday == 0\n      dayMappings.set(0, weekdaysList[6].name);\n      for (let i = 0; i < 6; i++) {\n        dayMappings.set(weekdaysList[i].value, weekdaysList[i].name);\n      }\n      return dayMappings;\n    },\n\n    generateRestrictionBeginTimes(timeMappings, curfewRestrictions = []) {\n      const restrictionBeginTimes = [];\n      var invalidTimes = new Set();\n      for (let i = 0; i < curfewRestrictions.length; i++) {\n        let restriction = curfewRestrictions[i];\n        let curfewTimestamps = generateTimestampsInBetween(restriction.begin, restriction.end);\n        curfewTimestamps.pop(); //Remove the last time, as we can add restrictions starting at that time\n        curfewTimestamps.forEach(time => invalidTimes.add(time));\n      }\n\n      // 24:00:00 is not a valid begin time\n      generateTimestampsInBetween(dateTimes.zeroHourTimestamp, dateTimes.elevenThirtyPmTimestamp).forEach(timestamp => {\n        if (!invalidTimes.has(timestamp)) {\n          restrictionBeginTimes.push({\n            timestamp: timestamp,\n            name: timeMappings.get(timestamp)\n          }); \n        }\n      });\n      return restrictionBeginTimes;\n    },\n\n    generateRestrictionEndTimes(timeMappings, curfewRestrictions = []) {\n      const restrictionEndTimes = [];\n      var invalidTimes = new Set();\n      for (let i = 0; i < curfewRestrictions.length; i++) {\n        let restriction = curfewRestrictions[i];\n        let curfewTimestamps = generateTimestampsInBetween(restriction.begin, restriction.end);\n        curfewTimestamps.splice(0, 1); //Remove the first time, as we can add a restriction ending at that time\n        curfewTimestamps.forEach(time => invalidTimes.add(time));\n      }\n\n      //00:00:00 is not a valid end time\n      generateTimestampsInBetween('00:30:00', dateTimes.twentyFourHourTimestamp).forEach(timestamp => {\n        if (!invalidTimes.has(timestamp)) {\n          restrictionEndTimes.push({\n            timestamp: timestamp,\n            name: timeMappings.get(timestamp)\n          }); \n        }\n      });\n      return restrictionEndTimes;\n    },\n\n    localStorageCleanUp(keys = []) {\n      const keysToBeCleaned = keys.length > 0 ? keys : localStorageConstants;\n      for (const key in keysToBeCleaned) {\n        localStorageService.removeLocalStorage(localStorageConstants[key]);\n      }\n    }\n  }\n\n  return self;\n};\n\naccountSettingsModule.factory('screentimeConstantsService', screentimeConstantsService);\n\nexport default screentimeConstantsService;\n","import { EnvironmentUrls, EventStream } from 'Roblox';\nimport { authenticatedUser } from 'header-scripts';\nimport accountSettingsModule from '../accountSettingsModule';\nimport twoStepVerificationConstants from '../constants/twoStepVerificationConstants';\n\nfunction twoStepVerificationService($q, httpService, errorMessageService, robuxSpendTwoStepResources, languageResource, systemFeedbackService) {\n  'ngInject';\n\n  let metadataCache = null;\n\n  const twoStepVerificationErrorMapper = errorMessageService.createErrorMapper(\n    {\n      [twoStepVerificationConstants.errorCodes.internal.tooManyRequests]: languageResource.get(\n        'Message.Error.TooManyRequests'\n      ),\n      [twoStepVerificationConstants.errorCodes.internal.invalidEmail]: languageResource.get(\n        'Message.Error.NoVerifiedEmail'\n      ),\n      [twoStepVerificationConstants.errorCodes.internal.invalidPassword]: languageResource.get(\n        'Message.Error.Email.IncorrectPassword'\n      ),\n      [twoStepVerificationConstants.errorCodes.internal.featureDisabled]: languageResource.get(\n        'Response.FeatureDisabled'\n      ),\n      [twoStepVerificationConstants.errorCodes.internal.pinLocked]: languageResource.get(\n        'Message.Error.Email.PinLocked'\n      ),\n      [twoStepVerificationConstants.errorCodes.internal.invalidSetupToken]: languageResource.get(\n        'Response.Dialog.AuthenticatorSessionExpired'\n      ),\n      [twoStepVerificationConstants.errorCodes.internal.invalidCode]: languageResource.get(\n        'Response.Dialog.InvalidCodeError'\n      )\n    },\n    languageResource.get('Message.Error.Default')\n  );\n\n  return {\n    getMetadata() {\n      return $q((resolve, reject) => {\n        if (metadataCache) {\n          resolve(metadataCache);\n          return;\n        }\n\n        httpService\n          .httpGet({\n            url: `${EnvironmentUrls.twoStepVerificationApi}/v1/metadata`\n          })\n          .then(metadata => {\n            metadataCache = metadata;\n            resolve(metadata);\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    getTwoStepVerificationConfiguration() {\n      return $q((resolve, reject) => {\n        httpService\n          .httpGet({\n            url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/configuration`\n          })\n          .then(configuration => {\n            resolve(configuration);\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    enableEmailTwoStepVerification(password) {\n      return $q((resolve, reject) => {\n        httpService\n          .httpPost({\n            url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/configuration/email/enable`\n          },\n          {\n            password\n          })\n          .then(() => {\n            resolve();\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    enableAuthenticator(password) {\n      return $q((resolve, reject) => {\n        httpService\n          .httpPost(\n            {\n              url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/configuration/authenticator/enable`\n            },\n            {\n              password\n            }\n          )\n          .then(resolve)\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    enableVerifyAuthenticator(setupToken, code, password) {\n      return $q((resolve, reject) => {\n        httpService\n          .httpPost(\n            {\n              url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/configuration/authenticator/enable-verify`\n            },\n            {\n              setupToken,\n              code,\n              password\n            }\n          )\n          .then(() => {\n            resolve();\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n\n            if (errorCode === twoStepVerificationConstants.errorCodes.internal.alreadyEnabled) {\n              resolve();\n            } else {\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            }\n          });\n      });\n    },\n\n    disableTwoStepVerification(mediaType, password) {\n      return $q((resolve, reject) => {\n        if (!password) {\n          reject(twoStepVerificationConstants.errorCodes.internal.invalidPassword);\n          return;\n        }\n\n        const urlConfig = {};\n        switch (mediaType) {\n          case twoStepVerificationConstants.mediaTypes.Email:\n            urlConfig.url = `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/configuration/email/disable`;\n            break;\n          case twoStepVerificationConstants.mediaTypes.Authenticator:\n            urlConfig.url = `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/configuration/authenticator/disable`;\n            break;\n          default:\n            reject(twoStepVerificationConstants.errorCodes.internal.invalidMediaType);\n        }\n\n        httpService\n          .httpPost(urlConfig, {\n            password\n          })\n          .then(() => {\n            resolve();\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    getRecoveryCodesStatus() {\n      return $q((resolve, reject) => {\n        httpService\n          .httpGet({\n            url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/recovery-codes`\n          })\n          .then(response => {\n            resolve(response);\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    generateRecoveryCodes(password) {\n      return $q((resolve, reject) => {\n        if (!password) {\n          reject(twoStepVerificationConstants.errorCodes.internal.invalidPassword);\n          return;\n        }\n\n        httpService\n          .httpPost(\n            {\n              url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/recovery-codes/regenerate`\n            },\n            {\n              password\n            }\n          )\n          .then(response => {\n            resolve(response.recoveryCodes);\n          })\n          .catch(err => {\n            const errorCode = httpService.getPrimaryApiErrorCode(\n              err,\n              twoStepVerificationConstants.errorCodes.api\n            );\n            reject({\n              code: errorCode,\n              message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n            });\n          });\n      });\n    },\n\n    getStatusSpendFriction() {\n      return $q((resolve, reject) => {\n        httpService\n            .httpGet(\n                {\n                  url: `${EnvironmentUrls.economyApi}/v2/spend-friction/two-step-verification/status`\n                },\n                {}\n            )\n            .then(response => {\n              resolve(response);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n\n    getStatusTradeFriction() {\n      return $q((resolve, reject) => {\n        httpService\n            .httpGet(\n                {\n                  url: `${EnvironmentUrls.tradesApi}/v1/trade-friction/two-step-verification/status`\n                },\n                {}\n            )\n            .then(response => {\n              resolve(response);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n    \n    generateChallengeForSpend() {\n      return $q((resolve, reject) => {\n        httpService\n            .httpPost(\n                {\n                  url: `${EnvironmentUrls.economyApi}/v2/spend-friction/two-step-verification/generate`\n                },\n                {}\n            )\n            .then(response => {\n              resolve(response);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n\n    generateChallengeForTrade() {\n      return $q((resolve, reject) => {\n        httpService\n            .httpPost(\n                {\n                  url: `${EnvironmentUrls.tradesApi}/v1/trade-friction/two-step-verification/generate`\n                },\n                {}\n            )\n            .then(response => {\n              resolve(response);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n\n    verifyChallengeCode(challengeId, code) {\n      return $q((resolve, reject) => {\n        httpService\n            .httpPost(\n                {\n                  url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/challenges/email/verify`\n                },\n                {\n                  challengeId,\n                  actionType: robuxSpendTwoStepResources.actionTypes.robuxSpend,\n                  code\n                }\n            )\n            .then(response => {\n              resolve(response.verificationToken);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n\n    resendEmailCode(challengeId) {\n      return $q((resolve, reject) => {\n        httpService\n            .httpPost(\n                {\n                  url: `${EnvironmentUrls.twoStepVerificationApi}/v1/users/${authenticatedUser.id}/challenges/email/send-code`\n                },\n                {\n                  challengeId: challengeId,\n                  actionType: robuxSpendTwoStepResources.actionTypes.robuxSpend\n                }\n            )\n            .then(() => {\n              resolve();\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n\n    redeemVerificationChallengeForSpend(challengeId, verificationToken) {\n      return $q((resolve, reject) => {\n        httpService\n            .httpPost(\n                {\n                  url: `${EnvironmentUrls.economyApi}/v2/spend-friction/two-step-verification/redeem`\n                },\n                {\n                  challengeToken: challengeId,\n                  verificationToken\n                }\n            )\n            .then((success) => {\n              resolve(success);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n\n    redeemVerificationChallengeForTrade(challengeId, verificationToken) {\n      return $q((resolve, reject) => {\n        httpService\n            .httpPost(\n                {\n                  url: `${EnvironmentUrls.tradesApi}/v1/trade-friction/two-step-verification/redeem`\n                },\n                {\n                  challengeToken: challengeId,\n                  verificationToken\n                }\n            )\n            .then((success) => {\n              resolve(success);\n            })\n            .catch(err => {\n              const errorCode = httpService.getPrimaryApiErrorCode(\n                  err,\n                  twoStepVerificationConstants.errorCodes.api\n              );\n              reject({\n                code: errorCode,\n                message: twoStepVerificationErrorMapper.getErrorMessage(errorCode)\n              });\n            });\n      });\n    },\n    \n    sendFrictionEvent(buttonName) {\n      if (EventStream && EventStream.SendEvent) {\n        EventStream.SendEvent(\n          robuxSpendTwoStepResources.events.frictionEventType,\n          robuxSpendTwoStepResources.events.twoStepVerificationCtx,\n          { btn: buttonName }\n        );\n      }\n    }\n  };\n}\n\naccountSettingsModule.factory('twoStepVerificationService', twoStepVerificationService);\nexport default twoStepVerificationService;\n","import { EnvironmentUrls } from 'Roblox';\nimport accountSettingsModule from '../accountSettingsModule';\n\nfunction usersService($q, $log, httpService) {\n  'ngInject';\n\n  return {\n    updateDisplayName: (userId, newDisplayName) => {\n      const urlConfig = {\n        url: `${EnvironmentUrls.usersApi}/v1/users/${userId}/display-names`,\n        withCredentials: true\n      };\n      const requestModel = { newDisplayName };\n      return httpService.httpPatch(urlConfig, requestModel);\n    },\n\n    validateDisplayName: (userId, newDisplayName) => {\n      const urlConfig = {\n        url: `${EnvironmentUrls.usersApi}/v1/users/${userId}/display-names/validate?displayName=${newDisplayName}`,\n        withCredentials: true\n      };\n      return httpService.httpGet(urlConfig);\n    }\n  };\n}\n\naccountSettingsModule.factory('usersService', usersService);\n\nexport default usersService;\n","\nfunction camelToKebab(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction extractHtmlFileName(str) {\n    let file = str.split('/').pop();\n    return file.replace('.html', '');\n}\n\n//we don't touch common template code is it might break other consumers\n//so we just remove the surrounding script tags.\nfunction removeScriptTag(str) {\n    var scriptTagReg = /<\\/?script[^>]*>/gi;\n    return str.replace(scriptTagReg, '');\n}\n\nconst ES6MigrationHelper = {\n\n    importFilesUnderPath: (ctx) => {\n        ctx.keys().forEach(ctx);\n    },\n\n    templateCacheGenerator: (angular, moduleName, mainTplCtx, commonTplCtx) => {\n        return angular.module(moduleName, [])\n            .run(['$templateCache', function (tc) {\n                if (mainTplCtx) {\n                    mainTplCtx.keys().forEach(key => {\n                        let name = camelToKebab(extractHtmlFileName(key));\n                        tc.put(name, mainTplCtx(key));\n                    });\n                }\n                if (commonTplCtx) {\n                    commonTplCtx.keys().forEach(key => {\n                        let name = camelToKebab(extractHtmlFileName(key));\n                        tc.put(name, removeScriptTag(commonTplCtx(key)));\n                    });\n                }\n            }]);\n    }\n};\n\nmodule.exports = ES6MigrationHelper;","module.exports = \"<div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.TwoStepVerification' | translate\\\"></h3> </div> <div class=\\\"container-header\\\" ng-if=\\\"!$ctrl.layout.loading && !$ctrl.layout.loadError\\\"> <div class=\\\"text-description text-new-line\\\" ng-bind=\\\"'Label.TwoStepVerificationDescription' | translate\\\"></div> </div> <div class=\\\"container-header wrapper\\\" ng-if=\\\"$ctrl.areBothEmailAndAuthenticatorEnabled() && $ctrl.showEmailWarning\\\"> <div class=\\\"icon-warning icon-location\\\"></div> <div class=\\\"text-error\\\" ng-bind=\\\"'Label.TwoStepVerificationEmailWarning' | translate\\\"></div> </div> <div class=\\\"container-header robux-spend-verification\\\" ng-if=\\\"$ctrl.layout.showRobuxSpendTwoStepVerificationContainer\\\"> <span class=\\\"icon-warning\\\"></span> <span class=\\\"text-description\\\" ng-bind=\\\"'Message.RobuxSpendTwoStepVerificationMessage' | translate\\\"> </span> <button id=\\\"robux-spend-verify\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"$ctrl.robuxSpendVerifyChallenge()\\\" ng-bind=\\\"'Action.Verify' | translate\\\"></button> <span id=\\\"2sv-popup-container\\\"></span> </div> <div class=\\\"container-header robux-spend-verification\\\" ng-if=\\\"$ctrl.layout.showItemTradeTwoStepVerificationContainer\\\"> <span class=\\\"icon-warning\\\"></span> <span class=\\\"text-description\\\" ng-bind=\\\"'Message.ItemTradeTwoStepVerificationMessage' | translate\\\"> </span> <button id=\\\"robux-spend-verify\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"$ctrl.itemTradeVerifyChallenge()\\\" ng-bind=\\\"'Action.Verify' | translate\\\"></button> <span id=\\\"2sv-popup-container\\\"></span> </div> <div class=\\\"container-header\\\" ng-if=\\\"$ctrl.layout.loading\\\"> <div class=\\\"loading spinner spinner-default\\\"></div> </div> <div class=\\\"section-content-off\\\" ng-if=\\\"$ctrl.layout.loadError\\\" ng-bind=\\\"$ctrl.layout.loadError\\\"></div> <div ng-if=\\\"!$ctrl.layout.loading && !$ctrl.layout.loadError\\\"> <div class=\\\"section-content notifications-section\\\" ng-show=\\\"$ctrl.metadata.authenticatorEnabled\\\"> <button id=\\\"2sv-authenticator-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"$ctrl.toggleTwoStepVerification($ctrl.mediaTypes.Authenticator)\\\" ng-class=\\\"{'on': $ctrl.isMediaTypeEnabled($ctrl.mediaTypes.Authenticator) }\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"security-2svsetting-label btn-toggle-label\\\"> <div class=\\\"btn-toggle-label\\\" ng-bind=\\\"'Label.AuthenticatorTwoStepVerificationCodes' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind-html=\\\"'Label.AuthenticatorDisabledHelp' | translate: $ctrl.authenticatorDisabledHelp\\\" ng-hide=\\\"$ctrl.isMediaTypeEnabled($ctrl.mediaTypes.Authenticator)\\\"></div> <div class=\\\"text-description\\\" ng-bind=\\\"'Label.AuthenticatorHelpText' | translate\\\" ng-show=\\\"$ctrl.isMediaTypeEnabled($ctrl.mediaTypes.Authenticator)\\\"> </div> </div> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"2sv-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"$ctrl.toggleTwoStepVerification($ctrl.mediaTypes.Email)\\\" ng-class=\\\"{'on': $ctrl.isMediaTypeEnabled($ctrl.mediaTypes.Email) }\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"security-2svsetting-label btn-toggle-label\\\"> <div class=\\\"btn-toggle-label\\\" ng-bind=\\\"'Label.EmailTwoStepVerificationCodes' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind=\\\"'Label.TwoStepPrerequisite' | translate\\\" ng-hide=\\\"$ctrl.isMediaTypeEnabled($ctrl.mediaTypes.Email)\\\"></div> <div class=\\\"text-description\\\" ng-bind=\\\"'Description.TwoStepverificationSecondaryEnabled' | translate: {email: $ctrl.email}\\\" ng-show=\\\"$ctrl.isMediaTypeEnabled($ctrl.mediaTypes.Email)\\\"> </div> </div> </div> <div class=\\\"section-content notifications-section\\\" ng-show=\\\"$ctrl.shouldShowRecoveryCodesSection()\\\"> <button type=\\\"button\\\" id=\\\"generate-recovery-codes\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"$ctrl.generateRecoveryCodes(false)\\\" ng-bind=\\\"'Action.Generate' | translate\\\"></button> <div class=\\\"security-2svsetting-label btn-toggle-label\\\"> <div class=\\\"btn-toggle-label\\\" ng-bind=\\\"'Label.GenerateRecoveryCodes' | translate\\\" ng-show=\\\"$ctrl.recoveryCodeCreated == null\\\"></div> <div class=\\\"btn-toggle-label-new-codes\\\" ng-show=\\\"$ctrl.recoveryCodeCreated != null\\\"> <div class=\\\"label-new-codes\\\" ng-bind=\\\"'Label.GenerateNewRecoveryCodes' | translate\\\"></div> <div class=\\\"text-number-of-remaining-codes\\\"> <span class=\\\"small text\\\" ng-bind=\\\"'Label.UnusedRecoveryCodes' | translate: { activeCodeCount: $ctrl.activeRecoveryCodeCount }\\\"></span> </div> </div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind=\\\"'Label.RecoveryCodesHelpText' | translate\\\"> </div> </div> </div> </div> </div>\";","module.exports = \"<div> <div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Billing' | translate\\\"></h3> </div> <div class=\\\"section-content remove-panel settings-billing-container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-xs-12 col-sm-9\\\"> <div class=\\\"form-group membership-status-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Heading.MembershipStatus' | translate\\\"></label> <div ng-show=\\\"isAnyMembership()\\\"> <p class=\\\"membership-premium\\\" ng-if=\\\"accountContent.userInfo.data.isPremiumUser\\\" ng-bind=\\\"accountContent.userInfo.data.subscriptionTypeName\\\"> </p> </div> <p ng-hide=\\\"isAnyMembership()\\\" ng-bind=\\\"'Description.MembershipStatusRobloxPremium' | translate\\\"> </p> </div> <div class=\\\"form-group renew-date-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-show=\\\"isAnyMembership()\\\" ng-if=\\\"isMembershipRenewal()\\\" ng-bind=\\\"'Label.RenevalDate' | translate\\\"></label> <label class=\\\"text-label account-settings-label\\\" ng-show=\\\"isAnyMembership()\\\" ng-if=\\\"!isMembershipRenewal()\\\" ng-bind=\\\"'Label.ExpirationDate' | translate\\\"></label> <p> <span class=\\\"text-robux membership-period\\\" ng-show=\\\"accountContent.userInfo.data.isPremiumUser\\\"> <span class=\\\"membership-days\\\" ng-if=\\\"accountContent.userInfo.data.subscriptionRenewal\\\" ng-bind-html=\\\"'Label.RenevalDateMessage' | translate:{expirationDate: accountContent.userInfo.data.subscriptionRenewal, startSpan: '<span class=membership-expires>', endSpan:'</span>' }\\\"></span> <span class=\\\"membership-days\\\" ng-if=\\\"!accountContent.userInfo.data.subscriptionRenewal\\\" ng-bind-html=\\\"'Label.ExpirationDateMessage' | translate:{expirationDate: accountContent.userInfo.data.subscriptionExpiration, startSpan: '<span class=membership-expires>', endSpan:'</span>' }\\\"></span> </span> </p> </div> <div class=\\\"form-group membership-update-container\\\"> <a id=\\\"UpgradeMembership\\\" class=\\\"btn-primary-sm acct-upgrade-membership\\\" ng-href=\\\"{{accountData.stateProperties.upgradeMemberShipUrl}}\\\" ng-if=\\\"!isAnyMembership()\\\" ng-bind=\\\"'Action.Join' | translate\\\"></a> <a id=\\\"CancelRenewal\\\" class=\\\"btn-control-sm acct-cancel-renewal\\\" ng-href=\\\"{{accountData.stateProperties.cancelRenewalUrl}}\\\" ng-mouseup=\\\"handleCancelBtnClicked()\\\" ng-show=\\\"isMembershipRenewal() && !accountData.stateProperties.inApp\\\" ng-bind=\\\"'Action.CancelRenewal' | translate\\\"></a> </div> <div ng-if=\\\"accountData.stateProperties.isRobloxCreditEnabled == 'true'\\\"> <div id=\\\"roblox-credit-container\\\" class=\\\"roblox-credit-container\\\"></div> </div> <div class=\\\"membership-info\\\"> <span ng-bind-html=\\\"'Label.BillingHelpWithLink' | translate:{aTagStartWithHref: '<a href=', billingHelpPagesLink: 'https://en.help.roblox.com/hc/categories/200213820', hrefEnd: ' class=text-name>', aTagEnd: '</a>' }\\\"></span> </div> </div> <div class=\\\"col-xs-12\\\"> <p class=\\\"text-pastname\\\" ng-show=\\\"isMembershipRenewal() && accountData.stateProperties.inApp\\\" ng-bind=\\\"'Description.RenevalFromWebsiteOnly' | translate\\\"></p> </div> </div> </div> </div> </div>\";","module.exports = \"<div> <div class=\\\"section description-section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.FastTrack' | translate\\\"></h3> </div> <div class=\\\"section-content accuracy-section\\\"> <p ng-bind=\\\"'Description.FastTrack' | translate\\\"></p> </div> </div> <div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Label.FastTrack.Statistics' | translate\\\"></h3> </div> <div class=\\\"section-content accuracy-section\\\"> <div class=\\\"col-sm-12\\\"> <h4 ng-bind=\\\"'Label.FastTrack.Accuracy' | translate\\\"></h4> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Description.HelpText.FastTrack.Accuracy' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <table class=\\\"table table-striped\\\"> <thead> <tr> <th><label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.FastTrack.You' | translate\\\"></label></th> <th><label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.FastTrack.AllFastTrackMembers' | translate\\\"></label></th> <th><label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.FastTrack.ReportMonth' | translate\\\"></label></th> <th><label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.FastTrack.ReportYear' | translate\\\"></label></th> </tr> </thead> <tbody> <tr ng-repeat=\\\"timePeriod in accountContent.userInfo.data.FastTrackMember.TimePeriods\\\"> <td>{{ percentTranslator(timePeriod.IndividualGoodReportPercentage) }}</td> <td>{{ percentTranslator(timePeriod.EveryoneGoodReportPercentage) }}</td> <td>{{ dateMonthTranslator(timePeriod.DateTimeMs) }}</td> <td>{{ dateYearTranslator(timePeriod.DateTimeMs) }}</td> </tr> </table> </div> </div> </div> </div>\";","module.exports = \"<div> <div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.AccountInfo' | translate\\\" id=\\\"rbx-account-info-header\\\"></h3> </div> <div ng-if=\\\"accountSettingsPolicy.displayIdentityVerification\\\" id=\\\"id-verification-container\\\" entry=\\\"AccountSettings\\\"> <div id-verification-container></div> </div> <div class=\\\"section-content remove-panel settings-account-info-container\\\"> <div class=\\\"col-sm-12\\\"> <div ng-if=\\\"accountContent.userInfo.data.IsDisplayNamesEnabled\\\" class=\\\"form-group\\\" ng-controller=\\\"displayNameController\\\"> <span class=\\\"text-label account-settings-label\\\" ng-model=\\\"accountContent.userInfo.data.DisplayName\\\" ng-bind=\\\"'Label.DisplayName' | translate\\\"></span> <span class=\\\"account-field-displayname\\\">{{ accountContent.userInfo.data.DisplayName }}</span> <span class=\\\"account-change-displayname icon-edit\\\" title=\\\"{{ 'Label.ConfigureDN' | translate }}\\\" ng-click=\\\"changeDisplayName()\\\" ng-cloak></span> </div> <div class=\\\"form-group\\\"> <span class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Username' | translate\\\"></span> <span class=\\\"account-field-username\\\">{{ accountContent.userInfo.data.Name }}</span> <span class=\\\"account-change-username icon-edit\\\" title=\\\"{{ 'Description.HoverText.ChangeUsername' | translate }}\\\" ng-click=\\\"changeUsername()\\\" ng-if=\\\"accountSettingsPolicy.displayChangeUsername\\\" ng-cloak></span> </div> <div ng-if=\\\"accountSettingsPolicy.displayPasswordRow\\\" class=\\\"form-group\\\"> <span class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Password' | translate\\\"></span> <span class=\\\"account-field-password\\\" ng-hide=\\\"accountContent.userInfo.data.IsSetPasswordNotificationEnabled\\\">*******</span> <span class=\\\"account-field-password-needed\\\" ng-show=\\\"accountContent.userInfo.data.IsSetPasswordNotificationEnabled\\\"> <span class=\\\"icon-warning\\\"></span> {{ 'Label.AddPassword' | translate }} </span> <span class=\\\"account-change-password icon-edit\\\" title=\\\"{{ 'Description.HoverText.ChangePassword' | translate }}\\\" ng-hide=\\\"accountContent.userInfo.data.IsSetPasswordNotificationEnabled\\\" ng-if=\\\"accountSettingsPolicy.displayChangePassword\\\" ng-click=\\\"setPassword()\\\" ng-cloak></span> <span class=\\\"account-change-password icon-edit\\\" title=\\\"{{ 'Label.AddPassword' | translate }}\\\" ng-show=\\\"accountContent.userInfo.data.IsSetPasswordNotificationEnabled\\\" ng-click=\\\"setPassword()\\\"></span> </div> <div class=\\\"form-group\\\" ng-show=\\\"accountContent.userInfo.data.PreviousUserNames != ''\\\"> <span class=\\\"account-previous-usernames\\\"> {{ 'Label.PreviousUsernames' | translate }} <span class=\\\"account-previous-username-list\\\">{{\\n                            accountContent.userInfo.data.PreviousUserNames }}</span> </span> </div> <div class=\\\"form-group\\\" ng-if=\\\"accountSettingsPolicy.displayPhoneNumber && accountInfoSettings.isPhoneNumberVisible\\\" ng-cloak> <span class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Phone' | translate\\\"></span> <span class=\\\"account-field-phone\\\">{{ accountInfoSettings.phone }}</span> <span ng-show=\\\"accountInfoSettings.isPhoneVerified\\\"> <span class=\\\"account-field-verified-icon icon-checkmark-16x16\\\" ng-show=\\\"accountInfoSettings.isPhoneVerified\\\"></span> <span class=\\\"text-robux account-field-phone-verified-text\\\" ng-show=\\\"accountInfoSettings.isPhoneVerified\\\" ng-bind=\\\"'Label.Verified' | translate\\\"></span> </span> <span class=\\\"account-field-phone-add-msg text-error\\\" ng-hide=\\\"accountInfoSettings.isPhoneVerified\\\"> <span class=\\\"icon-warning\\\"></span> {{ 'Label.AddPhone' | translate }} </span> <span class=\\\"account-field-phone-add-phone text-name\\\" ng-click=\\\"addPhone()\\\" ng-hide=\\\"accountInfoSettings.isPhoneVerified\\\" ng-bind=\\\"'Label.AddPhoneLink' | translate\\\"></span> <span class=\\\"account-change-phone icon-edit\\\" title=\\\"{{ 'Label.UpdatePhone' | translate }}\\\" ng-click=\\\"changePhone()\\\" ng-show=\\\"accountInfoSettings.isPhoneVerified\\\"></span> </div> <div class=\\\"form-group\\\" ng-if=\\\"accountSettingsPolicy.displayEmailAddress\\\" ng-cloak> <span class=\\\"text-label account-settings-label\\\" ng-if=\\\"accountContent.userInfo.data.UserAbove13\\\" ng-bind=\\\"'Label.Email' | translate\\\"></span> <span class=\\\"text-label account-settings-label\\\" ng-if=\\\"!accountContent.userInfo.data.UserAbove13\\\" ng-bind=\\\"'Label.EmailParent' | translate\\\"></span> <span class=\\\"account-field-email\\\">{{ accountContent.userInfo.data.UserEmail }}</span> <span class=\\\"account-field-verified-icon icon-checkmark-16x16\\\" ng-show=\\\"accountContent.hasVerifiedEmail\\\"></span> <span class=\\\"text-robux account-field-email-verified-text\\\" ng-show=\\\"accountContent.hasVerifiedEmail\\\" ng-bind=\\\"'Label.Verified' | translate\\\"></span> <span class=\\\"account-field-email-add-msg text-error\\\" ng-hide=\\\"accountContent.userInfo.data.IsEmailOnFile\\\" ng-if=\\\"accountContent.userInfo.data.UserAbove13\\\"> <span class=\\\"icon-warning\\\"></span> {{ 'Label.AddEmail' | translate }} </span> <span class=\\\"account-field-email-add-msg text-error\\\" ng-hide=\\\"accountContent.userInfo.data.IsEmailOnFile\\\" ng-if=\\\"!accountContent.userInfo.data.UserAbove13\\\"> <span class=\\\"icon-warning\\\"></span> {{ 'Label.AddEmailParent' | translate }} </span> <span class=\\\"account-field-email-verify-msg text-error\\\" ng-show=\\\"accountContent.hasEmailButNotVerified\\\"> <span class=\\\"icon-warning\\\"></span> {{ 'Label.EmailVerificationPending' | translate }} </span> <span class=\\\"account-field-email-add-address text-name\\\" ng-click=\\\"setEmailAddress()\\\" ng-hide=\\\"accountContent.userInfo.data.IsEmailOnFile\\\" ng-if=\\\"accountContent.userInfo.data.UserAbove13\\\" ng-bind=\\\"'Label.AddEmail' | translate\\\"></span> <span class=\\\"account-field-email-add-address text-name\\\" ng-click=\\\"setEmailAddress()\\\" ng-hide=\\\"accountContent.userInfo.data.IsEmailOnFile\\\" ng-if=\\\"!accountContent.userInfo.data.UserAbove13\\\" ng-bind=\\\"'Label.AddEmailParent' | translate\\\"></span> <span class=\\\"account-field-email-verify\\\" ng-show=\\\"accountContent.hasEmailButNotVerified\\\"> <span class=\\\"text-name\\\" ng-click=\\\"verifyEmailAddress(false)\\\" ng-bind=\\\"'Label.Verify' | translate\\\"></span> | <span class=\\\"text-name\\\" ng-click=\\\"setEmailAddress()\\\" ng-bind=\\\"'Label.UpdateEmail' | translate\\\"></span> </span> <span class=\\\"account-change-email icon-edit\\\" title=\\\"{{ 'Label.UpdateEmail' | translate }}\\\" ng-click=\\\"setEmailAddress()\\\" ng-show=\\\"accountContent.hasVerifiedEmail\\\"></span> </div> <div class=\\\"form-group\\\" ng-hide=\\\"true\\\"> <span class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.ConnectAccount' | translate\\\"></span> <span class=\\\"account-field-email text-error\\\" ng-bind=\\\"'Label.AddEmail' | translate\\\"></span> </div> </div> </div> </div> <div class=\\\"section\\\" ng-controller=\\\"personalController\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Personal' | translate\\\"></h3> </div> <div class=\\\"section-content remove-panel settings-personal-container\\\" ng-class=\\\"{'personal-settings-refactor-enabled': accountData.stateProperties.isPersonalSettingRefactorEnabled}\\\"> <div class=\\\"col-sm-12\\\"> <div class=\\\"form-group birthday-container\\\"> <span class=\\\"text-label\\\" ng-class=\\\"{'birthday-label-mobile' : !accountData.stateProperties.isPersonalSettingRefactorEnabled,'label-mobile' : accountData.stateProperties.isPersonalSettingRefactorEnabled}\\\" ng-bind=\\\"'Label.Birthday' | translate\\\"></span> <div ng-if=\\\"isDateTimeI18nPickerEnabled()\\\" class=\\\"form-control fake-input-lg\\\"> <label class=\\\"text-label\\\" ng-class=\\\"{'birthday-label' : !accountData.stateProperties.isPersonalSettingRefactorEnabled,'label-desktop' : accountData.stateProperties.isPersonalSettingRefactorEnabled}\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\" ng-bind=\\\"'Label.Birthday' | translate\\\"></label> <div ng-repeat=\\\"part in populateAccount.orderedBirthdayParts.parts\\\" class=\\\"rbx-select-group date select-group\\\" ng-class=\\\"part.className\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"{{part.idName}}\\\" ng-model=\\\"personal.birthdate[part.birthdayName]\\\" ng-change=\\\"updateBirthdate()\\\" ng-options=\\\"option.value as option.name for option in part.options\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13 || accountContent.userInfo.data.IsBirthdateLocked\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div ng-if=\\\"!isDateTimeI18nPickerEnabled()\\\" class=\\\"form-control fake-input-lg\\\"> <label class=\\\"text-label\\\" ng-class=\\\"{'birthday-label' : !accountData.stateProperties.isPersonalSettingRefactorEnabled,'label-desktop' : accountData.stateProperties.isPersonalSettingRefactorEnabled}\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\" ng-bind=\\\"'Label.Birthday' | translate\\\"></label> <div ng-if=\\\"isAsianBirthdayPickerEnabled()\\\" class=\\\"rbx-select-group year select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"YearDropdown\\\" ng-model=\\\"personal.birthdate.birthYear\\\" ng-change=\\\"updateBirthdate()\\\" ng-options=\\\"year.value as year.name for year in populateAccount.years\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> <div ng-if=\\\"!isAsianBirthdayPickerEnabled()\\\" class=\\\"rbx-select-group month select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"MonthDropdown\\\" ng-model=\\\"personal.birthdate.birthMonth\\\" ng-change=\\\"updateBirthdate()\\\" ng-options=\\\"month.value as month.name for month in populateAccount.months\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> <div ng-if=\\\"isAsianBirthdayPickerEnabled()\\\" class=\\\"rbx-select-group month select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"MonthDropdown\\\" ng-model=\\\"personal.birthdate.birthMonth\\\" ng-change=\\\"updateBirthdate()\\\" ng-options=\\\"month.value as month.name for month in populateAccount.monthsI18n\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> <div class=\\\"rbx-select-group day select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"DayDropdown\\\" ng-model=\\\"personal.birthdate.birthDay\\\" ng-change=\\\"updateBirthdate()\\\" ng-options=\\\"day.value as day.name for day in populateAccount.days\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> <div ng-if=\\\"!isAsianBirthdayPickerEnabled()\\\" class=\\\"rbx-select-group year select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"YearDropdown\\\" ng-model=\\\"personal.birthdate.birthYear\\\" ng-change=\\\"updateBirthdate()\\\" ng-options=\\\"year.value as year.name for year in populateAccount.years\\\" ng-disabled=\\\"!accountContent.userInfo.data.UserAbove13\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <span class=\\\"small text account-more-info\\\" ng-show=\\\"accountContent.userInfo.data.UserAbove13 && accountContent.userInfo.data.IsAgeDownEnabled\\\"> <span class=\\\"verify-identity-wrapper\\\" ng-if=\\\"personal.showIdentityVerification\\\"> <button ng-if=\\\"!personal.birthdateVerified\\\" id=\\\"PromptIdVerification\\\" class=\\\"verify-identity-button btn-control-sm acct-settings-btn\\\" ng-click=\\\"verifyAge()\\\"> <span ng-bind=\\\"'Action.Dialog.VerifyAge' | translate\\\"></span> </button> <button ng-if=\\\"personal.birthdateVerified\\\" id=\\\"PromptIdVerification\\\" class=\\\"verify-identity-button btn-control-sm acct-settings-btn verify-age-btn\\\" disabled=\\\"\\\"> <span ng-bind=\\\"'Label.AgeVerified' | translate\\\"></span> <span class=\\\"icon-checkmark-16x16\\\"></span> </button> <span class=\\\"verify-legal-text\\\" ng-if=\\\"personal.birthdateVerified\\\">{{\\n                                'Description.HelpText.VerifiedBirthday' | translate }}</span> <span class=\\\"verify-legal-text\\\" ng-if=\\\"!personal.birthdateVerified\\\">{{\\n                                'Label.ThirdPartyVerificationDisclaimer' | translate }}</span> </span> <span class=\\\"tooltip-container ng-scope\\\" tooltip-placement=\\\"bottom-left\\\" ng-if=\\\"accountSettingsPolicy.displayPrivacyModeToolTip\\\" tooltip=\\\"{{ 'Label.ToolTip.PrivacyMode' | translate }}\\\" ng-click=\\\"privacyModeInfo()\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> {{ 'Description.HelpText.PrivacyMode' | translate }} </span> </div> <div class=\\\"form-group gender-container\\\"> <label class=\\\"text-label label-mobile\\\" ng-bind=\\\"'Label.GenderOptional' | translate\\\"></label> <div class=\\\"form-control fake-input-lg\\\"> <label class=\\\"text-label label-desktop\\\" ng-bind=\\\"'Label.GenderOptional' | translate\\\"></label> <button id=\\\"MaleButton\\\" class=\\\"border gender-button\\\" ng-click=\\\"chooseGender(populateAccount.gender.MALE)\\\"> <div class=\\\"gender-icon icon-male\\\" ng-class=\\\"{'selected': personal.gender === populateAccount.gender.MALE}\\\"></div> </button> <button id=\\\"FemaleButton\\\" class=\\\"border gender-button\\\" ng-click=\\\"chooseGender(populateAccount.gender.FEMALE)\\\"> <div class=\\\"gender-icon icon-female\\\" ng-class=\\\"{'selected': personal.gender === populateAccount.gender.FEMALE}\\\"></div> </button> </div> </div> <div class=\\\"form-group locale-container\\\" ng-if=\\\"accountSettingsPolicy.displayLanguageList\\\" ng-cloak> <label class=\\\"text-label label-mobile\\\" ng-bind=\\\"'Label.LocaleTitle' | translate\\\"></label> <div id=\\\"locale-list\\\" class=\\\"fake-input-lg\\\"> <label class=\\\"text-label label-desktop\\\" ng-if=\\\"accountData.stateProperties.isPersonalSettingRefactorEnabled\\\" ng-bind=\\\"'Label.LocaleTitle' | translate\\\"></label> <div id=\\\"account-settings-language-selector\\\"></div> </div> </div> <div class=\\\"form-group country-container\\\" ng-if=\\\"accountSettingsPolicy.displayCountryList\\\" ng-cloak> <label class=\\\"text-label label-mobile\\\" ng-bind=\\\"'Label.CountryTitle' | translate\\\"></label> <div class=\\\"fake-input-lg\\\"> <label class=\\\"text-label label-desktop\\\" ng-if=\\\"accountData.stateProperties.isPersonalSettingRefactorEnabled\\\" ng-bind=\\\"'Label.CountryTitle' | translate\\\"></label> <div id=\\\"country-list\\\" class=\\\"rbx-select-group select-group col-xs-12 col-sm-6\\\"> <select class=\\\"input-field rbx-select select-option\\\" ng-model=\\\"personal.country.countryId\\\" ng-change=\\\"updateCountry()\\\" ng-options=\\\"country.countryId as country.localizedName disable when country.disabled for country in allActiveCountryList\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> <div class=\\\"form-group themes-choose-container\\\"> <label ng-if=\\\"accountData.stateProperties.isPersonalSettingRefactorEnabled\\\" class=\\\"text-label label-mobile\\\" ng-bind=\\\"'Label.ThemeTitle' | translate\\\"></label> <div class=\\\"form-control fake-input-lg\\\"> <label class=\\\"text-label label-desktop\\\" ng-bind=\\\"'Label.ThemeTitle' | translate\\\"></label> <div id=\\\"themes-list\\\" class=\\\"rbx-select-group select-group col-xs-12 col-sm-6\\\"> <select class=\\\"input-field rbx-select select-option\\\" ng-model=\\\"themeContent.newThemeType\\\" ng-change=\\\"chooseThemes()\\\" ng-options=\\\"option.value as option.name for option in themeContent.availableThemes\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> <div class=\\\"form-group col-sm-2 save-settings-container\\\"> <button id=\\\"SaveInfoSettings\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"updateDescription()\\\" ng-bind=\\\"'Action.Save' | translate\\\"></button> </div> </div> </div> </div> <div id=\\\"social-networks\\\" ng-if=\\\"!accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-include=\\\"'account-social'\\\"> </div> </div>\";","module.exports = \"<div class=\\\"section\\\" ng-cloak ng-if=\\\"receiverDestinationTypeMapping.length > 0\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Notifications' | translate\\\"></h3> </div> <div ng-repeat=\\\"receiverDestinationType in receiverDestinationTypeMapping\\\" ng-cloak ng-if=\\\"destinationNotificationBands(receiverDestinationType.destinationType).length > 0\\\"> <div class=\\\"section-content notifications-section\\\"> <h4>{{receiverDestinationType.friendlyTitle}}</h4> <button class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-if=\\\"isAvailable(receiverDestinationType) && isToggleable(receiverDestinationType)\\\" ng-class=\\\"{'on': !isDestinationTypeOptedOut(receiverDestinationType)}\\\" ng-click=\\\"toggleDestinationTypeOptOut(receiverDestinationType)\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"account-settings-label\\\">{{receiverDestinationType.blurbText}}</div> <div class=\\\"info-text account-settings-label\\\" ng-if=\\\"isAvailable(receiverDestinationType)\\\"> {{receiverDestinationType.secondaryBlurbText}}</div> <div class=\\\"info-text account-settings-label\\\" ng-if=\\\"!isAvailable(receiverDestinationType)\\\"> {{receiverDestinationType.getUnavailableReason()}}</div> <div class=\\\"text-label account-settings-label\\\" ng-if=\\\"receiverDestinationType.areSourcesShown\\\"> {{receiverDestinationType.actionWhenText}}</div> <div ng-repeat=\\\"notificationBand in destinationNotificationBands(receiverDestinationType.destinationType)\\\" ng-if=\\\"!isNotificationBandBlacklisted(notificationBand.notificationSourceType, receiverDestinationType.destinationType) && !!notificationSourceTypeMapping[notificationBand.notificationSourceType] && receiverDestinationType.areSourcesShown\\\" class=\\\"notification-settings-checkbox-container\\\"> <div class=\\\"checkbox notification-settings-checkbox\\\"> <input type=\\\"checkbox\\\" ng-checked=\\\"notificationBand.isEnabled\\\" ng-disabled=\\\"isDestinationTypeOptedOut(receiverDestinationType) || !notificationBand.isOverridable\\\" ng-click=\\\"toggleNotificationBand(notificationBand)\\\" id=\\\"{{receiverDestinationType.destinationType}}-checkbox-{{$index}}\\\"> <label for=\\\"{{receiverDestinationType.destinationType}}-checkbox-{{$index}}\\\" class=\\\"font-caption-body\\\">{{notificationSourceTypeMapping[notificationBand.notificationSourceType]}}</label> </div> </div> <div class=\\\"info-text account-settings-label\\\" ng-if=\\\"receiverDestinationType.areSourcesShown\\\"></div> <div class=\\\"account-settings-label\\\" ng-if=\\\"receiverDestinationType.areSourcesShown\\\"> {{receiverDestinationType.actionDescriptionText}} </div> </div> </div> <div class=\\\"container-header\\\"> <button id=\\\"save-notification-preferences\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"updateNotificationSettings()\\\" ng-bind=\\\"'Action.Save' | translate\\\"></button> </div> </div>\";","module.exports = \"<div ng-if=\\\"accountContent.userInfo.data.IsParentalControlsTabEnabled\\\"> <div> <div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.ParentalControls' | translate\\\"></h3> </div> <div class=\\\"container-header\\\"> <div class=\\\"text-description text-new-line\\\" ng-bind=\\\"'Description.ParentalControls' | translate\\\"></div> </div> </div> <div class=\\\"section\\\" ng-show=\\\"accountContent.userInfo.data.IsAccountPinEnabled\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.ParentPin' | translate\\\"></h3> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"accountPin-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleAccountPinEnabledSetting()\\\" ng-class=\\\"{'on': accountPinContent.isEnabled}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"accountPinContent.isEnabled\\\" ng-bind=\\\"'Label.ParentPinEnabled' | translate\\\"></div> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"!accountPinContent.isEnabled\\\" ng-bind=\\\"'Label.ParentPinDisabled' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind-html=\\\"'Description.AccountPin' | translate\\\"></div> </div> </div> <div class=\\\"section\\\" ng-if=\\\"parentContent.accountRestrictions.isFeatureEnabled && accountSettingsPolicy.displayAccountRestrictions\\\" ng-cloak> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Restrictions' | translate\\\"></h3> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"accountRestrictions-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleAccountRestrictionsSetting()\\\" ng-class=\\\"{'on': accountRestrictions.IsEnabled}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"accountRestrictions.IsEnabled\\\" ng-bind=\\\"'Label.AccountRestrictionEnabled' | translate\\\"></div> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"!accountRestrictions.IsEnabled\\\" ng-bind=\\\"'Label.AccountRestrictionDisabled' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind-html=\\\"'Description.AccountRestrictions' | translate:{linkStart:'<a class=text-link href=#!/privacy>', linkEnd:'</a>'}\\\"> </div> </div> </div> <div class=\\\"section\\\" ng-show=\\\"isContentRatingsSettingVisible()\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.ContentRatings' | translate\\\"></h3> </div> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Description.ContentRatings' | translate\\\"></label> <div ng-if=\\\"isContentRatingsSettingVisible()\\\" class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"ContentRatings\\\" ng-model=\\\"parentalSettings.ContentRatings\\\" ng-options=\\\"option.value as option.name for option in populateAccount.contentRatings\\\" ng-change=\\\"updateContentRatings()\\\" ng-disabled=\\\"accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> <div class=\\\"section screentime-restrictions\\\" ng-if=\\\"parentalSettings.screentime.enableParentalScreenTimeControls\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.ScreentimeRestrictions' | translate\\\"></h3> </div> <div class=\\\"form-group\\\"> <span class=\\\"text-description\\\" ng-bind=\\\"'Label.AddRestrictions' | translate\\\"></span> <button id=\\\"add-restriction-btn\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"addRestriction()\\\" ng-bind=\\\"'Action.Add' | translate\\\"></button> </div> <div class=\\\"form-group\\\" ng-if=\\\"parentalSettings.screentime.deviceTimezone != parentalSettings.screentime.parentalTimezone\\\"> <span class=\\\"text-description\\\" ng-bind=\\\"'Label.UpdateTimezonePrompt' | translate: {timeZone: parentalSettings.screentime.deviceTimezone}\\\"></span> <button class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"updateTimezoneAndSaveRestrictions()\\\" ng-bind=\\\"'Action.Dialog.Update' | translate\\\"></button> </div> <div class=\\\"restriction-dropdowns-section\\\" ng-repeat=\\\"restriction in parentalSettings.screentime.curfewRestrictedHours\\\"> <div class=\\\"restriction-dropdown-container\\\"> <span class=\\\"text-label col-xs-12 col-sm-6\\\" ng-bind=\\\"'Label.BlockedFrom' | translate\\\"></span> <button type=\\\"button\\\" class=\\\"btn-secondary-md\\\" disabled=\\\"\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"populateAccount.timeMappings.get(restriction.begin)\\\"></span> </button> </div> <div class=\\\"restriction-dropdown-container\\\"> <span class=\\\"text-label col-xs-12 col-sm-6\\\" ng-bind=\\\"'Label.BlockedUntil' | translate\\\"></span> <button type=\\\"button\\\" class=\\\"btn-secondary-md\\\" disabled=\\\"\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"populateAccount.timeMappings.get(restriction.end)\\\"></span> </button> </div> <div class=\\\"restriction-dropdown-container\\\"> <span class=\\\"text-label col-xs-12 col-sm-6\\\" ng-bind=\\\"'Label.Repeat' | translate\\\"></span> <button type=\\\"button\\\" class=\\\"btn-secondary-md\\\" disabled=\\\"\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"dayString(restriction.days)\\\"></span> </button> </div> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-left\\\" uib-tooltip=\\\"{{'Description.CinderellaLaw' | translate}}\\\"> <span class=\\\"icon-moreinfo\\\"></span> <span class=\\\"small-oneline text\\\" ng-bind=\\\"'Label.CinderellaLawTooltip' | translate\\\"></span> </span> <div class=\\\"rbx-divider curfew-divider\\\"></div> </div> <div class=\\\"restriction-dropdowns-section\\\" ng-repeat=\\\"restriction in parentalSettings.screentime.parentalRestrictedHours\\\"> <div class=\\\"restriction-dropdown-container\\\"> <span class=\\\"text-label col-xs-12 col-sm-6\\\" ng-bind=\\\"'Label.BlockedFrom' | translate\\\"></span> <div class=\\\"blocked-from-dropdown input-group-btn col-xs-12 col-sm-6\\\"> <button type=\\\"button\\\" class=\\\"input-dropdown-btn\\\" data-toggle=\\\"dropdown\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"populateAccount.timeMappings.get(restriction.begin)\\\"></span> <span class=\\\"icon-down-16x16\\\"></span> </button> <ul data-toggle=\\\"dropdown-menu\\\" class=\\\"dropdown-menu\\\" role=\\\"menu\\\"> <li ng-repeat=\\\"time in populateAccount.restrictionBeginTimes\\\"> <a class=\\\"dropdown-item\\\" ng-click=\\\"updateRestrictionBeginTime(restriction, time.timestamp)\\\"> <span ng-bind=\\\"time.name\\\"></span> <span class=\\\"icon-checkmark\\\" ng-if=\\\"time.timestamp == restriction.begin\\\"></span> </a> <div class=\\\"rbx-divider\\\"></div> </li> </ul> </div> </div> <div class=\\\"restriction-dropdown-container\\\"> <span class=\\\"text-label col-xs-12 col-sm-6\\\" ng-bind=\\\"'Label.BlockedUntil' | translate\\\"></span> <div class=\\\"blocked-until-dropdown input-group-btn col-xs-12 col-sm-6\\\"> <button type=\\\"button\\\" class=\\\"input-dropdown-btn\\\" data-toggle=\\\"dropdown\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"populateAccount.timeMappings.get(restriction.end)\\\"></span> <span class=\\\"icon-down-16x16\\\"></span> </button> <ul data-toggle=\\\"dropdown-menu\\\" class=\\\"dropdown-menu\\\" role=\\\"menu\\\"> <li ng-repeat=\\\"time in populateAccount.restrictionEndTimes\\\"> <a class=\\\"dropdown-item\\\" ng-click=\\\"updateRestrictionEndTime(restriction, time.timestamp)\\\"> <span ng-bind=\\\"time.name\\\"></span> <span class=\\\"icon-checkmark\\\" ng-if=\\\"time.timestamp == restriction.end\\\"></span> </a> <div class=\\\"rbx-divider\\\"></div> </li> </ul> </div> </div> <div class=\\\"restriction-dropdown-container\\\"> <span class=\\\"text-label col-xs-12 col-sm-6\\\" ng-bind=\\\"'Label.Repeat' | translate\\\"></span> <div class=\\\"repeat-days-dropdown input-group-btn col-xs-12 col-sm-6\\\"> <button type=\\\"button\\\" class=\\\"input-dropdown-btn\\\" data-toggle=\\\"dropdown\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"dayString(restriction.days)\\\"></span> <span class=\\\"icon-down-16x16\\\"></span> </button> <ul data-toggle=\\\"dropdown-menu\\\" class=\\\"dropdown-menu\\\" role=\\\"menu\\\"> <li ng-repeat=\\\"day in populateAccount.daysOfWeek\\\"> <a class=\\\"dropdown-item\\\" ng-click=\\\"toggleRestrictionDay(restriction, day.value); $event.stopPropagation();\\\"> <span ng-bind=\\\"day.name\\\"></span> <span class=\\\"icon-checkmark\\\" ng-if=\\\"restriction.days.includes(day.value)\\\"></span> </a> <div class=\\\"rbx-divider\\\"></div> </li> </ul> </div> </div> <button class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"deleteRestriction(restriction)\\\" ng-bind=\\\"'Action.Delete' | translate\\\"></button> <div class=\\\"rbx-divider\\\"></div> </div> <div class=\\\"section-content\\\"> <div class=\\\"text-description\\\" ng-bind=\\\"'Label.SaveRestrictionsPrompt' | translate\\\"></div> <button id=\\\"save-restrictions-btn\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"saveRestrictionsHandler()\\\" ng-bind=\\\"'Action.Save' | translate\\\"></button> </div> </div> <div class=\\\"section\\\" ng-if=\\\"accountContent.userInfo.data.IsParentalSpendControlsEnabled && accountSettingsMetadata.isMonthlyLimitSettingVisible\\\" ng-cloak> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.MonthlyLimit' | translate\\\"></h3> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"monthly-limit-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleMonthlyLimitSetting()\\\" ng-class=\\\"{'on': parentalSettings.MonthlyLimitEnabled}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"parentalSettings.MonthlyLimitEnabled\\\" ng-bind=\\\"'Description.MonthlyLimitEnabled' | translate\\\"></div> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"!parentalSettings.MonthlyLimitEnabled\\\" ng-bind=\\\"'Description.MonthlyLimitDisabled' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind=\\\"'Description.MonthlyLimit' | translate\\\"></div> </div> <div class=\\\"section monthly-limit\\\"> <div class=\\\"form-group\\\" ng-show=\\\"parentalSettings.MonthlyLimitEnabled\\\"> <div class=\\\"input-save\\\"> <div ng-class='{\\\"input-box form-has-error form-has-feedback monthly-limit-input-icon\\\": !isSaveButtonVisible(), \\\"input-box monthly-limit-input-icon\\\": isSaveButtonVisible()}'> <input class=\\\"form-control input-field input-number input-box\\\" type=\\\"number\\\" ng-model=\\\"parentalSettings.MonthlySpendLimitInUSD\\\"/> <i ng-bind=\\\"'Label.USDCurrency' | translate\\\"></i> </div> <button id=\\\"save-monthly-limit-btn\\\" class=\\\"btn-control-sm\\\" ng-click=\\\"updateParentalSpendControls()\\\" ng-bind=\\\"'Action.Save' | translate\\\" ng-if=\\\"isSaveButtonVisible()\\\"></button> </div> <div class=\\\"text-error\\\" ng-bind=\\\"'Message.MonthlySpendLimitBelowZeroErrorMessage' | translate\\\" ng-if=\\\"isMonthlyLimitBelowZero()\\\"></div> <div class=\\\"text-error\\\" ng-bind=\\\"'Message.MonthlySpendLimitTooHighError' | translate: {maxMonthlySpendLimit: accountSettingsMetadata.maximumMonthlySpendLimitInUSD}\\\" ng-if=\\\"isMonthlyLimitAboveMax()\\\"></div> </div> </div> </div> <div class=\\\"section\\\" ng-if=\\\"accountContent.userInfo.data.IsParentalSpendControlsEnabled && accountSettingsMetadata.isNotificationSettingVisible\\\" ng-cloak> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.NotificationSettings' | translate\\\"></h3> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"spend-notification-settings-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleNotificationSettingEnabled()\\\" ng-class=\\\"{'on': parentalSettings.NotificationSettingEnabled}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"parentalSettings.NotificationSettingEnabled\\\" ng-bind=\\\"'Description.NotificationSettingEnabled' | translate\\\"></div> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"!parentalSettings.NotificationSettingEnabled\\\" ng-bind=\\\"'Description.NotificationSettingDisabled' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind=\\\"'Description.NotificationSettings' | translate\\\"></div> </div> <div class=\\\"form-group visible-container\\\"> <div class=\\\"rbx-select-group select-group\\\" ng-show=\\\"parentalSettings.NotificationSettingEnabled\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"SpendNotificationSetting\\\" ng-model=\\\"parentalSettings.SpendNotificationSetting\\\" ng-options=\\\"option.value as option.name for option in populateAccount.notificationSettings\\\" ng-change=\\\"updateNotificationFrequency()\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"section\\\" tooltip> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.PrivacySettings' | translate\\\" id=\\\"rbx-privacy-settings-header\\\"></h3> </div> <div class=\\\"section-content remove-panel privacy-section\\\" ng-if=\\\"ageRestrictedSettings.isVerifiedForVoice && accountSettingsPolicy.displayVoiceChatSettings\\\" ng-cloak> <div class=\\\"col-sm-12\\\"> <h4 ng-bind=\\\"'Description.AgeRestrictedFeatures' | translate\\\"></h4> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.VoiceChat' | translate\\\"></label> </div> <button id=\\\"voiceChat-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleVoiceChatEnabledSetting()\\\" ng-class=\\\"{'on': ageRestrictedSettings.isVoiceChatUserOptIn}\\\" ng-disabled=\\\"ageRestrictedSettings.isOptInDisabled && !ageRestrictedSettings.isVoiceChatUserOptIn\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <span class=\\\"small text account-more-info\\\" ng-if=\\\"!(ageRestrictedSettings.isOptInDisabled && !ageRestrictedSettings.isVoiceChatUserOptIn)\\\"> {{ 'Description.HelpText.VoiceChat' | translate }} </span> <span class=\\\"small text account-more-info dimmed-text\\\" ng-if=\\\"ageRestrictedSettings.isOptInDisabled &&\\n            !ageRestrictedSettings.isVoiceChatUserOptIn\\\"> {{ 'Description.HelpText.OptInDisabled' | translate }} </span> </div> </div> <div class=\\\"section-content remove-panel privacy-section\\\" ng-if=\\\"accountSettingsPolicy.displayVisibilitySettings\\\" ng-cloak> <div class=\\\"col-sm-12\\\"> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Visibility' | translate\\\"></label> </div> <button id=\\\"visibility-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleVisibilityPrivacy()\\\" ng-class=\\\"{'on': visibilitySettings.isInvisible}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <span class=\\\"small text account-more-info\\\"> {{ 'Description.HelpText.Visibility' | translate }} </span> </div> </div> <div class=\\\"section-content remove-panel privacy-section\\\"> <div class=\\\"col-sm-12\\\" ng-class=\\\"{'safety-on' : accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled}\\\"> <div ng-show=\\\"!accountContent.userInfo.data.IsParentalControlsTabEnabled && accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\" class=\\\"text-warning contact-settings-locked\\\" ng-bind-html=\\\"'Description.ContactSetting' | translate:{linkStart: '<a class=text-link href=#!/security>', linkEnd: '</a>'}\\\"> </div> <div ng-show=\\\"accountContent.userInfo.data.IsParentalControlsTabEnabled && accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\" class=\\\"text-warning contact-settings-locked\\\" ng-bind-html=\\\"'Description.ContactSettings' | translate:{linkStart: '<a class=text-link href=#!/parental-controls>', linkEnd: '</a>'}\\\"> </div> <h4 ng-bind=\\\"'Heading.ContactSettings' | translate\\\"></h4> <span class=\\\"tooltip-container\\\" ng-show=\\\"accountContent.userInfo.data.IsAppChatSettingEnabled && accountContent.userInfo.data.IsGameChatSettingEnabled\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.ContactSettings' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div ng-if=\\\"accountContent.userInfo.data.IsAppChatSettingEnabled && accountContent.userInfo.data.IsGameChatSettingEnabled\\\"> <div class=\\\"form-group visible-container\\\"> <div class=\\\"rbx-select-group select-group contact-settings-configuration\\\"> <select class=\\\"input-field rbx-select select-option\\\" ng-model=\\\"contactSettings.MasterSetting\\\" ng-options=\\\"option.value as option.name for option in populateAccount.contactSettingsConfiguration\\\" ng-change=\\\"onContactSettingsMasterSettingChange()\\\" ng-disabled=\\\"accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div class=\\\"rbx-divider\\\"></div> </div> <div class=\\\"form-group visible-container\\\" ng-if=\\\"accountSettingsPolicy.displayChatFilteringSetting\\\" ng-cloak> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.ChatFilteringLevel' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.ChatFilteringLevel' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"AppChatFilterSafetyLevel\\\" ng-disabled=\\\"true\\\"> <option value=\\\"\\\" ng-bind=\\\"'Label.DropDown.MaximumFiltering' | translate\\\" ng-if=\\\"!accountContent.userInfo.data.UserAbove13\\\"></option> <option value=\\\"\\\" ng-bind=\\\"'Label.DropDown.13PlusFiltering' | translate\\\" ng-if=\\\"accountContent.userInfo.data.UserAbove13\\\"></option> </select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> <div class=\\\"rbx-divider\\\"></div> </div> <div class=\\\"form-group visible-container\\\" ng-if=\\\"accountSettingsPolicy.displayWhoCanMessageMe\\\" ng-cloak> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanMessageMe' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.WhoCanMessageMe' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"PrivateMessagePrivacy\\\" ng-if=\\\"accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"contactSettings.PrivateMessagePrivacy\\\" ng-options=\\\"option.value as option.name for option in populateAccount.under13Privacy\\\" ng-change=\\\"updatePrivateMessagePrivacy()\\\" ng-disabled=\\\"accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"PrivateMessagePrivacy\\\" ng-if=\\\"!accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"contactSettings.PrivateMessagePrivacy\\\" ng-options=\\\"option.value as option.name for option in populateAccount.messaging\\\" ng-change=\\\"updatePrivateMessagePrivacy()\\\" ng-disabled=\\\"accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div ng-show=\\\"accountContent.userInfo.data.IsAppChatSettingEnabled\\\"> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanChatInApp' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.WhoCanChatInApp' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div ng-if=\\\"accountContent.userInfo.data.IsAppChatSettingEnabled\\\" class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"AppChatPrivacy\\\" ng-model=\\\"contactSettings.AppChatPrivacy\\\" ng-options=\\\"option.value as option.name for option in populateAccount.appChat\\\" ng-change=\\\"updateAppChatPrivacy()\\\" ng-disabled=\\\"accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> <div ng-show=\\\"accountContent.userInfo.data.IsGameChatSettingEnabled\\\"> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanChatInGame' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.WhoCanChatInGame' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div ng-if=\\\"accountContent.userInfo.data.IsGameChatSettingEnabled\\\" class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"GameChatPrivacy\\\" ng-model=\\\"contactSettings.GameChatPrivacy\\\" ng-options=\\\"option.value as option.name for option in populateAccount.gameChat\\\" ng-change=\\\"updateGameChatPrivacy()\\\" ng-disabled=\\\"accountRestrictions.IsEnabled && parentContent.accountRestrictions.isFeatureEnabled\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> </div> </div> <div class=\\\"section-content remove-panel privacy-section settings-privacy-other-container\\\"> <div class=\\\"col-sm-12\\\"> <h4 ng-bind=\\\"'Heading.OtherSettings' | translate\\\"></h4> <div class=\\\"form-group visible-container\\\" ng-if=\\\"accountSettingsPolicy.displayWhoCanInviteMeToVIPServers\\\" ng-cloak> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanInvitePrivateServers' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.WhoCanInvitePrivateServer'| translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"PrivateServerInvitePrivacy\\\" ng-if=\\\"accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"joinSettings.privateServerInvitePrivacy\\\" ng-change=\\\"updatePrivateServerInvitePrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.under13Privacy\\\"></select> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"PrivateServerInvitePrivacy\\\" ng-if=\\\"!accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"joinSettings.privateServerInvitePrivacy\\\" ng-change=\\\"updatePrivateServerInvitePrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.visibility\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanJoinGame' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.WhoCanJoinGame' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"FollowMePrivacy\\\" ng-if=\\\"accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"joinSettings.followMePrivacy\\\" ng-change=\\\"updateFollowMePrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.under13JoinPrivacy\\\"></select> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"FollowMePrivacy\\\" ng-if=\\\"!accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"joinSettings.followMePrivacy\\\" ng-change=\\\"updateFollowMePrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.privacy\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div class=\\\"form-group visible-container\\\" ng-show=\\\"accountContent.userInfo.data.CanHideInventory\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanSeeInventory' | translate\\\"></label> <span class=\\\"tooltip-container\\\" tooltip-placement=\\\"bottom-right\\\" uib-tooltip=\\\"{{ 'Label.ToolTip.WhoCanSeeInventory' | translate }}\\\"> <span class=\\\"icon-moreinfo\\\"></span> </span> <div class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"InventoryPrivacy\\\" ng-model=\\\"inventorySettings.inventoryPrivacy\\\" ng-change=\\\"updateInventoryPrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.visibility\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div class=\\\"form-group visible-container\\\" ng-if=\\\"accountContent.userInfo.data.CanTrade && accountSettingsPolicy.displayWhoCanTradeWithMe\\\" ng-cloak> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.WhoCanTradeWithMe' | translate\\\"></label> <div class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"TradePrivacy\\\" ng-if=\\\"accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"tradeSettings.tradePrivacy\\\" ng-change=\\\"updateTradePrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.under13Privacy\\\"></select> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"TradePrivacy\\\" ng-if=\\\"!accountContent.userInfo.data.UseSuperSafePrivacyMode\\\" ng-model=\\\"tradeSettings.tradePrivacy\\\" ng-change=\\\"updateTradePrivacy()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.privacy\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div class=\\\"form-group visible-container\\\" ng-if=\\\"accountContent.userInfo.data.CanTrade && accountSettingsPolicy.displayTradeQualityFilter\\\" ng-cloak> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.TradeFilter' | translate\\\"></label> <div class=\\\"rbx-select-group select-group\\\" id=\\\"TradeValueRatio\\\" ng-model=\\\"tradeSettings.tradeValue\\\"> <select class=\\\"input-field rbx-select select-option\\\" ng-model=\\\"tradeSettings.tradeValue\\\" ng-change=\\\"updateTradeValue()\\\" ng-options=\\\"option.value as option.name for option in populateAccount.tradeValue\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> </div> </div> </div> <div class=\\\"section\\\" ng-show=\\\"accountContent.userInfo.data.BlockedUsersModel.Total > 0\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.BlockedUsers' | translate\\\"></h3> </div> <div class=\\\"section-content settings-privacy-blocked-users\\\"> <div class=\\\"col-sm-12\\\"> <div class=\\\"form-group blocked-users-amt\\\"> <button id=\\\"blockedUsersToggle\\\" class=\\\"btn-primary-sm acct-settings-btn\\\" ng-click=\\\"toggleBlockedUsers()\\\"> {{ showBlockedUsers ? ('Action.Hide' | translate) : ('Action.Show' | translate) }} </button> <span ng-bind=\\\"'Description.BlockedLimitMessage' | translate:{\\n                      totalBlockedCount: accountContent.userInfo.data.BlockedUsersModel.Total,\\n                      maxBlockedCount: accountContent.userInfo.data.BlockedUsersModel.MaxBlockedUsers\\n                      }\\\"></span> </div> <div class=\\\"form-group blocked-users\\\" ng-show=\\\"showBlockedUsers\\\"> <ul class=\\\"hlist\\\"> <li class=\\\"blocked-users-item list-item\\\" ng-repeat=\\\"user in accountContent.userInfo.data.BlockedUsersModel.BlockedUsers\\\" ng-hide=\\\"user.hidden\\\"> <div ng-if=\\\"accountContent.userInfo.data.IsDisplayNamesEnabled\\\" class=\\\"blocked-user-name text-overflow\\\"> <div>{{user.DisplayName}}</div> <div class=\\\"text-secondary\\\">@{{user.Name}}</div> </div> <div ng-if=\\\"!accountContent.userInfo.data.IsDisplayNamesEnabled\\\" class=\\\"blocked-user-name text-overflow\\\">{{user.Name}}</div> <button class=\\\"btn-control-xs blocked-users-btn\\\" ng-click=\\\"unBlock(user)\\\" ng-bind=\\\"'Action.Unblock' | translate\\\"></button> </li> </ul> </div> </div> </div> </div>\";","module.exports = \"<div> <two-step-verification ng-if=\\\"accountSettingsPolicy.displayTwoStepVerification && accountData.stateProperties.isTwoStepToggleEnabled == 'true'\\\" pin-locked=\\\"pinIsEnabledAndLocked()\\\" unlock-pin=\\\"unlockAccountPinSetting\\\" email=\\\"accountContent.email\\\" email-status=\\\"accountContent.emailStatus\\\" ng-cloak></two-step-verification> <div class=\\\"section\\\" ng-if=\\\"!accountContent.userInfo.data.IsParentalControlsTabEnabled\\\"> <div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.AccountControls' | translate\\\"></h3> </div> <div class=\\\"container-header\\\"> <div class=\\\"text-description text-new-line\\\" ng-bind=\\\"'Description.AccountControls' | translate\\\"></div> </div> </div> <div class=\\\"section\\\" ng-show=\\\"accountSettingsPolicy.displayAccountPIN && accountContent.userInfo.data.IsAccountPinEnabled\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Pin' | translate\\\"></h3> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"accountPin-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleAccountPinEnabledSetting()\\\" ng-class=\\\"{'on': accountPinContent.isEnabled}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"accountPinContent.isEnabled\\\" ng-bind=\\\"'Label.AccountPinEnabled' | translate\\\"></div> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"!accountPinContent.isEnabled\\\" ng-bind=\\\"'Label.AccountPinDisabled' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind-html=\\\"'Description.AccountPin' | translate\\\"></div> </div> </div> <div class=\\\"section\\\" ng-if=\\\"parentContent.accountRestrictions.isFeatureEnabled && accountSettingsPolicy.displayAccountRestrictions\\\" ng-cloak> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Restrictions' | translate\\\"></h3> </div> <div class=\\\"section-content notifications-section\\\"> <button id=\\\"accountRestrictions-toggle\\\" class=\\\"btn-toggle receiver-destination-type-toggle\\\" ng-click=\\\"toggleAccountRestrictionsSetting()\\\" ng-class=\\\"{'on': accountRestrictions.IsEnabled}\\\"> <span class=\\\"toggle-flip\\\"></span> <span id=\\\"toggle-on\\\" class=\\\"toggle-on\\\"></span> <span id=\\\"toggle-off\\\" class=\\\"toggle-off\\\"></span> </button> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"accountRestrictions.IsEnabled\\\" ng-bind=\\\"'Label.AccountRestrictionEnabled' | translate\\\"></div> <div class=\\\"btn-toggle-label\\\" ng-show=\\\"!accountRestrictions.IsEnabled\\\" ng-bind=\\\"'Label.AccountRestrictionDisabled' | translate\\\"></div> <div class=\\\"rbx-divider\\\"></div> <div class=\\\"text-description\\\" ng-bind-html=\\\"'Description.AccountRestrictionsEnabled' | translate:{linkStart:'<a class=text-link href=#!/privacy>', linkEnd:'</a>'}\\\"> </div> </div> </div> </div> <div class=\\\"section\\\" ng-if=\\\"accountSettingsPolicy.displayConnectedAccounts && connectedAccounts.isConnectedAccountsBoxShown\\\" ng-cloak> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.ConnectedAccounts' | translate\\\"></h3> </div> <p class=\\\"text-secondary\\\" ng-if=\\\"!hideConnectedAccountsDescription\\\" ng-bind=\\\"'Description.ConnectedAccounts' | translate\\\"></p> <div class=\\\"section-content connected-accounts-section\\\"> <div ng-repeat=\\\"provider in connectedAccounts.providers\\\" class=\\\"col-sm-12\\\"> <div class=\\\"form-group account-security-settings-container\\\"> <span class=\\\"text-label provider-label\\\">{{provider.provider}}</span> <span>{{provider.identifier}}</span> <a id=\\\"Disconnect\\\" class=\\\"text-link acct-settings-btn\\\" ng-click=\\\"disconnectFromProvider(provider.provider)\\\" ng-bind=\\\"'Action.SocialDisconnect' | translate\\\"></a> </div> </div> </div> </div> <div class=\\\"section\\\" ng-show=\\\"xbox.isDisconnectXboxBoxShown\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.Xbox' | translate\\\"></h3> </div> <div class=\\\"section-content xbox-section\\\"> <div class=\\\"col-sm-12\\\"> <div class=\\\"form-group account-security-settings-container\\\"> <span class=\\\"security-settings-text\\\" ng-bind=\\\"'Label.XboxConnected' | translate\\\"></span> <button id=\\\"XboxDisconnect\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"disconnectFromXbox()\\\" ng-bind=\\\"'Action.SocialDisconnect' | translate\\\"></button> </div> </div> </div> </div> <div class=\\\"section\\\"> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.SecureSignOut' | translate\\\"></h3> </div> <div class=\\\"section-content settings-security-setting-container\\\"> <div class=\\\"col-sm-12\\\"> <div class=\\\"form-group account-security-settings-container\\\"> <span class=\\\"security-settings-text\\\" ng-bind=\\\"'Label.SignOutAllSessions' | translate\\\"></span> <button id=\\\"SignOut\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"signOutFromSessions()\\\" ng-bind=\\\"'Action.SignoutAllSessions' | translate\\\"></button> </div> </div> </div> </div> </div>\";","module.exports = \"<div class=\\\"section\\\" ng-if=\\\"accountSettingsPolicy.displaySocialMedia\\\" ng-cloak> <div class=\\\"container-header\\\"> <h3 ng-bind=\\\"'Heading.SocialNetworks' | translate\\\"></h3> </div> <div class=\\\"section-content remove-panel settings-social-networks-container\\\"> <div class=\\\"col-sm-12\\\"> <div class=\\\"form-group facebook-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Facebook' | translate\\\">Facebook:</label> <input class=\\\"form-control input-field\\\" id=\\\"facebook\\\" placeholder=\\\"{{ 'Example.Facebook' | translate }}\\\" ng-model=\\\"socialNetworks.FacebookUrl\\\"/> </div> <div class=\\\"form-group twitter-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Twitter' | translate\\\"></label> <input class=\\\"form-control input-field\\\" id=\\\"twitter\\\" placeholder=\\\"{{ 'Example.Twitter' | translate }}\\\" ng-model=\\\"socialNetworks.TwitterUrl\\\"/> </div> <div class=\\\"form-group youtube-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.YouTube' | translate\\\"></label> <input class=\\\"form-control input-field\\\" id=\\\"youtube\\\" placeholder=\\\"{{ 'Example.YouTube' | translate }}\\\" ng-model=\\\"socialNetworks.YouTubeUrl\\\"/> </div> <div class=\\\"form-group twitch-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.Twitch' | translate\\\"></label> <input class=\\\"form-control input-field\\\" id=\\\"twitch\\\" placeholder=\\\"{{ 'Example.Twitch' | translate }}\\\" ng-model=\\\"socialNetworks.TwitchUrl\\\"/> </div> <div class=\\\"form-group visible-container\\\"> <label class=\\\"text-label account-settings-label\\\" ng-bind=\\\"'Label.SocialLinksVisibility' | translate\\\"></label> <div id=\\\"visible-to\\\" class=\\\"rbx-select-group select-group\\\"> <select class=\\\"input-field rbx-select select-option\\\" id=\\\"social-network-visibility\\\" ng-model=\\\"socialNetworks.SocialNetworksVisibilityPrivacy\\\" ng-options=\\\"option.value as option.name for option in populateAccount.visibility\\\"></select> <span class=\\\"icon-arrow icon-down-16x16\\\"></span> </div> </div> <div class=\\\"form-group col-sm-12 save-settings-container\\\"> <button id=\\\"save-social-settings\\\" class=\\\"btn-control-sm acct-settings-btn\\\" ng-click=\\\"updateSocialNetworks()\\\" ng-bind=\\\"'Action.Save' | translate\\\"></button> </div> </div> </div> </div>\";","module.exports = \"<div id=\\\"change-display-name-modal\\\" class=\\\"modal-content change-display-name-modal\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"close()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\">{{modalLayout.modalCancel}}</span> </button> <h5>{{modalLayout.modalTitle}}</h5> </div> <form name=\\\"displayNameForm\\\"> <div class=\\\"modal-body\\\"> <div ng-class=\\\"{'form-has-error': isInputFormInvalidated(), 'form-has-feedback': isInputFormInvalidated() }\\\" class=\\\"form-change-display-name\\\"> <input type=\\\"text\\\" focus-me=\\\"true\\\" ng-model=\\\"modalData.currentDisplayName\\\" placeholder=\\\"{{modalData.originalDisplayName}} \\\" maxlength=\\\"{{modalLayout.maxCharactersForDisplayName}}\\\" class=\\\"form-control input-field\\\" autocomplete=\\\"off\\\" ng-change=\\\"validateInputChange()\\\"/> <div class=\\\"font-caption-body change-display-name-feedback-container\\\"> <p ng-class=\\\"{'invisible': isInputFormInvalidated() }\\\" class=\\\"font-caption-body form-control-feedback\\\" ng-bind=\\\"modalLayout.displayErrorMsg\\\"></p> <span class=\\\"count-down\\\">{{modalData.currentDisplayName.length}}/{{modalLayout.maxCharactersForDisplayName}}</span> </div> <p class=\\\"text-description font-caption-body important-description\\\"> {{modalLayout.modalDescriptionWarning}} </p> </div> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn-primary-md btn-min-width\\\" ng-disabled=\\\"isInputFormInvalidated()\\\" ng-click=\\\"saveDisplayName()\\\"> {{modalLayout.modalSave}} </button> <button class=\\\"btn-secondary-md btn-min-width\\\" ng-click=\\\"close()\\\"> {{modalLayout.modalCancel}} </button> </div> </form> </div>\";","module.exports = \"<div class=\\\"enable-authenticator-modal\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4><span ng-bind=\\\"'Heading.Dialog.AuthenticatorSetup' | translate\\\"></span></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"spinner spinner-default\\\" ng-show=\\\"!layout.setupToken && !layout.errorMessage\\\"></div> <div ng-show=\\\"layout.setupToken\\\"> <div class=\\\"img-container modal-image-container\\\" ng-show=\\\"layout.viewQrCode\\\"> <img class=\\\"modal-thumb\\\" src=\\\"{{ layout.qrCodeImage }}\\\"/> <br/> <a class=\\\"text-link xsmall\\\" ng-click=\\\"toggleQrCode()\\\" ng-bind=\\\"'Action.Dialog.AuthenticatorSetupViewManualEntryKey' | translate\\\"></a> </div> <div class=\\\"body-text section-content-off\\\" ng-hide=\\\"layout.viewQrCode\\\" ng-bind=\\\"layout.manualEntryKey\\\"></div> <a class=\\\"text-link xsmall toggle-qr-code\\\" ng-click=\\\"toggleQrCode()\\\" ng-hide=\\\"layout.viewQrCode\\\" ng-bind=\\\"'Action.Dialog.AuthenticatorSetupViewQRCode' | translate\\\"></a> <br/> <div class=\\\"body-text text-description\\\" ng-show=\\\"layout.viewQrCode\\\" ng-bind=\\\"'Description.Dialog.AuthenticatorSetupQRCode' | translate\\\"></div> <div class=\\\"body-text text-description\\\" ng-hide=\\\"layout.viewQrCode\\\" ng-bind=\\\"'Description.Dialog.AuthenticatorSetupManualEntryKey' | translate\\\"></div> <br/> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"enterCodeForm\\\" ng-submit=\\\"submit(enterCodeForm)\\\"> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-input\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.errorMessage}\\\"> <input class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.AuthenticatorSetupCodeInputPlaceholder' | translate: {codeLength: layout.authenticatorCodeLength} }}\\\" ng-model=\\\"layout.code\\\" ng-disabled=\\\"layout.debounce\\\" ng-keyup=\\\"clearErrorMessage()\\\" numbers-only pattern=\\\"[0-9]*\\\" maxlength=\\\"{{ layout.authenticatorCodeLength }}\\\" autofocus/> <p class=\\\"form-control-label\\\" ng-bind=\\\"layout.errorMessage\\\"></p> </div> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.passwordErrorMessage}\\\" ng-if=\\\"layout.passwordRequired\\\"> <input id=\\\"password-text-box\\\" name=\\\"password-textbox\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" ng-model=\\\"layout.password\\\" ng-disabled=\\\"layout.debounce\\\" ng-keyup=\\\"clearPasswordErrorMessage()\\\" autofocus/> <p class=\\\"form-control-label\\\" ng-bind=\\\"layout.passwordErrorMessage\\\"></p> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"enterCodeForm.$invalid || !canVerify()\\\"/> </form> <div class=\\\"xsmall text-link toggle-qr-code\\\"> <a ng-click=\\\"openHelpLink()\\\" ng-bind=\\\"'Action.Dialog.AuthenticatorHelpMessage' | translate\\\"></a> </div> </div> <p ng-if=\\\"!layout.setupToken && layout.errorMessage\\\" class=\\\"body-text text-description\\\" ng-bind=\\\"layout.errorMessage\\\"></p> </div> <div class=\\\"modal-footer\\\" ng-if=\\\"layout.setupToken\\\"> <div class=\\\"spinner spinner-sm spinner-no-margin spinner-block\\\" ng-show=\\\"layout.debounce\\\"></div> <div ng-hide=\\\"layout.debounce\\\"> <button type=\\\"submit\\\" class=\\\"btn-secondary-md\\\" ng-click=\\\"submit(enterCodeForm)\\\" ng-disabled=\\\"enterCodeForm.$invalid || !canVerify()\\\" ng-bind=\\\"'Action.Dialog.Verify' | translate\\\"></button> <button ng-click=\\\"dismiss()\\\" class=\\\"btn-control-md\\\" ng-bind=\\\"'Action.Dialog.Cancel' | translate\\\"></button> </div> </div> </div>\";","module.exports = \"<div class=\\\"update-birhtdate\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4><span ng-bind=\\\"'Response.Dialog.Warning' | translate\\\"></span></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"account-change-birhtdate\\\"> <div ng-bind=\\\"'Response.Dialog.BirthdayChangeDefaultWarning' | translate\\\"></div> <br/> </div> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"changeBirthdateForm\\\" ng-submit=\\\"submit(changeBirthdateForm)\\\"> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-input\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.errorMessage}\\\"> <input id=\\\"password-text-box\\\" name=\\\"password-textbox\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" ng-model=\\\"layout.password\\\" ng-disabled=\\\"layout.debounce\\\" ng-keyup=\\\"clearErrorMessage()\\\" autofocus/> <p class=\\\"form-control-label\\\" ng-bind=\\\"layout.errorMessage\\\"></p> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"changeBirthdateForm.$invalid || !canSubmit()\\\"/> </form> </div> <div class=\\\"modal-footer\\\"> <div class=\\\"update-button-container\\\" toggle-loading is-loading=\\\"layout.debounce\\\"> <button type=\\\"submit\\\" class=\\\"btn-secondary-md\\\" ng-click=\\\"submit(changeBirthdateForm)\\\" ng-disabled=\\\"changeBirthdateForm.$invalid || !canSubmit()\\\" ng-bind=\\\"'Action.Dialog.Yes' | translate\\\"></button> <button ng-click=\\\"dismiss()\\\" class=\\\"btn-control-md\\\" ng-disabled=\\\"layout.debounce\\\" ng-bind=\\\"'Action.Dialog.No' | translate\\\"></button> </div> </div> </div>\";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"> <span class=\\\"icon-close\\\"></span> </span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-bind=\\\"title()\\\"></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"border-warning two-step-warning\\\" ng-show=\\\"!addEmail && !emailSetSuccess && !emailRequired\\\"> <span class=\\\"icon-warning-orange\\\"></span> <span class=\\\"small text-warning form-warning-text\\\" ng-bind=\\\"'Description.Dialog.ChangeEmailWarning' | translate\\\"></span> </div> <div ng-if=\\\"emailRequired\\\" ng-bind=\\\"action\\\"> </div> <form class=\\\"form-horizontal\\\" ng-show=\\\"!emailSetSuccess && !emailRequired\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"updateEmailForm\\\" ng-submit=\\\"submit(updateEmailForm)\\\"> <div class=\\\"form-group\\\"> <input id=\\\"emailAddress\\\" name=\\\"userInfo.emailAddress\\\" type=\\\"email\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{title()}}\\\" autocomplete=\\\"off\\\" ng-pattern=\\\"regexData.email\\\" ng-model=\\\"userInfo.emailAddress\\\" ng-required=\\\"true\\\"/> </div> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-username\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-if=\\\"showPasswordField\\\"> <input id=\\\"password\\\" name=\\\"userInfo.password\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" key-press-enter=\\\"submit(updateEmailForm)\\\" autocomplete=\\\"new-password\\\" ng-model=\\\"userInfo.password\\\" ng-required=\\\"doesPasswordExist\\\"/> <p class=\\\"text-error form-control-label modal-error-message change-email-message\\\"> <span ng-bind=\\\"emailErrorMessage(updateEmailForm)\\\"></span> </p> </div> </form> <div ng-if=\\\"emailSetSuccess\\\" ng-bind=\\\"'Response.Dialog.EmailSentForVerification' | translate\\\"></div> </div> <div class=\\\"modal-buttons\\\"> <button type=\\\"submit\\\" ng-show=\\\"!emailSetSuccess && !emailRequired\\\" id=\\\"purchaseConfirm\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"submit(updateEmailForm)\\\" ng-disabled=\\\"updateEmailForm.$invalid || isProcessing\\\" ng-bind=\\\"submitButtonText()\\\"> </button> <button ng-if=\\\"emailSetSuccess\\\" type=\\\"button\\\" class=\\\"modal-button btn-control-md\\\" ng-click=\\\"$close(true)\\\" ng-bind=\\\"modalConstants.default.submitButtonText\\\" key-press-enter=\\\"$close(true)\\\" focus-me=\\\"true\\\"></button> <button ng-show=\\\"emailRequired\\\" type=\\\"submit\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"toggleEmailRequired(false)\\\" ng-bind=\\\"'Action.Dialog.AddEmail' | translate\\\"></button> </div> </div>\";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-if=\\\"verifiedEmailRequired\\\" ng-bind=\\\"'Heading.Dialog.VerifiedEmailRequired' | translate\\\"></h4> <h4 ng-if=\\\"!verifiedEmailRequired\\\" ng-bind=\\\"'Heading.Dialog.VerifyEmail' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\"> <span ng-if=\\\"verifiedEmailRequired\\\" ng-show=\\\"!verificationEmailError\\\" ng-bind=\\\"contextForVerification\\\"></span> <span ng-if=\\\"!verifiedEmailRequired\\\" ng-show=\\\"!verificationEmailError\\\" ng-bind=\\\"'Description.Dialog.EmailVerificationSent' | translate\\\"></span> <span ng-show=\\\"verificationEmailError\\\" ng-bind=\\\"error\\\"></span> </div> <div class=\\\"modal-buttons\\\"> <button ng-if=\\\"verifiedEmailRequired\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"sendVerificationEmail()\\\" ng-bind=\\\"'Action.Dialog.VerifyEmailPrimary' | translate\\\" key-press-enter=\\\"sendVerificationEmail()\\\" focus-me=\\\"true\\\"></button> <button ng-if=\\\"!verifiedEmailRequired && !verificationEmailError\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"$close(true)\\\" ng-bind=\\\"'Action.Dialog.VerifyEmailOk' | translate\\\" key-press-enter=\\\"$close(true)\\\" focus-me=\\\"true\\\"></button> <button ng-show=\\\"verificationEmailError\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"beginAccountVerifyEmailAddress()\\\" ng-bind=\\\"'Action.Dialog.VerifyEmailRetry' | translate\\\" key-press-enter=\\\"beginAccountVerifyEmailAddress()\\\" focus-me=\\\"true\\\"></button> </div> </div>\";","module.exports = \"<div class=\\\"korea-id-verification-modal\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span><span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 class=\\\"id-verification-header\\\" ng-bind=\\\"'Heading.IDVerification' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"text-emphasis\\\" ng-bind=\\\"'Description.ChooseIdentityOptions' | translate\\\"></div> <div class=\\\"verification-options\\\" ng-repeat=\\\"option in verificationOptions\\\"> <button type=\\\"button\\\" class=\\\"btn-control-md btn-full-width btn-verification-method\\\" ng-click=\\\"verificationHandler(option.value)\\\" ng-bind=\\\"option.label\\\"></button> </div> </div> </div> \";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span><span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-bind=\\\"passwordSetSuccess ? passwordSetSuccessTitle : title\\\"></h4> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form-horizontal\\\" ng-show=\\\"!passwordSetSuccess\\\" role=\\\"form\\\" name=\\\"changePasswordForm\\\" ng-submit=\\\"submit(changePasswordForm)\\\"> <div class=\\\"form-group\\\" ng-show=\\\"facebookDisconnect\\\"> <p ng-bind=\\\"'Description.Dialog.FacebookDisconnectWarning' | translate\\\"></p> </div> <div class=\\\"form-group\\\" ng-show=\\\"doesPasswordExist\\\"> <input id=\\\"old-password-text-box\\\" name=\\\"passwordInfo.currentPassword\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.ChangePasswordCurrent' | translate}}\\\" type=\\\"password\\\" rbx-valid-password ng-model=\\\"passwordInfo.currentPassword\\\" ng-trim=\\\"false\\\" ng-required=\\\"changePassword && doesPasswordExist ? true : false\\\"/> </div> <div class=\\\"form-group\\\"> <input id=\\\"new-password-text-box\\\" name=\\\"passwordInfo.newPassword\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.ChangePasswordNew' | translate}}\\\" type=\\\"password\\\" rbx-valid-password ng-model=\\\"passwordInfo.newPassword\\\" ng-trim=\\\"false\\\" ng-required=\\\"true\\\"/> </div> <div class=\\\"form-group\\\"> <input id=\\\"confirm-password-text-box\\\" name=\\\"passwordInfo.confirmPassword\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.ChangePasswordConfirm' | translate}}\\\" type=\\\"password\\\" key-press-enter=\\\"submit(changePasswordForm)\\\" rbx-valid-password-confirm match-field=\\\"passwordInfo.newPassword\\\" ng-model=\\\"passwordInfo.confirmPassword\\\" ng-trim=\\\"false\\\" ng-required=\\\"true\\\"/> <p class=\\\"text-error form-control-label modal-error-message\\\"> <span ng-bind=\\\"passwordErrorMessage(changePasswordForm)\\\"></span> </p> </div> </form> <div ng-if=\\\"passwordSetSuccess\\\" ng-bind=\\\"'Description.Dialog.ChangePasswordConfirmation' | translate\\\"></div> </div> <div class=\\\"modal-buttons\\\"> <button type=\\\"submit\\\" ng-show=\\\"!passwordSetSuccess\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"submit(changePasswordForm)\\\" ng-disabled=\\\"changePasswordForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.ChangePassword' | translate\\\"> </button> <button ng-if=\\\"passwordSetSuccess\\\" class=\\\"modal-button btn-control-md\\\" ng-click=\\\"$close(true)\\\" ng-bind=\\\"'Action.SuccessDialogButtonText' | translate\\\" key-press-enter=\\\"$close(true)\\\" focus-me=\\\"true\\\"></button> </div> </div>\";","module.exports = \"<div ng-show=\\\"layout.showDeleteModal\\\" class=\\\"update-phone\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-bind=\\\"'Heading.Dialog.RemovePhone' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"account-delete-phone-info\\\" ng-bind=\\\"'Description.Dialog.RemovePhoneWarning' | translate:{phoneLast4:phoneModalData.lastDigits}\\\"> </div> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"deletePhoneForm\\\"> <input type=\\\"text\\\" class=\\\"hidden\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\"> <div class=\\\"form-group\\\"> <input id=\\\"password-delete-text-box\\\" name=\\\"password-textbox\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" autocomplete=\\\"new-password\\\" key-press-enter=\\\"deletePhone()\\\" ng-model=\\\"phoneInfo.password\\\" ng-keypress=\\\"clearDeletePhoneError()\\\" required/> <p class=\\\"text-error form-control-label modal-error-message\\\"> <span ng-bind=\\\"layout.deletePhoneError\\\"> </span> </p> </div> </form> </div> <div class=\\\"modal-footer\\\"> <div class=\\\"delete-button-container\\\" toggle-loading is-loading=\\\"layout.isDeletePhoneBusy\\\"> <button type=\\\"submit\\\" class=\\\"btn-alert-md\\\" ng-click=\\\"deletePhone()\\\" key-press-enter=\\\"deletePhone()\\\" ng-disabled=\\\"deletePhoneForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.RemovePhonePrimary' | translate\\\"> </button> <button ng-click=\\\"$dismiss()\\\" class=\\\"btn-control-md\\\" ng-bind=\\\"'Action.Dialog.RemovePhoneSecondary' | translate\\\"> </button> </div> </div> </div>\";","module.exports = \"<div> <div ng-include=\\\"'modal-phone-update'\\\"></div> <div ng-include=\\\"'modal-phone-delete'\\\"></div> <div ng-include=\\\"'modal-phone-verify'\\\"></div> </div>\";","module.exports = \"<div ng-show=\\\"layout.showEditModal\\\" class=\\\"update-phone\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4><span ng-bind=\\\"phoneModalData.action\\\"></span></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"account-change-phone-info\\\" ng-bind=\\\"'Description.Dialog.AddPhone' | translate\\\"></div> <div ng-if=\\\"phoneModalData.isAttemptToChangePhone\\\" class=\\\"current-phone\\\"> <span ng-bind=\\\"'Label.Dialog.EditPhoneCurrentNumber' | translate\\\"></span> <span ng-bind=\\\"phoneModalData.maskedNumber\\\"></span> </div> <div class=\\\"border-warning two-step-warning\\\" ng-show=\\\"phoneModalData.isAttemptToChangePhone\\\"> <span class=\\\"icon-warning-orange\\\"></span> <span class=\\\"small text-warning form-warning-text\\\" ng-bind=\\\"'Description.Dialog.EditPhoneWarning' | translate\\\"></span> </div> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"updatePhoneForm\\\"> <div class=\\\"form-group\\\"> <div id=\\\"country-list\\\" class=\\\"rbx-select-group phone-prefix-list\\\"> <select class=\\\"input-field rbx-select\\\" ng-model=\\\"phoneInfo.phonePrefix\\\" ng-options=\\\"p|phonePrefix for p in accountInfoSettings.phonePrefixes\\\"></select> </div> <p id=\\\"prefix-list-error\\\" class=\\\"text-error form-control-label modal-error-message phone-error-message\\\"> <span ng-bind=\\\"layout.countryError\\\"> </span> </p> </div> <div class=\\\"input-group form-group phone-number-group\\\"> <div class=\\\"clearfix phone-input-row\\\"> <div class=\\\"form-control input-field phone-prefix\\\" ng-bind=\\\"getPhonePrefix()\\\"> </div> <div class=\\\"icon-close-gray-16x16 clear-phone\\\" ng-show=\\\"phoneModalData.isAttemptToChangePhone\\\" ng-click=\\\"clearPhone()\\\"></div> <input id=\\\"phone-text-box\\\" class=\\\"form-control input-field last-input phone-input\\\" name=\\\"phoneTextbox\\\" type=\\\"tel\\\" placeholder=\\\"{{'Label.Dialog.AddPhoneField' | translate}}\\\" autocomplete=\\\"off\\\" phone-number-format country-code=\\\"phoneInfo.phonePrefix.code\\\" maxlength=\\\"20\\\" ng-keypress=\\\"clearUpdatePhoneError()\\\" ng-model=\\\"phoneInfo.phone\\\" required> </div> <p id=\\\"invalid-phone-error\\\" class=\\\"text-error form-control-label modal-error-message phone-error-message\\\"> <span ng-show=\\\"phoneInfo.phone && !updatePhoneForm.phoneTextbox.$valid\\\" ng-bind=\\\"'Response.Dialog.InvalidPhoneNumber' | translate\\\"></span> </p> </div> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-input\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-show=\\\"doesPasswordExist\\\"> <input id=\\\"password-text-box\\\" name=\\\"password-textbox\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" autocomplete=\\\"new-password\\\" key-press-enter=\\\"updatePhone()\\\" ng-model=\\\"phoneInfo.password\\\" ng-keypress=\\\"clearUpdatePhoneError()\\\" ng-required=\\\"doesPasswordExist\\\"/> <p class=\\\"text-error form-control-label modal-error-message\\\"> <span ng-bind=\\\"layout.updatePhoneError\\\" id=\\\"phone-update-error\\\"> </span> </p> </div> </form> <div class=\\\"text-error\\\" ng-bind=\\\"layout.error\\\"></div> </div> <div class=\\\"modal-footer\\\"> <div class=\\\"update-button-container\\\" toggle-loading is-loading=\\\"layout.isUpdatePhoneBusy\\\"> <button type=\\\"submit\\\" class=\\\"btn-secondary-md\\\" ng-click=\\\"updatePhone()\\\" key-press-enter=\\\"updatePhone()\\\" ng-disabled=\\\"updatePhoneForm.$invalid\\\"> <span ng-bind=\\\"phoneModalData.action\\\"></span> </button> <div> <span ng-show=\\\"phoneModalData.isAttemptToChangePhone\\\" class=\\\"text-report remove-phone\\\" ng-click=\\\"initiateDeletePhone()\\\" ng-bind=\\\"'Action.Dialog.EditPhoneSecondary' | translate\\\"></span> </div> </div> </div> </div>\";","module.exports = \"<div ng-show=\\\"layout.showVerifyModal\\\" class=\\\"update-phone\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-bind=\\\"'Heading.Dialog.VerifyPhone' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"sms-img\\\"></div> <div ng-bind=\\\"'Label.Dialog.VerifyPhoneCodeLabel' | translate\\\"></div> <form class=\\\"form-horizontal\\\"> <input class=\\\"hidden\\\" type=\\\"text\\\" name=\\\"fakeusernameremembered\\\"> <div class=\\\"form-group verification-code-input\\\"> <input class=\\\"form-control input-field\\\" autocomplete=\\\"false\\\" name=\\\"verification-code\\\" placeholder=\\\"Enter Code ({{phoneModalData.codeLength}}-digit)\\\" key-press-enter=\\\"submitCode()\\\" minLength=\\\"{{phoneModalData.codeLength}}\\\" maxLength=\\\"{{phoneModalData.codeLength}}\\\" numbers-only ng-trim=\\\"false\\\" ng-disabled=\\\"layout.isVerifyPhoneBusy\\\" ng-model=\\\"phoneInfo.code\\\" ng-keypress=\\\"clearCodeError()\\\" focus-me=\\\"{{layout.focusOnCodeInput}}\\\" required> <p class=\\\"text-error form-control-label modal-error-message\\\"> <span ng-bind=\\\"layout.codeError\\\"> </span> </p> </div> </form> </div> <div class=\\\"modal-footer\\\"> <div toggle-loading is-loading=\\\"layout.isVerifyPhoneBusy\\\"> <button type=\\\"submit\\\" class=\\\"btn-secondary-md\\\" ng-click=\\\"submitCode()\\\" ng-disabled=\\\"updatePhoneForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.VerifyPhonePrimary' | translate\\\"> </button> <button ng-click=\\\"$dismiss()\\\" class=\\\"btn-control-md\\\" ng-bind=\\\"'Action.Dialog.VerifyPhoneSecondary' | translate\\\"> </button> <div> <span ng-click=\\\"resendCode()\\\" class=\\\"text-link resend-code\\\" ng-bind=\\\"'Action.Dialog.VerifyPhoneResendLink' | translate\\\"> </span> </div> </div> </div> </div>\";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span><span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-show=\\\"pinCreateSuccess\\\" ng-bind=\\\"'Heading.Dialog.PinCreateSuccessConfirmation' | translate\\\"></h4> <h4 ng-show=\\\"!pinCreateSuccess\\\" ng-bind=\\\"'Heading.Dialog.PinCreate' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\" id=\\\"modal-body\\\"> <form role=\\\"form\\\" ng-show=\\\"!pinCreateSuccess\\\" name=\\\"pinCreateForm\\\" ng-submit=\\\"submit(pinCreateForm)\\\"> <div class=\\\"text-label pin-fields-email\\\"> <span ng-bind=\\\"'Label.Dialog.VerifiedEmail' | translate\\\"></span> <span ng-bind=\\\"userEmail\\\"></span> </div> <div class=\\\"pin-fields\\\"> <div class=\\\"pin-fields-label\\\"> <span ng-bind=\\\"'Label.Dialog.CreatePin' | translate: {digitCount: accountPinLength}\\\"></span> </div> <input type=\\\"tel\\\" class=\\\"form-control input-field pin-field\\\" name=\\\"newPin\\\" autocomplete=\\\"off\\\" ng-trim=\\\"false\\\" ng-model=\\\"pinInfo.newPin\\\" minLength=\\\"{{accountPinLength}}\\\" maxLength=\\\"{{accountPinLength}}\\\" ng-minlength=\\\"{{accountPinLength}}\\\" ng-maxlength=\\\"{{accountPinLength}}\\\" ng-required=\\\"true\\\" numbers-only autofocus/> <div class=\\\"pin-fields-label\\\" ng-bind=\\\"'Label.Dialog.ConfirmPin' | translate\\\"></div> <input type=\\\"tel\\\" class=\\\"form-control input-field pin-field\\\" name=\\\"newPinConfirm\\\" autocomplete=\\\"off\\\" ng-trim=\\\"false\\\" ng-model=\\\"pinInfo.newPinConfirm\\\" minLength=\\\"{{accountPinLength}}\\\" maxLength=\\\"{{accountPinLength}}\\\" ng-minlength=\\\"{{accountPinLength}}\\\" ng-maxlength=\\\"{{accountPinLength}}\\\" ng-required=\\\"true\\\" key-press-enter=\\\"submit(pinCreateForm)\\\" numbers-only match-field=\\\"pinInfo.newPin\\\"/> </div> <div class=\\\"pin-fields-error text-center text-error\\\"> <span ng-bind=\\\"pinErrorMessage(pinCreateForm)\\\"></span> <span ng-if=\\\"!pinErrorMessage(pinCreateForm)\\\"> </span> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"pinCreateForm.$invalid\\\"/> </form> <div ng-if=\\\"pinCreateSuccess\\\" ng-bind=\\\"'Response.Dialog.PinCreateConfirmation' | translate\\\"></div> </div> <div class=\\\"modal-buttons\\\"> <button type=\\\"submit\\\" class=\\\"modal-button btn-secondary-md\\\" ng-show=\\\"!pinCreateSuccess\\\" ng-click=\\\"submit(pinCreateForm)\\\" ng-disabled=\\\"pinCreateForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.PinCreate' | translate\\\"> </button> <button ng-if=\\\"pinCreateSuccess\\\" class=\\\"modal-button btn-control-md\\\" ng-click=\\\"$close(true)\\\" ng-bind=\\\"'Action.Dialog.PinCreateOk' | translate\\\"></button> </div> </div>\";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span><span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-bind=\\\"'Heading.Dialog.PinUnlock' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\" id=\\\"modal-body\\\"> <form role=\\\"form\\\" ng-show=\\\"!pinCreateSuccess\\\" name=\\\"pinUnlockForm\\\" ng-submit=\\\"submit(pinUnlockForm)\\\"> <div class=\\\"pin-fields\\\"> <div class=\\\"pin-fields-label\\\" ng-bind=\\\"'Description.Dialog.PinUnlock' | translate\\\"></div> <input type=\\\"tel\\\" class=\\\"form-control pin-field\\\" name=\\\"pin\\\" autocomplete=\\\"off\\\" ng-trim=\\\"false\\\" ng-model=\\\"pinInfo.pin\\\" minLength=\\\"{{accountPinLength}}\\\" maxLength=\\\"{{accountPinLength}}\\\" ng-minlength=\\\"{{accountPinLength}}\\\" ng-maxlength=\\\"{{accountPinLength}}\\\" ng-required=\\\"true\\\" key-press-enter=\\\"submit(pinUnlockForm)\\\" numbers-only autofocus/> </div> <div class=\\\"pin-fields-error text-center text-error\\\"> <span ng-bind=\\\"pinErrorMessage(pinUnlockForm)\\\"></span> <span ng-if=\\\"!pinErrorMessage(pinUnlockForm)\\\"> </span> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"pinUnlockForm.$invalid\\\"/> </form> </div> <div class=\\\"modal-buttons\\\"> <button type=\\\"submit\\\" class=\\\"modal-button btn-secondary-md\\\" ng-show=\\\"!pinCreateSuccess\\\" ng-click=\\\"submit(pinUnlockForm)\\\" ng-disabled=\\\"pinUnlockForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.PinUnlock' | translate\\\"> </button> </div> </div>\";","module.exports = \"<div class=\\\"recovery-codes-modal\\\"> <div class=\\\"modal-header\\\"> <div class=\\\"modal-header-close-button\\\" ng-if=\\\"!layout.recoveryCodes\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> </div> <h4> <span ng-hide=\\\"layout.recoveryCodes\\\" ng-bind=\\\"'Heading.GenerateNewRecoveryCodes' | translate\\\"></span> <span ng-show=\\\"layout.recoveryCodes\\\" ng-bind=\\\"'Heading.RecoveryCodesGenerated' | translate\\\"></span> </h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"spinner spinner-default\\\" ng-show=\\\"layout.loading\\\"></div> <div ng-show=\\\"!layout.recoveryCodes && !layout.loading && !layout.loadErrorMessage\\\"> <div class=\\\"body-text text-description\\\" ng-bind=\\\"'Description.Dialog.GenerateNewRecoveryCodes' | translate\\\" ng-if=\\\"layout.passwordRequired\\\"></div> <div class=\\\"body-text text-description\\\" ng-if=\\\"layout.activeRecoveryCodeCount > 0 && !layout.passwordRequired\\\" ng-bind=\\\"'Label.Dialog.GenerateNewRecoveryCodesClearNotice' | translate: { activeCodeCount: layout.activeRecoveryCodeCount }\\\"></div> <br ng-if=\\\"layout.passwordRequired || layout.activeRecoveryCodeCount > 0\\\"/> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"enterPasswordForm\\\" ng-submit=\\\"submit(enterPasswordForm)\\\"> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-input\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.errorMessage}\\\" ng-if=\\\"layout.passwordRequired\\\"> <input class=\\\"form-control input-field\\\" type=\\\"password\\\" placeholder=\\\"{{ 'Label.Dialog.VerifyPassword' | translate }}\\\" ng-model=\\\"layout.password\\\" ng-disabled=\\\"layout.debounce\\\" ng-keyup=\\\"clearErrorMessage()\\\" autofocus/> <p class=\\\"form-control-label\\\" ng-bind=\\\"layout.errorMessage\\\"></p> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"enterPasswordForm.$invalid || !canContinue()\\\"/> </form> </div> <div ng-if=\\\"layout.recoveryCodes\\\"> <div class=\\\"body-text text-description\\\" ng-bind=\\\"'Description.Dialog.RecoveryCodesGenerated' | translate\\\"></div> <br/> <div class=\\\"section-content-off recovery-codes-container\\\"> <pre class=\\\"recovery-codes-list text-secondary\\\" ng-bind=\\\"formatRecoveryCodes(layout.recoveryCodesLeft)\\\"></pre> <pre class=\\\"recovery-codes-list text-secondary\\\" ng-bind=\\\"formatRecoveryCodes(layout.recoveryCodesRight)\\\"></pre> </div> <br/> <div class=\\\"checkbox\\\"> <input id=\\\"confirm-recovery-codes-checkbox\\\" type=\\\"checkbox\\\" ng-model=\\\"layout.confirmSavedCodes\\\"/> <label for=\\\"confirm-recovery-codes-checkbox\\\" ng-bind=\\\"'Label.Dialog.RecoveryCodesSavedConfirmation' | translate\\\"></label> </div> </div> <p ng-if=\\\"layout.loadErrorMessage\\\" class=\\\"body-text text-description\\\" ng-bind=\\\"layout.loadErrorMessage\\\"></p> </div> <div class=\\\"modal-footer\\\" ng-if=\\\"!layout.recoveryCodes\\\" ng-hide=\\\"layout.loading || layout.loadErrorMessage\\\"> <div class=\\\"spinner spinner-sm spinner-no-margin spinner-block\\\" ng-show=\\\"layout.debounce\\\"></div> <button type=\\\"submit\\\" class=\\\"btn-cta-md btn-full-width\\\" ng-click=\\\"submit(enterPasswordForm)\\\" ng-hide=\\\"layout.debounce\\\" ng-disabled=\\\"enterPasswordForm.$invalid || !canContinue()\\\" ng-bind=\\\"'Action.Dialog.Continue' | translate\\\"></button> <span class=\\\"text-footer\\\" ng-if=\\\"layout.activeRecoveryCodeCount > 0 && layout.passwordRequired\\\" ng-bind=\\\"'Label.Dialog.GenerateNewRecoveryCodesClearNotice' | translate: { activeCodeCount: layout.activeRecoveryCodeCount } \\\"></span> </div> <div class=\\\"modal-footer\\\" ng-if=\\\"layout.recoveryCodes\\\"> <button type=\\\"submit\\\" class=\\\"btn-secondary-md btn-full-width\\\" ng-click=\\\"close()\\\" ng-disabled=\\\"!layout.confirmSavedCodes\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></button> </div> </div>\";","module.exports = \"<div id=\\\"verification-input\\\"> <div class=\\\"modal-header\\\"> <div class=\\\"modal-title\\\"> <h4 ng-bind=\\\"'Label.TwoStepVerification' | translate\\\"></h4> </div> </div> <div class=\\\"modal-body\\\"> <p class=\\\"body-text text-description\\\" ng-bind=\\\"'Label.EnterEmailCode' | translate\\\"></p> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.invalidCodeError}\\\"> <input class=\\\"input-field text-center\\\" autocomplete=\\\"false\\\" name=\\\"verification-code\\\" placeholder=\\\"{{ layout.codeInputPlaceholder }}\\\" maxlength=\\\"{{ layout.codeLength }}\\\" numbers-only ng-trim=\\\"false\\\" ng-model=\\\"properties.code\\\"/> <p class=\\\"text-error\\\" ng-show=\\\"layout.invalidCodeError\\\" ng-bind=\\\"layout.invalidCodeErrorMessage\\\"></p> </div> <div class=\\\"code-message-action text-center\\\"> <div class=\\\"text-block\\\" ng-if=\\\"layout.codeSent\\\"> <span class=\\\"xsmall text-name\\\" ng-bind=\\\"'Response.CodeSent' | translate\\\"></span> </div> <br ng-if=\\\"layout.codeSent\\\"/> <div class=\\\"text-block\\\"> <a class=\\\"text-name small\\\" ng-click=\\\"resendCode()\\\" ng-bind=\\\"'Action.Resend' | translate\\\"></a> </div> </div> <div class=\\\"modal-buttons\\\" is-inline=\\\"true\\\"> <button type=\\\"button\\\" ng-show=\\\"!layout.isPendingVerification\\\" ng-disabled=\\\"properties.code.length != layout.codeLength\\\" class=\\\"btn-primary-md\\\" ng-click=\\\"verifyChallengeCode()\\\" ng-bind=\\\"'Action.Verify' | translate\\\"> </button> <div class=\\\"loading spinner spinner-default\\\" ng-show=\\\"layout.isPendingVerification\\\"></div> </div> </div> <div class=\\\"modal-footer-note\\\"> <span class=\\\"text-footer\\\" ng-bind-html=\\\"layout.supportPageLinkPhrase\\\"></span> </div> </div>\";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"> <span class=\\\"icon-close\\\"></span> </span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 class=\\\"text-center\\\" ng-bind=\\\"getTitle()\\\"></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"text-center text-description text-new-line\\\" ng-bind=\\\"'Description.UnlinkLogOutWarning' | translate\\\"> </div> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"socialDisconnectForm\\\" ng-submit=\\\"submit(socialDisconnectForm)\\\"> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-error form-has-feedback': hasPasswordError()}\\\"> <input id=\\\"password\\\" name=\\\"data.password\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Placeholder.Password' | translate}}\\\" type=\\\"password\\\" autocomplete=\\\"off\\\" key-press-enter=\\\"submit(socialDisconnectForm)\\\" ng-model=\\\"data.password\\\" ng-change=\\\"clearPasswordError()\\\" ng-required=\\\"true\\\"/> <p class=\\\"text-error form-control-label modal-error-message\\\"> <span ng-bind=\\\"getPasswordErrorMessage(socialDisconnectForm)\\\"></span> </p> </div> </form> </div> <div class=\\\"modal-buttons\\\"> <button type=\\\"button\\\" class=\\\"modal-button btn-control-md\\\" ng-click=\\\"dismiss()\\\" ng-disabled=\\\"socialDisconnectForm.$invalid || layout.isProcessing\\\" ng-bind=\\\"'Action.Cancel' | translate\\\"></button> <button type=\\\"submit\\\" class=\\\"modal-button btn-secondary-md\\\" ng-click=\\\"submit(socialDisconnectForm)\\\" ng-disabled=\\\"socialDisconnectForm.$invalid || layout.isProcessing\\\" ng-bind=\\\"'Action.Unlink' | translate\\\"></button> </div> </div>\";","module.exports = \"<div class=\\\"update-two-step\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4><span ng-bind=\\\"'Response.Dialog.Warning' | translate\\\"></span></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"account-change-two-step-info\\\"> <div ng-bind=\\\"layout.disableTwoStepWarningMessage | translate\\\"></div> <br/> </div> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"disableTwoStepForm\\\" ng-submit=\\\"submit(disableTwoStepForm)\\\"> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-input\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.errorMessage}\\\"> <input id=\\\"password-text-box\\\" name=\\\"password-textbox\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" ng-model=\\\"layout.password\\\" ng-disabled=\\\"layout.debounce\\\" ng-keyup=\\\"clearErrorMessage()\\\" autofocus/> <p class=\\\"form-control-label\\\" ng-bind=\\\"layout.errorMessage\\\"></p> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"disableTwoStepForm.$invalid || !canSubmit()\\\"/> </form> </div> <div class=\\\"modal-footer\\\"> <div class=\\\"update-button-container\\\" toggle-loading is-loading=\\\"layout.debounce\\\"> <button type=\\\"submit\\\" class=\\\"btn-secondary-md\\\" ng-click=\\\"submit(disableTwoStepForm)\\\" ng-disabled=\\\"disableTwoStepForm.$invalid || !canSubmit()\\\" ng-bind=\\\"'Action.Dialog.Yes' | translate\\\"></button> <button ng-click=\\\"dismiss()\\\" class=\\\"btn-control-md\\\" ng-disabled=\\\"layout.debounce\\\" ng-bind=\\\"'Action.Dialog.No' | translate\\\"></button> </div> </div> </div>\";","module.exports = \"<div class=\\\"update-two-step\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4><span ng-bind=\\\"'Response.Dialog.EnableTwoStepVerification' | translate\\\"></span></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"account-change-two-step-info\\\"> <div ng-bind=\\\"'Response.Dialog.EnableTwoStepVerificationMessage' | translate\\\"></div> <br/> </div> <form class=\\\"form-horizontal\\\" autocomplete=\\\"off\\\" role=\\\"form\\\" name=\\\"enableTwoStepForm\\\" ng-submit=\\\"submit(enableTwoStepForm)\\\"> <input type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"fake-input\\\"> <input type=\\\"password\\\" class=\\\"hidden\\\" name=\\\"fake-password\\\" autocomplete=\\\"new-password\\\"> <div class=\\\"form-group\\\" ng-class=\\\"{'form-has-feedback form-has-error': layout.errorMessage}\\\"> <input id=\\\"password-text-box\\\" name=\\\"password-textbox\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.VerifyPassword' | translate}}\\\" type=\\\"password\\\" ng-model=\\\"layout.password\\\" ng-disabled=\\\"layout.debounce\\\" ng-keyup=\\\"clearErrorMessage()\\\" autofocus/> <p class=\\\"form-control-label\\\" ng-bind=\\\"layout.errorMessage\\\"></p> </div> <input type=\\\"submit\\\" class=\\\"hidden\\\" ng-disabled=\\\"enableTwoStepForm.$invalid || !canSubmit()\\\"/> </form> </div> <div class=\\\"modal-footer\\\"> <div class=\\\"spinner spinner-sm spinner-no-margin spinner-block\\\" ng-show=\\\"layout.debounce\\\"></div> <button type=\\\"submit\\\" class=\\\"btn-cta-md btn-full-width\\\" ng-click=\\\"submit(enableTwoStepForm)\\\" ng-hide=\\\"layout.debounce\\\" ng-disabled=\\\"enableTwoStepForm.$invalid || !canSubmit()\\\" ng-bind=\\\"'Action.Dialog.Continue' | translate\\\"></button> </div> </div> \";","module.exports = \"<div> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"dismiss()\\\"> <span aria-hidden=\\\"true\\\"><span class=\\\"icon-close\\\"></span></span> <span class=\\\"sr-only\\\" ng-bind=\\\"'Action.Dialog.Close' | translate\\\"></span> </button> <h4 ng-if=\\\"usernameUpdateSuccess\\\" ng-bind=\\\"'Heading.Dialog.DefaultSuccess' | translate\\\"></h4> <h4 ng-if=\\\"!usernameUpdateSuccess\\\" ng-bind=\\\"'Description.Dialog.ChangeUsernameTitle' | translate\\\"></h4> </div> <div class=\\\"modal-body\\\"> <div class=\\\"change-username-price\\\" ng-show=\\\"!usernameUpdateSuccess\\\" ng-bind-html=\\\"getChangePriceText()\\\"> </div> <div class=\\\"small\\\" ng-show=\\\"!usernameUpdateSuccess\\\"> </div> <form class=\\\"form-horizontal\\\" ng-show=\\\"!usernameUpdateSuccess\\\" role=\\\"form\\\" name=\\\"changeUsernameForm\\\" ng-submit=\\\"submit(changeUsernameForm)\\\"> <div class=\\\"form-group\\\"> <input id=\\\"desired-username-text-box\\\" name=\\\"username\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.ChangeUsernameField' | translate}}\\\" autocomplete=\\\"off\\\" ng-model=\\\"user.username\\\" ng-blur=\\\"onChange()\\\" ng-keyup=\\\"onChange()\\\" ng-change=\\\"onChange()\\\" account-valid-username required/> <p class=\\\"text-error form-control-label modal-error-message\\\"> <span ng-show=\\\"changeUsernameForm.username.$dirty && !changeUsernameForm.username.$valid\\\" ng-bind=\\\"changeUsernameForm.username.$usernameMessage\\\"></span> </p> </div> <div class=\\\"form-group\\\"> <input id=\\\"account-password-text-box\\\" name=\\\"password\\\" class=\\\"form-control input-field\\\" placeholder=\\\"{{'Label.Dialog.ChangeUsernameAccountPassword' | translate}}\\\" type=\\\"password\\\" autocomplete=\\\"off\\\" key-press-enter=\\\"submit(changeUsernameForm)\\\" ng-model=\\\"user.password\\\" required/> <p class=\\\"text-error form-control-label modal-error-message\\\" id=\\\"generic-error-message\\\"> <span ng-bind=\\\"usernameErrorMessage(changeUsernameForm)\\\"></span> </p> </div> </form> <div ng-if=\\\"usernameUpdateSuccess\\\" ng-bind=\\\"result.message ? result.message : ('Response.Dialog.ChangeUsernameSuccess' | translate)\\\"> </div> <div ng-show=\\\"!usernameUpdateSuccess\\\" ng-bind=\\\"'Description.Dialog.ChangeUsernameDisclaimer' | translate\\\"></div> </div> <div class=\\\"modal-buttons\\\"> <div ng-if=\\\"!usernameUpdateSuccess\\\"> <button type=\\\"submit\\\" class=\\\"modal-button btn-primary-md\\\" ng-if=\\\"!isFreeUsernameChangeAllowed\\\" ng-click=\\\"submit(changeUsernameForm)\\\" ng-disabled=\\\"changeUsernameForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.ChangeUsernameBuy' | translate\\\"> </button> <button type=\\\"submit\\\" class=\\\"modal-button btn-secondary-md\\\" ng-if=\\\"isFreeUsernameChangeAllowed\\\" ng-click=\\\"submit(changeUsernameForm)\\\" ng-disabled=\\\"changeUsernameForm.$invalid\\\" ng-bind=\\\"'Action.Dialog.Update' | translate\\\"></button> </div> <div class=\\\"text-center\\\" ng-if=\\\"usernameUpdateSuccess\\\"> <button type=\\\"submit\\\" class=\\\"modal-button btn-control-md\\\" ng-click=\\\"$close(true)\\\" ng-bind=\\\"'Action.SuccessDialogButtonText' | translate\\\" key-press-enter=\\\"$close(true)\\\" focus-me=\\\"true\\\"></button> </div> </div> </div>\";","module.exports = \"<div ng-show=\\\"accountPinContent.isEnabled && accountContent.userInfo.data.IsAccountPinEnabled\\\"> <div class=\\\"pin-toggle-button\\\"> <span ng-click=\\\"toggleAccountPinLockSetting()\\\"> <span class=\\\"tooltip-container\\\" data-toggle=\\\"tooltip\\\" ng-show=\\\"!accountPinContent.isUnlocked\\\" title=\\\"{{'Label.ToolTip.PinLocked' | translate}}\\\"> <button type=\\\"button\\\" class=\\\"btn-generic-locked-sm\\\"> <span class=\\\"icon-locked\\\"></span> </button> </span> <span class=\\\"tooltip-container\\\" data-toggle=\\\"tooltip\\\" title=\\\"{{'Label.ToolTip.PinUnlocked' | translate}}\\\" ng-show=\\\"accountPinContent.isUnlocked\\\"> <button type=\\\"button\\\" class=\\\"btn-generic-unlocked-sm\\\"> <span class=\\\"icon-unlocked\\\"></span> </button> </span> </span> </div> <div class=\\\"text-warning small pin-time-remaining\\\" ng-show=\\\"accountPinContent.isUnlocked\\\"> <div class=\\\"text-warning small\\\" ng-bind=\\\"'Label.PinTimeRemaining' | translate\\\"></div> <span class=\\\"font-bold\\\"> <span ng-bind=\\\"accountPinContent.timeRemainingMin\\\"></span> <span ng-bind=\\\"'Label.PinTimeMins' | translate\\\"></span> <span ng-bind=\\\"accountPinContent.timeRemainingSec\\\"></span> <span ng-bind=\\\"'Label.PinTimeSecs' | translate\\\"></span> </span> </div> </div>\";","module.exports = \"<div ng-controller=\\\"accountsController\\\"> <system-feedback></system-feedback> <div class=\\\"section\\\" ng-hide=\\\"accountData.stateProperties.isMyAccountSectionHeaderHidden\\\"> <div class=\\\"container-header\\\"> <h1 class=\\\"user-account-header\\\" ng-bind=\\\"'Heading.PageTitle' | translate\\\"></h1> </div> <div class=\\\"container-header\\\"> <div class=\\\"tab-dropdown\\\" ng-hide=\\\"accountData.stateProperties.hideMobileTabList\\\" ng-cloak> <div class=\\\"input-group-btn\\\" uib-dropdown> <button type=\\\"button\\\" uib-dropdown-toggle=\\\"\\\" class=\\\"input-dropdown-btn\\\" ng-disabled=\\\"disabled\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <span class=\\\"rbx-selection-label\\\" ng-bind=\\\"currentData.stateLabel\\\"></span> <span class=\\\"icon-down-16x16\\\"></span> </button> <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\" uib-dropdown-menu> <li ng-repeat=\\\"tab in accountsTabs\\\"> <a ng-bind=\\\"tab.label\\\" ui-sref=\\\"{{ tab.name }}\\\"></a> </li> </ul> </div> </div> </div> </div> <div id=\\\"settings-container\\\"> <div class=\\\"left-navigation\\\"> <ul id=\\\"vertical-menu\\\" class=\\\"menu-vertical submenus\\\" role=\\\"tablist\\\" ng-init=\\\"currentData.activeTab\\\" ng-cloak> <li class=\\\"menu-option\\\" ng-repeat=\\\"tab in accountsTabs\\\" ng-class=\\\"{'active': currentData.activeTab == tab.name}\\\"> <a class=\\\"menu-option-content\\\" ui-sref=\\\"{{tab.name}}\\\"> <span class=\\\"font-caption-header\\\" ng-bind=\\\"tab.label\\\"></span> </a> </li> </ul> </div> <div class=\\\"tab-content rbx-tab-content\\\" ng-controller=\\\"accountsContentController\\\"> <div account-pin-status></div> <div ui-view></div> </div> </div> </div>\";","module.exports = CoreRobloxUtilities;","module.exports = CoreUtilities;","module.exports = HeaderScripts;","module.exports = Roblox;","module.exports = angular;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { httpService } from 'core-utilities';\n\nconst notificationSettingsAuthority = (() => {\n  let isInitialized = false;\n  const successStatue = 'Success';\n\n  let canToggleMobilePushNotificationSettings = false;\n  let notificationsDomain = '';\n  const loadSettings = () => {\n    const settings = document.getElementById('notification-settings');\n    canToggleMobilePushNotificationSettings = settings.getAttribute(\n      'data-can-toggle-mobile-push-notifications'\n    );\n    notificationsDomain = settings.getAttribute('data-notifications-domain');\n  };\n\n  const initialize = () => {\n    loadSettings();\n    isInitialized = true;\n  };\n\n  const canToggleMobilePushNotifications = () => {\n    return canToggleMobilePushNotificationSettings;\n  };\n\n  const deregisterCurrentDevice = (onSuccess, onFailure) => {\n    const urlConfig = {\n      url: `${notificationsDomain}/v2/push-notifications/deregister-current-device`,\n      withCredentials: true\n    };\n    httpService.post(urlConfig).then(\n      successResponse => {\n        const { data: msg } = successResponse;\n        if (msg?.statusMessage === successStatue) {\n          if (onSuccess && typeof onSuccess === 'function') {\n            onSuccess(true);\n          }\n        }\n      },\n      e => {\n        if (onFailure && typeof onFailure === 'function') {\n          onFailure(e);\n        }\n      }\n    );\n  };\n\n  const isPushEnabled = callback => {\n    const urlConfig = {\n      url: `${notificationsDomain}/v2/push-notifications/get-current-device-destination`,\n      withCredentials: true\n    };\n    httpService.get(urlConfig).then(\n      successResponse => {\n        const { data: response } = successResponse;\n        if (response?.destination) {\n          callback(true);\n        } else {\n          callback(false);\n        }\n      },\n      failureResponse => {\n        console.log(failureResponse);\n      }\n    );\n  };\n  initialize();\n  return {\n    initialize,\n    isPushEnabled,\n    canToggleMobilePushNotifications,\n    deregisterCurrentDevice\n  };\n})();\n\nexport default notificationSettingsAuthority;\n","import angular from 'angular';\nimport { importFilesUnderPath, templateCacheGenerator } from 'roblox-es6-migration-helper';\n\nimport notificationSettingsAuthority from '../../core/notificationSettings/notificationSettingsAuthority';\n\nimport accountSettingsModule from './accountSettingsModule';\n\nimport '../../../css/accountSettings/accountSettings.scss';\n\nwindow.Roblox.NotificationSettingsAuthority = notificationSettingsAuthority;\n\n// import all other js files for avatarModule\nimportFilesUnderPath(require.context('./constants/', true, /\\.js$/));\nimportFilesUnderPath(require.context('./controllers/', true, /\\.js$/));\nimportFilesUnderPath(require.context('./directives/', true, /\\.js$/));\nimportFilesUnderPath(require.context('./services/', true, /\\.js$/));\nimportFilesUnderPath(require.context('./components/', true, /\\.js$/));\n\nconst templateContext = require.context('./', true, /\\.html$/);\nconst templates = templateCacheGenerator(angular, 'accountSettingsTemplates', templateContext);\n\n// self manual initialization\nangular.element(() => {\n  angular.bootstrap('#user-account', [accountSettingsModule.name, templates.name]);\n});\n\nexport default accountSettingsModule;\n"],"sourceRoot":""}