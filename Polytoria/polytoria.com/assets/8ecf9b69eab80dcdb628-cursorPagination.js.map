{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"CoreUtilities\"","webpack:///external \"angular\"","webpack:///./js/angular/cursorPagination/cursorPaginationEntry.js","webpack:///./js/angular/cursorPagination sync \\.html$","webpack:///./js/angular/cursorPagination/directives/templates/cursorPagination.html","webpack:///./js/angular/cursorPagination/constants sync \\.js$","webpack:///./js/angular/cursorPagination/constants/cursorPagiantionResource.js","webpack:///./js/angular/cursorPagination/cursorPaginationModule.js","webpack:///./js/angular/cursorPagination/constants/cursorPaginationConstants.js","webpack:///./js/angular/cursorPagination/directives sync \\.js$","webpack:///./js/angular/cursorPagination/directives/cursorPaginationDirective.js","webpack:///./js/angular/cursorPagination/services sync \\.js$","webpack:///./js/angular/cursorPagination/services/cursorPaginationService.js","webpack:///./js/angular/cursorPagination/services/cursorPaginationServiceV2.js","webpack:///C:/teamcity-agent/work/c194f3c5e52e6ac4/WebApps/node_modules/roblox-es6-migration-helper/index.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","exports","CoreUtilities","angular","templateContext","require","templateCacheGenerator","importFilesUnderPath","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","resolve","cursorPaginationResource","templateUrls","cursorPagination","cursorPaginationModule","constant","config","$qProvider","languageResourceProvider","isFunction","errorOnUnhandledRejections","setLanguageKeysFromFile","Roblox","Lang","ControlsResources","cursorPaginationConstants","restrict","templateUrl","link","$scope","$element","$attrs","cursorPaging","directive","cursorPaginationService","$q","$rootScope","httpService","cacheService","busyPromise","defer","reject","message","getDataListFromResponseMethods","defaultV1","response","data","getNextPageCursorFromResponseMethods","nextPageCursor","getErrorsFromResponseMethods","errors","getQueryParametersMethods","params","sortOrder","Asc","Desc","createPager","options","currentPageNumber","debounce","pageParameters","nextPageCursors","cache","createPaginationCache","pageSize","firstPageCursor","getCacheKey","buildKey","getCacheKeyParameters","loadPage","pageNumber","cacheKey","items","getPage","deferred","promise","then","loadSuccess","loadError","length","cursorName","beforeLoad","urlConfig","url","getRequestUrl","getQueryParameters","httpGet","getNextPageCursorFromResponse","getDataListFromResponse","list","Array","isArray","append","getErrorsFromResponse","canReloadCurrentPage","getLength","hasCurrentPage","limitName","sortOrderName","this","loadPageSize","isBusy","setPagingParameter","getPagingParameter","getCurrentPageNumber","removeCurrentPage","canRemoveItem","removePage","removeItemAtIndex","index","removeAtIndex","loadNextPage","canLoadNextPage","loadPreviousPage","canLoadPreviousPage","loadFirstPage","canLoadFirstPage","clear","hasNextPage","service","cursorPaginationServiceV2","wrapPromise","catch","pager","CursorPager","getItems","getStatus","status","setPagingParametersAndLoadFirstPage","newPagingParameters","getPagingParameters","pagingParameters","reloadCurrentPage","getCurrentPage","camelToKebab","str","replace","toLowerCase","extractHtmlFileName","split","pop","ES6MigrationHelper","ctx","forEach","moduleName","mainTplCtx","commonTplCtx","run","tc","name","put","removeScriptTag"],"mappings":"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","file":"cursorPagination.bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 225);\n","module.exports = CoreUtilities;","module.exports = angular;","import angular from 'angular';\r\nimport { importFilesUnderPath, templateCacheGenerator } from 'roblox-es6-migration-helper';\r\n\r\nlet templateContext = require.context(\"../cursorPagination/\", true, /\\.html$/);\r\ntemplateCacheGenerator(angular, 'cursorPaginationHtmlTemplate', templateContext);\r\n\r\n//import main module definition.\r\nimport cursorPaginationModule from './cursorPaginationModule';\r\n\r\nimportFilesUnderPath(require.context(\"../cursorPagination/constants/\", true, /\\.js$/));\r\nimportFilesUnderPath(require.context(\"../cursorPagination/directives/\", true, /\\.js$/));\r\nimportFilesUnderPath(require.context(\"../cursorPagination/services/\", true, /\\.js$/));\r\n","var map = {\n\t\"./directives/templates/cursorPagination.html\": 227\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 226;","module.exports = \"<ul class=\\\"pager\\\"> <li class=\\\"pager-prev\\\" ng-class=\\\"{ disabled: !cursorPaging.canLoadPreviousPage() }\\\"> <a ng-click=\\\"cursorPaging.loadPreviousPage()\\\"><span class=\\\"icon-back\\\"></span></a> </li> <li> <span ng-bind=\\\"'Label.CurrentPage' | translate:{ currentPage: cursorPaging.getCurrentPageNumber() }\\\"></span> </li> <li class=\\\"pager-next\\\" ng-class=\\\"{ disabled: !cursorPaging.canLoadNextPage() }\\\"> <a ng-click=\\\"cursorPaging.loadNextPage()\\\"><span class=\\\"icon-next\\\"></span></a> </li> </ul>\";","var map = {\n\t\"./cursorPagiantionResource.js\": 229,\n\t\"./cursorPaginationConstants.js\": 230\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 228;","import cursorPaginationModule from \"../cursorPaginationModule\";\r\n\r\nconst cursorPaginationResource = {\r\n    templateUrls: {\r\n        cursorPagination: \"cursor-pagination\"\r\n    }\r\n};\r\n\r\ncursorPaginationModule.constant(\"cursorPaginationResource\", cursorPaginationResource);\r\nexport default cursorPaginationResource;","import angular from 'angular';\r\n\r\nlet cursorPagination = angular.module(\"cursorPagination\", [\"cursorPaginationHtmlTemplate\"])\r\n    .config(['$qProvider', 'languageResourceProvider', function ($qProvider, languageResourceProvider) {\r\n        /**\r\n            * This here for mask error coming from Angular 1.6.3 upgrade\r\n            * http://stackoverflow.com/questions/41281515/possibly-unhandled-rejection-in-angular-1-6/41283198#41283198\r\n            */\r\n        if (angular.isFunction($qProvider.errorOnUnhandledRejections)) {\r\n            $qProvider.errorOnUnhandledRejections(false);\r\n        }\r\n        languageResourceProvider.setLanguageKeysFromFile(Roblox.Lang.ControlsResources);\r\n    }]);\r\n\r\nexport default cursorPagination;","import cursorPaginationModule from \"../cursorPaginationModule\";\r\nimport { cursorPaginationConstants } from \"core-utilities\";\r\n\r\ncursorPaginationModule.constant(\"cursorPaginationConstants\", cursorPaginationConstants);\r\nexport default cursorPaginationConstants;","var map = {\n\t\"./cursorPaginationDirective.js\": 232\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","import cursorPaginationModule from \"../cursorPaginationModule\";\r\n/*\r\n    When using this directive make sure the parent $scope has a cursorPaginationService pager indexed by the cursor-pagination attribute value\r\n*/\r\nfunction cursorPagination(cursorPaginationResource) {\r\n    \"ngInject\";\r\n    return {\r\n        restrict: \"A\",\r\n        templateUrl: cursorPaginationResource.templateUrls.cursorPagination,\r\n        link: function ($scope, $element, $attrs) {\r\n            $scope.cursorPaging = $scope[$attrs.cursorPagination];\r\n        }\r\n    };\r\n}\r\n\r\ncursorPaginationModule.directive(\"cursorPagination\", cursorPagination);\r\n\r\nexport default cursorPagination;","var map = {\n\t\"./cursorPaginationService.js\": 234,\n\t\"./cursorPaginationServiceV2.js\": 235\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 233;","import cursorPaginationModule from \"../cursorPaginationModule\";\r\n\r\nfunction cursorPaginationService($q, $rootScope, httpService, cacheService) {\r\n    \"ngInject\";\r\n    var defaultLimitName = \"limit\";\r\n    var defaultCursorName = \"cursor\";\r\n    var defaultSortOrderName = \"sortOrder\";\r\n\r\n    var busyPromise = $q.defer();\r\n    busyPromise.reject([{\r\n        code: -1,\r\n        message: \"Busy\"\r\n    }]);\r\n\r\n\r\n    return {\r\n        getDataListFromResponseMethods: {\r\n            defaultV1: function (response) {\r\n                return $q(function (resolve, reject) {\r\n                    resolve(response.data);\r\n                });\r\n            }\r\n        },\r\n\r\n        getNextPageCursorFromResponseMethods: {\r\n            defaultV1: function (data) {\r\n                return data.nextPageCursor;\r\n            }\r\n        },\r\n\r\n        getErrorsFromResponseMethods: {\r\n            defaultV1: function (data) {\r\n                return data.errors;\r\n            }\r\n        },\r\n\r\n        getQueryParametersMethods: {\r\n            defaultV1: function (params) {\r\n                return params;\r\n            }\r\n        },\r\n\r\n        sortOrder: {\r\n            Asc: \"Asc\",\r\n            Desc: \"Desc\"\r\n        },\r\n\r\n        /*\r\n            options {\r\n                getDataListFromResponse: function(response) // should return a $q promise that resolves to an array of items from response [optional: default to getDataListFromResponseMethods.defaultV1]\r\n                getNextPageCursorFromResponse: function(response) // should return cursor string for next page of results [optional: defaults to getNextPageCursorFromResponseMethods.defaultV1]\r\n                getErrorsFromResponse: function(response) // should return an array of errors in the API standard response format {code:000,message:\"...\"} [optional: defaults to the getErrorsFromResponseMethods.defaultV1]\r\n                getQueryParameters: function(pagingParameters) // should return an object of query string parameters [optional: defaults to getQueryParametersMethods.defaultV1]\r\n                getRequestUrl: function(pagingParameters) // should return the url used to load the page of results [required]\r\n                getCacheKeyParameters: function(pagingParameters) // should return parameters used to build a cache key for results [required]\r\n\r\n                beforeLoad: function(pageNumber, pageParameters) // when specified fires before http request (does not fire if page is cached) [optional]\r\n                loadSuccess: function(items) // when passed will fire when a page is requested, and loaded (either from the cache, or http request) [optional]\r\n                loadError: function(errors) // when passed will fire when an http request fails to load a page (does not fire if page is cached) [optional]\r\n\r\n                limitName: \"...\" // should be the name of the items per page request parameter (e.g. \"itemsPerPage\", e.g. \"limit\") [defaults to defaultLimitName]\r\n                cursorName: \"...\" // should be the name of the cursor request parameter (e.g. \"cursor\") [defaults to defaultCursorName]\r\n                sortOrderName: \"...\" // should be the name of the sort order request parameter (e.g. \"sortOrder\") [defaults to defaultSortOrderName]\r\n                sortOrder: \"Asc\" // should be the default sort order of the paged request, options included in cursorPaginationService.sortOrder [defaults to cursorPaginationService.sortOrder.Asc]\r\n                firstPageCursor: \"\", // the cursor for the first page (e.g. \"0\") [defaults to empty string]\r\n\r\n                pageSize: 000 // this should be the number of items each page should have [required] (cannot be larger than loadPageSize)\r\n                loadPageSize: 000 // how many results should be loaded at once to fill these pages [required, must be higher than pageSize] (be careful: Allowed values: 10, 25, 50, 100 only)\r\n            }\r\n            \r\n            bool canReloadCurrentPage() // whether or not the pager can reload the current page of items after the cache was updated (returns hasCurrentPage result)\r\n            bool hasCurrentPage() // will return false if there are no elements available for the current page and it's not the first page, true otherwise\r\n\r\n            returns {\r\n                bool isBusy: function() // whether or not the pager is currently loading something\r\n\r\n                void setPagingParameter(string key, any value) // sets a paging parameter, if value is undefined or null will delete the paging parameter\r\n                any getPagingParameter(string key) // returns the paging parameter with the key 'key'\r\n\r\n                int getCurrentPageNumber() // gets the current page number\r\n\r\n                bool removeItemAtIndex(int index) // removes the item at the specified index and reloads page\r\n                bool loadNextPage() // loads the next page of items (returns canLoadNextPage result)\r\n                bool loadPreviousPage() // loads the previous page of items (returns canLoadPreviousPage result)\r\n                bool loadFirstPage() // clears the cache, then loads the first page of items (returns canLoadFirstPage result)\r\n\r\n                bool canRemoveItem() // whether or not the pager can remove an item (will return false if it's busy)\r\n                bool canLoadNextPage() // whether or not the pager can load the next page of items (will return false if it's busy or there is no next page)\r\n                bool canLoadPreviousPage() // whether or not the pager can load the previous page of items (will be false if it's busy or there is no previous page)\r\n                bool canLoadFirstPage() // whether or not the pager can load the first page of items (will return false if it's busy)\r\n                bool hasNextPage() // whether or not the pager has reached the end of the pages of items (will return false if it has)\r\n\r\n                this beforeLoad(function callBack(event, int pageNumber, object pageParameters)) // adds an event listener with callBack for when a page is about to be loaded\r\n                this pageLoaded(function callBack(event, int pageNumber, array dataList, object response)) // adds an event listener with callBack for when a page is successfully loaded\r\n                this loadError(function callBack(event, array errors)) // adds an event listener with callBack for when a page fails to load\r\n            }\r\n        */\r\n        createPager: function (options) {\r\n            var currentPageNumber = 0;\r\n            var debounce = false;\r\n            var pageParameters = {};\r\n            var nextPageCursors = {};\r\n            var cache = cacheService.createPaginationCache(options.pageSize);\r\n            var firstPageCursor = typeof (options.firstPageCursor) === \"string\" ? options.firstPageCursor : \"\";\r\n\r\n            options.limitName = options.limitName || defaultLimitName;\r\n            options.cursorName = options.cursorName || defaultCursorName;\r\n            options.sortOrderName = options.sortOrderName || defaultSortOrderName;\r\n            options.sortOrder = options.sortOrder || this.sortOrder.Asc;\r\n\r\n            pageParameters[options.cursorName] = firstPageCursor;\r\n            pageParameters[options.sortOrderName] = options.sortOrder;\r\n            pageParameters[options.limitName] = options.loadPageSize;\r\n            options.getDataListFromResponse = options.getDataListFromResponse || this.getDataListFromResponseMethods.defaultV1;\r\n            options.getNextPageCursorFromResponse = options.getNextPageCursorFromResponse || this.getNextPageCursorFromResponseMethods.defaultV1;\r\n            options.getErrorsFromResponse = options.getErrorsFromResponse || this.getErrorsFromResponseMethods.defaultV1;\r\n            options.getQueryParameters = options.getQueryParameters || this.getQueryParametersMethods.defaultV1;\r\n            options.loadSuccess = options.loadSuccess || function () { };\r\n            options.loadError = options.loadError || function () { };\r\n\r\n\r\n            function getCacheKey() {\r\n                return cacheService.buildKey(options.getCacheKeyParameters(pageParameters));\r\n            }\r\n\r\n            function loadPage(pageNumber) {\r\n                var cacheKey = getCacheKey();\r\n                var items = cache.getPage(cacheKey, pageNumber);\r\n                var deferred = $q.defer();\r\n\r\n                deferred.promise.then(options.loadSuccess, options.loadError);\r\n                if (items.length === options.pageSize || typeof (nextPageCursors[cacheKey]) !== \"string\") {\r\n                    currentPageNumber = pageNumber;\r\n                    deferred.resolve(items);\r\n                    return deferred.promise;\r\n                }\r\n\r\n                pageParameters[options.cursorName] = nextPageCursors[cacheKey];\r\n                if (options.beforeLoad) {\r\n                    options.beforeLoad(pageNumber, pageParameters);\r\n                }\r\n\r\n                debounce = true;\r\n                var urlConfig = {\r\n                    url: options.getRequestUrl(pageParameters)\r\n                }\r\n                var params = options.getQueryParameters(pageParameters);\r\n                httpService.httpGet(urlConfig, params).then(function (data) {\r\n                    currentPageNumber = pageNumber;\r\n                    nextPageCursors[cacheKey] = options.getNextPageCursorFromResponse(data);\r\n                    options.getDataListFromResponse(data).then(function (list) {\r\n                        if (Array.isArray(list)) {\r\n                            cache.append(cacheKey, list);\r\n                            items = cache.getPage(cacheKey, pageNumber);\r\n                            debounce = false;\r\n                            deferred.resolve(items);\r\n                        } else {\r\n                            debounce = false;\r\n                            deferred.reject([{\r\n                                code: 0,\r\n                                message: \"data pulled from response not array\"\r\n                            }]);\r\n                        }\r\n                    }, function () {\r\n                        debounce = false;\r\n                        deferred.reject();\r\n                    });\r\n                }, function (data) {\r\n                    debounce = false;\r\n                    deferred.reject(options.getErrorsFromResponse(data || {}));\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            function canReloadCurrentPage() {\r\n                return hasCurrentPage();\r\n            }\r\n\r\n            function hasCurrentPage() {\r\n                var cacheKey = getCacheKey();\r\n\r\n                // If it's the first page, we can reload it regardless of cache size\r\n                if (currentPageNumber === 1) {\r\n                    return true;\r\n                }\r\n\r\n                // Otherwise, make sure we have enough in the cache\r\n                return cache.getLength(cacheKey) > (currentPageNumber - 1) * options.pageSize;\r\n            }\r\n\r\n\r\n            return {\r\n                isBusy: function () {\r\n                    return debounce;\r\n                },\r\n\r\n                setPagingParameter: function (key, value) {\r\n                    if (value === undefined || value === null) {\r\n                        delete pageParameters[key];\r\n                    } else {\r\n                        pageParameters[key] = value;\r\n                    }\r\n                },\r\n\r\n                getPagingParameter: function (key) {\r\n                    return pageParameters[key];\r\n                },\r\n\r\n                getCurrentPageNumber: function () {\r\n                    return currentPageNumber;\r\n                },\r\n\r\n                removeCurrentPage: function () {\r\n                    // Removes the elements on the current page and reloads\r\n                    if (!this.canRemoveItem()) {\r\n                        return busyPromise.promise;\r\n                    }\r\n\r\n                    var cacheKey = getCacheKey();\r\n                    cache.removePage(cacheKey, currentPageNumber);\r\n\r\n                    if (canReloadCurrentPage()) {\r\n                        return loadPage(currentPageNumber);\r\n                    }\r\n\r\n                    // Otherwise, load previous page\r\n                    return loadPage(currentPageNumber - 1);\r\n                },\r\n\r\n                removeItemAtIndex: function (index) {\r\n                    // Removes an element at the specified index from the cache\r\n                    // and reloads the current page\r\n                    if (!this.canRemoveItem()) {\r\n                        return busyPromise.promise;\r\n                    }\r\n\r\n                    var cacheKey = getCacheKey();\r\n                    cache.removeAtIndex(cacheKey, currentPageNumber, index);\r\n\r\n                    if (canReloadCurrentPage()) {\r\n                        return loadPage(currentPageNumber);\r\n                    }\r\n\r\n                    // Otherwise, load previous page\r\n                    return loadPage(currentPageNumber - 1);\r\n                },\r\n\r\n                loadNextPage: function () {\r\n                    if (!this.canLoadNextPage()) {\r\n                        return busyPromise.promise;\r\n                    }\r\n                    return loadPage(currentPageNumber + 1);\r\n                },\r\n\r\n                loadPreviousPage: function () {\r\n                    if (!this.canLoadPreviousPage()) {\r\n                        return busyPromise.promise;\r\n                    }\r\n                    return loadPage(currentPageNumber - 1);\r\n                },\r\n\r\n                loadFirstPage: function () {\r\n                    if (!this.canLoadFirstPage()) {\r\n                        return busyPromise.promise;\r\n                    }\r\n                    // When loading the first page clear the cache, assume we're starting over.\r\n                    var cacheKey = getCacheKey();\r\n                    cache.clear(cacheKey);\r\n                    nextPageCursors[cacheKey] = firstPageCursor;\r\n                    return loadPage(1);\r\n                },\r\n\r\n                canRemoveItem: function () {\r\n                    return !this.isBusy();\r\n                },\r\n\r\n                canLoadNextPage: function () {\r\n                    if (this.isBusy()) {\r\n                        return false;\r\n                    }\r\n                    return this.hasNextPage();\r\n                },\r\n\r\n                hasNextPage: function () {\r\n                    var cacheKey = getCacheKey();\r\n                    if (cache.getLength(cacheKey) > currentPageNumber * options.pageSize) {\r\n                        // If we have enough in the cache we're good to load the next page\r\n                        return true;\r\n                    }\r\n                    // The cursor for the next page must be defined as a string before we can load the next page with it.\r\n                    return typeof (nextPageCursors[cacheKey]) === \"string\";\r\n                },\r\n\r\n                canLoadPreviousPage: function () {\r\n                    return !this.isBusy() && currentPageNumber > 1;\r\n                },\r\n\r\n                canLoadFirstPage: function () {\r\n                    return !this.isBusy();\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\ncursorPaginationModule.service(\"cursorPaginationService\", cursorPaginationService);\r\n\r\nexport default cursorPaginationService;\r\n","import { CursorPager } from \"core-utilities\";\r\nimport cursorPaginationModule from \"../cursorPaginationModule\";\r\n\r\n// Angular wrapper for cursorPaginationService\r\nfunction cursorPaginationServiceV2($q) {\r\n    \"ngInject\";\r\n\r\n    const wrapPromise = function (promise) {\r\n        return $q(function (resolve, reject) {\r\n            promise.then(resolve).catch(reject);\r\n        });\r\n    };\r\n\r\n    return {\r\n        createPager: function (options) {\r\n            var pager = new CursorPager(options.pageSize, options.loadPageSize, options.getItems);\r\n\r\n            return {\r\n                getStatus: function () {\r\n                    return pager.status;\r\n                },\r\n\r\n                isBusy: function () {\r\n                    return pager.isBusy;\r\n                },\r\n\r\n                setPagingParametersAndLoadFirstPage: function (newPagingParameters) {\r\n                    return wrapPromise(pager.setPagingParametersAndLoadFirstPage(newPagingParameters));\r\n                },\r\n\r\n                getPagingParameters: function () {\r\n                    return pager.pagingParameters;\r\n                },\r\n\r\n                getCurrentPageNumber: function () {\r\n                    return pager.currentPageNumber;\r\n                },\r\n\r\n                reloadCurrentPage: function () {\r\n                    return wrapPromise(pager.reloadCurrentPage());\r\n                },\r\n\r\n                getCurrentPage: function () {\r\n                    return wrapPromise(pager.getCurrentPage());\r\n                },\r\n\r\n                loadNextPage: function () {\r\n                    return wrapPromise(pager.loadNextPage());\r\n                },\r\n\r\n                loadPreviousPage: function () {\r\n                    return wrapPromise(pager.loadPreviousPage());\r\n                },\r\n\r\n                loadFirstPage: function () {\r\n                    return wrapPromise(pager.loadFirstPage());\r\n                },\r\n\r\n                hasNextPage: function () {\r\n                    return pager.hasNextPage;\r\n                },\r\n\r\n                canLoadNextPage: function () {\r\n                    return pager.canLoadNextPage;\r\n                },\r\n\r\n                canLoadPreviousPage: function () {\r\n                    return pager.canLoadPreviousPage;\r\n                },\r\n\r\n                canLoadFirstPage: function () {\r\n                    return pager.canLoadFirstPage;\r\n                },\r\n\r\n                canReloadCurrentPage: function () {\r\n                    return pager.canReloadCurrentPage;\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\ncursorPaginationModule.service(\"cursorPaginationServiceV2\", cursorPaginationServiceV2);\r\nexport default cursorPaginationServiceV2;\r\n","\r\nfunction camelToKebab(str) {\r\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\nfunction extractHtmlFileName(str) {\r\n    let file = str.split('/').pop();\r\n    return file.replace('.html', '');\r\n}\r\n\r\n//we don't touch common template code is it might break other consumers\r\n//so we just remove the surrounding script tags.\r\nfunction removeScriptTag(str) {\r\n    var scriptTagReg = /<\\/?script[^>]*>/gi;\r\n    return str.replace(scriptTagReg, '');\r\n}\r\n\r\nconst ES6MigrationHelper = {\r\n\r\n    importFilesUnderPath: (ctx) => {\r\n        ctx.keys().forEach(ctx);\r\n    },\r\n\r\n    templateCacheGenerator: (angular, moduleName, mainTplCtx, commonTplCtx) => {\r\n        return angular.module(moduleName, [])\r\n            .run(['$templateCache', function (tc) {\r\n                if (mainTplCtx) {\r\n                    mainTplCtx.keys().forEach(key => {\r\n                        let name = camelToKebab(extractHtmlFileName(key));\r\n                        tc.put(name, mainTplCtx(key));\r\n                    });\r\n                }\r\n                if (commonTplCtx) {\r\n                    commonTplCtx.keys().forEach(key => {\r\n                        let name = camelToKebab(extractHtmlFileName(key));\r\n                        tc.put(name, removeScriptTag(commonTplCtx(key)));\r\n                    });\r\n                }\r\n            }]);\r\n    }\r\n};\r\n\r\nmodule.exports = ES6MigrationHelper;"],"sourceRoot":""}